%implements s0_b0_ftyoe_Outputs "C"

%function Outputs(block, system) Output
%assign cfgTxt = ""
%openfile cfgTxt
%assign localVarDecl = ""
%openfile localVarDecl

int32_T shiftReg[16];
int32_T RSDecoder_OmegaZ[10];
int32_T RSDecoder_PsiZ[5];
int32_T RSDecoder_PsiZStar[5];
int32_T RSDecoder_TempVec2t1[5];
int32_T RSDecoder_Errloc[4];
int32_T RSDecoder_Syndrome[4];
int32_T RSDecoder_OmegaZActual_idx_0;
int32_T Temp4;
int32_T decoder_in_tmp;
int32_T iIdx;
int32_T inv;
int32_T j;
%closefile localVarDecl
%<SLibCG_TrackDW(0)>\
%<SLibCG_TrackEO(5)>\
%<SLibCG_TrackEO(4)>\
%<SLibCG_TrackEO(3)>\
%<SLibCG_TrackEO(2)>\
%<SLibCG_TrackEO(1)>\
%<SLibCG_TrackEO(0)>\
%<SLibCG_TrackEI(0)>\
/* {S!d34}S-Function (scompskdemod): '<S3>/QPSK Demodulator Baseband' incorporates:
 *  Inport: '<Root>/rx_frame'
 */
/*@>26818*/for (/*@>66641*/iIdx = /*@>66640*/0; /*@>6664b*/iIdx < /*@>66649*/8400; /*@>66647*/iIdx/*@>6664f*/++) {
    /*@>3fcbd*/if (/*@>5f125*/rtU_rx_frame/*@>5f127*/[/*@>5f123*/iIdx/*@>5f121*/ + /*@>5f124*/64].re/*@>4106*/ > /*@>30de8*/0.0) {
        /*@>3fcd1*/if (/*@>5f135*/rtU_rx_frame/*@>5f137*/[/*@>5f133*/iIdx/*@>5f131*/ + /*@>5f134*/64].im/*@>410c*/ >= /*@>30de9*/0.0) {
            /*@>3fcd5*/RSDecoder_OmegaZActual_idx_0/*@>3fcd4*/ = /*@>65ff5*/0;
        } else {
            /*@>3fcc1*/RSDecoder_OmegaZActual_idx_0/*@>3fcc0*/ = /*@>65ff2*/3;
        }
    } else /*@>3fccc*/if (/*@>5f12d*/rtU_rx_frame/*@>5f12f*/[/*@>5f12b*/iIdx/*@>5f129*/ + /*@>5f12c*/64].re/*@>4114*/ < /*@>30dee*/0.0) {
        /*@>3fcdb*/if (/*@>5f145*/rtU_rx_frame/*@>5f147*/[/*@>5f143*/iIdx/*@>5f141*/ + /*@>5f144*/64].im/*@>411a*/ <= /*@>30def*/0.0) {
            /*@>3fcdf*/RSDecoder_OmegaZActual_idx_0/*@>3fcde*/ = /*@>65ffe*/2;
        } else {
            /*@>3fcd0*/RSDecoder_OmegaZActual_idx_0/*@>3fccf*/ = /*@>65ffb*/1;
        }
    } else /*@>3fcd6*/if (/*@>5f13d*/rtU_rx_frame/*@>5f13f*/[/*@>5f13b*/iIdx/*@>5f139*/ + /*@>5f13c*/64].im/*@>4122*/ < /*@>30df2*/0.0) {
        /*@>3fcda*/RSDecoder_OmegaZActual_idx_0/*@>3fcd9*/ = /*@>65ff8*/3;
    } else {
        /*@>3117e*/RSDecoder_OmegaZActual_idx_0/*@>2bc34*/ = (/*@>5f14d*/rtU_rx_frame/*@>5f14f*/[/*@>5f14b*/iIdx/*@>5f149*/ + /*@>5f14c*/64].im/*@>4129*/ > /*@>30df4*/0.0);
    }
    /*@>30df7*/RSDecoder_OmegaZActual_idx_0/*@>66651*/ ^= /*@>310e8*/RSDecoder_OmegaZActual_idx_0/*@>e01b*/ >> /*@>310ea*/1;
    /*@>46d0e*/decoder_in_tmp/*@>46d10*/ = /*@>3180f*/iIdx/*@>319f6*/ << /*@>319f5*/1;
    /*@>3180d*/rtY_decoder_in/*@>2d019*/[/*@>46d12*/decoder_in_tmp/*@>2d01b*/ + /*@>31812*/1]/*@>2d018*/ = /*@>31813*/RSDecoder_OmegaZActual_idx_0/*@>2d025*/ % /*@>31815*/2;
    /*@>3181b*/rtY_decoder_in/*@>2d034*/[decoder_in_tmp]/*@>2d033*/ = (/*@>370e0*/RSDecoder_OmegaZActual_idx_0/*@>370de*/ >> /*@>370e1*/1)/*@>2d040*/ % /*@>31822*/2;
}
/* {S!d36}S-Function (scominttobit): '<S6>/Bit to Integer Converter' incorporates:
 *  S-Function (scompskdemod): '<S3>/QPSK Demodulator Baseband'
 */
/* Bit to Integer Conversion */
/*@>30df9*/iIdx/*@>41c4*/ = /*@>65fef*/0;
/*@>267cf*/for (/*@>66630*/RSDecoder_OmegaZActual_idx_0 = /*@>6662f*/0; /*@>6663a*/RSDecoder_OmegaZActual_idx_0 < /*@>66638*/5600; /*@>66636*/RSDecoder_OmegaZActual_idx_0/*@>66650*/++) {
    /* Input bit order is MSB first */
    /*@>60f93*/rtDW->/*@>6762d*/BittoIntegerConverter/*@>40124*/[/*@>40127*/RSDecoder_OmegaZActual_idx_0]/*@>2cff9*/ = (/*@>37eca*/(uint32_T)/*@>5f153*/rtY_decoder_in/*@>5f155*/[/*@>5f152*/iIdx]/*@>370f7*/ << /*@>370fa*/1U/*@>370f6*/ | /*@>370fb*/(uint32_T)/*@>5f15b*/rtY_decoder_in/*@>5f15d*/[/*@>5f159*/iIdx/*@>5f157*/ + /*@>5f15a*/1])/*@>31a06*/ << /*@>31803*/1U/*@>31a05*/ | /*@>31a08*/(uint32_T)/*@>5f163*/rtY_decoder_in/*@>5f165*/[/*@>5f161*/iIdx/*@>5f15f*/ + /*@>5f162*/2];
    /*@>31808*/iIdx/*@>66652*/ += /*@>3180c*/3;
}
/* {E!d36}End of S-Function (scominttobit): '<S6>/Bit to Integer Converter' */

/* {S!d38}S-Function (scomberlekamp): '<S6>/RS Decoder' incorporates:
 *  S-Function (scominttobit): '<S6>/Bit to Integer Converter'
 */
/* start of COMM_DoBerlekamp()  */
/* The function uses the algorithm  described */
/* in Clark and Cain, Error-Correction Coding for Digital Communications, 1981 */
/* PART I - ERROR LOCATOR POLYNOMIAL COMPUTATION */
/* Compute syndrome series : length = 2*t */
/*@>60f9c*/rtDW->/*@>67630*/RSDecoder_GammaZ/*@>4348*/[/*@>30e0d*/0U]/*@>4349*/ = /*@>66001*/1;
/*@>60fa5*/rtDW->/*@>67633*/RSDecoder_GammaZ/*@>2cecc*/[/*@>31825*/1]/*@>2cecb*/ = /*@>66004*/0;
/*@>60fae*/rtDW->/*@>67636*/RSDecoder_GammaZ/*@>2cef9*/[/*@>31828*/2]/*@>2cef8*/ = /*@>66007*/0;
/*@>60fb7*/rtDW->/*@>67639*/RSDecoder_GammaZ/*@>2cf26*/[/*@>3182b*/3]/*@>2cf25*/ = /*@>6600a*/0;
/*@>60fc0*/rtDW->/*@>6763c*/RSDecoder_GammaZ/*@>2cf53*/[/*@>3182e*/4]/*@>2cf52*/ = /*@>6600d*/0;
/*@>60fc9*/rtDW->/*@>6763f*/RSDecoder_GammaZTemp/*@>435a*/[/*@>30e12*/0U]/*@>435b*/ = /*@>66010*/1;
/*@>26070*/for (/*@>661e5*/iIdx = /*@>661e4*/0; /*@>661ef*/iIdx < /*@>661ed*/800; /*@>661eb*/iIdx/*@>66653*/++) {
    int32_T Temp3;
    int32_T noErrorStatus;
    int32_T temp;
    /*@>30e00*/noErrorStatus/*@>42f8*/ = /*@>66013*/1;
    /*  start of assignInputs(): Populate the codeword and erasure vectors with the proper data  */
    /* Assign message symbols. */
    /* If there are erasures, insert zeros in the erased positions. */
    /*@>46d1e*/RSDecoder_OmegaZActual_idx_0/*@>46d20*/ = /*@>30e03*/iIdx/*@>31a9d*/ * /*@>30e05*/7;
    /*@>60fe4*/rtDW->/*@>67642*/RSDecoder_CCode/*@>2cf6a*/[/*@>317c9*/0]/*@>2cf69*/ = /*@>2cf6e*/(int32_T)/*@>60feb*/rtDW->/*@>67645*/BittoIntegerConverter/*@>5f16b*/[/*@>5f168*/RSDecoder_OmegaZActual_idx_0];
    /*@>61006*/rtDW->/*@>6764b*/RSDecoder_CCode/*@>2cf87*/[/*@>317d9*/1]/*@>2cf86*/ = /*@>2cf8b*/(int32_T)/*@>6100d*/rtDW->/*@>6764e*/BittoIntegerConverter/*@>5f179*/[/*@>5f175*/RSDecoder_OmegaZActual_idx_0/*@>5f173*/ + /*@>5f176*/1];
    /*@>6101f*/rtDW->/*@>67654*/RSDecoder_CCode/*@>2cfa4*/[/*@>317e4*/2]/*@>2cfa3*/ = /*@>2cfa8*/(int32_T)/*@>61026*/rtDW->/*@>67657*/BittoIntegerConverter/*@>5f181*/[/*@>5f17d*/RSDecoder_OmegaZActual_idx_0/*@>5f17b*/ + /*@>5f17e*/2];
    /* Assign parity symbols, again accounting for erasures */
    /* no puncturing */
    /*  end of assignInputs()  */
    /* Initialize Gamma(Z) = 1 : ASCENDING ORDER.  length = 2t+1 */
    /*@>61053*/rtDW->/*@>67666*/RSDecoder_CCode/*@>2ceac*/[/*@>31823*/3]/*@>2ceab*/ = /*@>2ceb2*/(int32_T)/*@>6105a*/rtDW->/*@>67669*/BittoIntegerConverter/*@>5f195*/[RSDecoder_OmegaZActual_idx_0/*@>5f18f*/ + /*@>5f192*/3];
    /*@>61063*/rtDW->/*@>6766c*/RSDecoder_CCode/*@>2ced9*/[/*@>31826*/4]/*@>2ced8*/ = /*@>2cedf*/(int32_T)/*@>6106a*/rtDW->/*@>6766f*/BittoIntegerConverter/*@>5f19d*/[RSDecoder_OmegaZActual_idx_0/*@>5f197*/ + /*@>5f19a*/4];
    /*@>61073*/rtDW->/*@>67672*/RSDecoder_CCode/*@>2cf06*/[/*@>31829*/5]/*@>2cf05*/ = /*@>2cf0c*/(int32_T)/*@>6107a*/rtDW->/*@>67675*/BittoIntegerConverter/*@>5f1a5*/[RSDecoder_OmegaZActual_idx_0/*@>5f19f*/ + /*@>5f1a2*/5];
    /*@>6108c*/rtDW->/*@>6767b*/RSDecoder_CCode/*@>2cf33*/[/*@>3182c*/6]/*@>2cf32*/ = /*@>2cf39*/(int32_T)/*@>61093*/rtDW->/*@>6767e*/BittoIntegerConverter/*@>5f1b3*/[RSDecoder_OmegaZActual_idx_0/*@>5f1ad*/ + /*@>5f1b0*/6];
    /* Calculate the erasure polynomial GammaZ.GammaZ is the set of coefficients */
    /* of the erasure polynomial in ASCENDING order, because the syndrome is */
    /* calculated in ascending order as well. */
    /*  start of calculateGammaZ() -- Calculate the erasure locator polynomial */
    /*  end of calculateGammaZ()  */
    /* Calculate the syndrome by evaluating the codeword at successive */
    /* powers of alpha.  The syndrome is in ASCENDING order. */
/*@>265c1*/    for (/*@>66610*/RSDecoder_OmegaZActual_idx_0 = /*@>6660f*/0; /*@>6661a*/RSDecoder_OmegaZActual_idx_0 < /*@>66618*/4; /*@>66616*/RSDecoder_OmegaZActual_idx_0/*@>6665c*/++) {
        /*@>30e40*/Temp3/*@>442d*/ = /*@>66019*/0;
/*@>2662d*/        for (/*@>66621*/j = /*@>66620*/6; /*@>6662b*/j >= /*@>66629*/0; /*@>66627*/j/*@>6665d*/--) {
            /*  start of gf_pow():gf_pow raises x^yd  */
            /*@>30e61*/temp/*@>447f*/ = (/*@>37147*/RSDecoder_OmegaZActual_idx_0/*@>37145*/ + /*@>37148*/1)/*@>37144*/ * /*@>3714a*/j/*@>31aaf*/ * /*@>60b3e*/rtConstP./*@>674a1*/RSDecoder_table2/*@>5f1d7*/[/*@>5f1d4*/1]/*@>447e*/ % /*@>30e60*/7;
            /*@>4482*/if (/*@>30e63*/temp/*@>4481*/ == /*@>30e65*/0) {
                /*@>30e66*/temp/*@>4484*/ = /*@>6601f*/7;
            }
            /*@>30e69*/decoder_in_tmp/*@>4488*/ = /*@>60b4a*/rtConstP./*@>674a4*/RSDecoder_table1/*@>5f1e9*/[/*@>5f1e5*/temp/*@>5f1e3*/ - /*@>5f1e6*/1];
            /*  end of gf_pow()  */
            /* CCode[nfull-1-j] is the current input code symbol. */
            /* Multiply it by alpha, then get the sum so far. */
            /*  start of gf_mul: gf_mul multiplies the scalars  a * b */
            /*@>46d3e*/temp/*@>46d40*/ = /*@>610cc*/rtDW->/*@>67693*/RSDecoder_CCode/*@>5f1f1*/[/*@>5f1ec*/6/*@>5f1eb*/ - /*@>5f1ee*/j];
            /*@>4496*/if ((/*@>46d42*/temp/*@>4494*/ == /*@>30e6c*/0)/*@>4495*/ || (/*@>310df*/decoder_in_tmp/*@>4493*/ == /*@>30e6b*/0)) {
                /*@>30e6d*/decoder_in_tmp/*@>4498*/ = /*@>66028*/0;
            } else {
                /*@>30e71*/temp/*@>44a3*/ = (/*@>60b54*/rtConstP./*@>674a7*/RSDecoder_table2/*@>5f1f9*/[temp/*@>5f1f3*/ - /*@>5f1f6*/1]/*@>44a1*/ + /*@>60b5a*/rtConstP./*@>674aa*/RSDecoder_table2/*@>5f201*/[/*@>5f1fd*/decoder_in_tmp/*@>5f1fb*/ - /*@>5f1fe*/1])/*@>44a2*/ % /*@>30e70*/7;
                /*@>44a6*/if (/*@>30e73*/temp/*@>44a5*/ == /*@>30e75*/0) {
                    /*@>30e76*/temp/*@>44a8*/ = /*@>6602b*/7;
                }
                /*@>30e79*/decoder_in_tmp/*@>44ac*/ = /*@>60b62*/rtConstP./*@>674ad*/RSDecoder_table1/*@>5f209*/[/*@>5f205*/temp/*@>5f203*/ - /*@>5f206*/1];
            }
            /* end of gf_mul() */
            /*@>30e7d*/Temp3/*@>6665e*/ ^= /*@>310e1*/decoder_in_tmp;
        }
        /*@>44bd*/if ((/*@>30e81*/noErrorStatus/*@>31aa9*/ != /*@>31aa7*/0)/*@>44bb*/ && (/*@>36ecf*/Temp3/*@>31aad*/ != /*@>31aab*/0)) {
            /*@>30e83*/noErrorStatus/*@>44bf*/ = /*@>6601c*/0;
        }
        /*@>3115e*/RSDecoder_Syndrome/*@>2a150*/[/*@>31160*/RSDecoder_OmegaZActual_idx_0] = /*@>36ed1*/Temp3;
    }
    /* Stop if all syndromes == 0 (i.e. input word is already a valid BCH/RS codeword) */
    /*@>44c3*/if (/*@>30e86*/noErrorStatus/*@>44c2*/ == /*@>30e88*/1) {
        /*  start of assignOutputs():Populate output vectors with proper data */
        /* Corrected message.  If there is a decoding failure, return the input message. */
        /*@>6109c*/rtDW->/*@>67681*/RSDecoder/*@>2bfce*/[/*@>311b2*/iIdx/*@>31a97*/ * /*@>311b4*/3]/*@>2bfcd*/ = /*@>2bfd7*/(uint32_T)/*@>610a3*/rtDW->/*@>67684*/RSDecoder_CCode/*@>5f1d2*/[/*@>5f1cf*/0];
        /*@>610ac*/rtDW->/*@>67687*/RSDecoder/*@>2bfe2*/[/*@>311ba*/iIdx/*@>31a94*/ * /*@>311bc*/3/*@>2bfe4*/ + /*@>311bf*/1]/*@>2bfe1*/ = /*@>2bfeb*/(uint32_T)/*@>610b3*/rtDW->/*@>6768a*/RSDecoder_CCode/*@>5f1dc*/[/*@>5f1d9*/1];
        /*@>610bc*/rtDW->/*@>6768d*/RSDecoder/*@>2bff6*/[/*@>311c3*/iIdx/*@>31a91*/ * /*@>311c5*/3/*@>2bff8*/ + /*@>311c8*/2]/*@>2bff5*/ = /*@>2bfff*/(uint32_T)/*@>610c3*/rtDW->/*@>67690*/RSDecoder_CCode/*@>5f1e1*/[/*@>5f1de*/2];
        /* Optional output for # of errors corrected */
        /* Parity of corrected codeword. If it is punctured, remove the punctured symbols. */
        /* If there is a decoding failure, return the input parity. */
        /*  end of assignOutputs()  */
    } else {
        int32_T RSDecoder_OmegaZActual_idx_1;
        boolean_T loopflag;
        /* Calculate the error/erasure locator polynomial PsiZ */
        /*  start of calculatePsiZ(): Calculate the error/erasure locator polynomial PsiZ */
        /* Use the diagram in Fig. 5-8 of Clark and Cain to implement the algorithm. */
        /* Box 1 -- Initializations */
        /* kCC is the location of the oldest symbol in the LFSR at the point */
        /* where the register fails. */
        /*@>30e89*/noErrorStatus/*@>452c*/ = /*@>66022*/-1;
        /* discrep is the convolution of PsiZ and the syndrome */
        /* L is the length of the linear feedback shift register (LFSR) */
        /*@>30e8c*/RSDecoder_OmegaZActual_idx_1/*@>4530*/ = /*@>66025*/0;
        /* Connection polynomial = 1.  ASCENDING order.  deg(PsiZ) = 2*t. */
        /* To account for erasures, PsiZ = LambdaZ * GammaZ, where LambdaZ is the */
        /* error locator polynomial, and GammaZ is the erasure locator polynomial. */
        /* NOTE:  PsiZ is the coefficients of the connection polynomial in order of */
        /*        ASCENDING powers rather than the conventional descending order. */
        /*        This is such that after the set of iterations, the inverse of */
        /*        roots of PsiZ in descending order can be obtained directly by */
        /*        finding the roots of PsiZ in ascending order.  PsiZ is */
        /*        initialized as GammaZ in case there are erasures.
 */
        /* Initialize Psi(Z) = Gamma(Z) : ASCENDING ORDER.  length = 2t+1 */
        /* Initialize correction polynomial D(z) = z*GammaZ : ASCENDING ORDER. */
        /*   length = 2t+2  */
        /*@>610d5*/rtDW->/*@>67696*/RSDecoder_Dz/*@>454d*/[/*@>30e91*/0U]/*@>454e*/ = /*@>6602e*/0;
/*@>26525*/        for (/*@>665ff*/RSDecoder_OmegaZActual_idx_0 = /*@>665fe*/0; /*@>66609*/RSDecoder_OmegaZActual_idx_0 < /*@>66607*/5; /*@>66605*/RSDecoder_OmegaZActual_idx_0/*@>6665f*/++) {
            /*@>30d10*/RSDecoder_PsiZ/*@>2377b*/[/*@>30d0e*/RSDecoder_OmegaZActual_idx_0]/*@>4547*/ = /*@>610de*/rtDW->/*@>67699*/RSDecoder_GammaZ/*@>5f20f*/[/*@>5f20c*/RSDecoder_OmegaZActual_idx_0];
            /*@>30dad*/RSDecoder_PsiZStar/*@>4549*/[/*@>30e8e*/RSDecoder_OmegaZActual_idx_0]/*@>454a*/ = /*@>66031*/0;
            /*@>610e7*/rtDW->/*@>6769c*/RSDecoder_Dz/*@>237b6*/[/*@>30d06*/RSDecoder_OmegaZActual_idx_0/*@>2863a*/ + /*@>3115b*/1]/*@>455c*/ = /*@>610ee*/rtDW->/*@>6769f*/RSDecoder_GammaZ/*@>5f215*/[/*@>5f212*/RSDecoder_OmegaZActual_idx_0];
        }
        /* 2*t-numErasPuncs iterations (Diamond 3) */
/*@>2643a*/        for (/*@>6657f*/j = /*@>6657e*/0; /*@>66589*/j < /*@>66587*/4; /*@>66585*/j/*@>66660*/++) {
            /* Box 2 -- Calculate the discrepancy, which is the sum over i of */
            /*          PsiZ(i)*Syndrome(n-i) with i going from 0 to L  */
            /*@>30e93*/Temp3/*@>4569*/ = /*@>66034*/0;
/*@>665e6*/            for (/*@>665e2*/RSDecoder_OmegaZActual_idx_0/*@>665e1*/ = /*@>665e3*/0; /*@>665d6*/RSDecoder_OmegaZActual_idx_0/*@>665d4*/ < /*@>665d9*/RSDecoder_OmegaZActual_idx_1/*@>665d7*/ + /*@>665da*/1; /*@>665dc*/RSDecoder_OmegaZActual_idx_0/*@>66661*/++) {
                /*@>46d4e*/temp/*@>46d50*/ = /*@>30ea5*/j/*@>4576*/ - /*@>30ea3*/RSDecoder_OmegaZActual_idx_0;
                /*@>4578*/if (/*@>46d52*/temp/*@>4577*/ >= /*@>30ea7*/0) {
                    /* Check that syndrome position is valid */
                    /* Multiply the current Psi coefficient by the */
                    /* (nCC-L)'th syndrome value.  Then update sum. */
                    /*  start of gf_mul: gf_mul multiplies the scalars  a * b */
                    /*@>46d66*/temp/*@>46d68*/ = /*@>5f229*/RSDecoder_Syndrome/*@>5f22b*/[temp];
                    /*@>4587*/if ((/*@>5f23c*/RSDecoder_PsiZ/*@>5f23e*/[/*@>5f23b*/RSDecoder_OmegaZActual_idx_0]/*@>4585*/ == /*@>30ea9*/0)/*@>4586*/ || (/*@>46d6a*/temp/*@>4584*/ == /*@>30ea8*/0)) {
                        /*@>30eaa*/decoder_in_tmp/*@>4589*/ = /*@>66049*/0;
                    } else {
                        /*@>30eae*/temp/*@>4596*/ = (/*@>60b7e*/rtConstP./*@>674b0*/RSDecoder_table2/*@>5f25f*/[temp/*@>5f259*/ - /*@>5f25c*/1]/*@>4594*/ + /*@>60b84*/rtConstP./*@>674b3*/RSDecoder_table2/*@>5f270*/[/*@>5f26a*/RSDecoder_PsiZ/*@>5f269*/[/*@>5f26c*/RSDecoder_OmegaZActual_idx_0]/*@>5f267*/ - /*@>5f26d*/1])/*@>4595*/ % /*@>30ead*/7;
                        /*@>4599*/if (/*@>30eb0*/temp/*@>4598*/ == /*@>30eb2*/0) {
                            /*@>30eb3*/temp/*@>459b*/ = /*@>66055*/7;
                        }
                        /*@>30eb6*/decoder_in_tmp/*@>459f*/ = /*@>60b9e*/rtConstP./*@>674bc*/RSDecoder_table1/*@>5f2a0*/[/*@>5f29c*/temp/*@>5f29a*/ - /*@>5f29d*/1];
                    }
                    /* end of gf_mul() */
                    /*@>30eba*/Temp3/*@>66664*/ ^= /*@>310dd*/decoder_in_tmp;
                }
            }
            /* Diamond 1 -- Continue if the discrepancy is not equal to zero */
            /*@>45ac*/if (/*@>310d9*/Temp3/*@>45ab*/ != /*@>30ebc*/0) {
                /* Box 3 -- Connection polynomial */
                /*          PsiZ(n) = PsiZ(n-1) - discrep(n)*Dz */
/*@>264ec*/                for (/*@>665b2*/RSDecoder_OmegaZActual_idx_0 = /*@>665b1*/0; /*@>665bc*/RSDecoder_OmegaZActual_idx_0 < /*@>665ba*/5; /*@>665b8*/RSDecoder_OmegaZActual_idx_0/*@>66663*/++) {
                    /*@>30da9*/RSDecoder_TempVec2t1/*@>45b9*/[/*@>30ebd*/RSDecoder_OmegaZActual_idx_0]/*@>45bb*/ = /*@>310db*/Temp3;
                }
                /*  start of gf_mul: gf_mul multiplies the scalars  a * b */
                /*@>2cc48*/if ((/*@>5f250*/RSDecoder_TempVec2t1/*@>5f252*/[/*@>5f24f*/0]/*@>2cc4a*/ == /*@>31658*/0)/*@>2cc49*/ || (/*@>61157*/rtDW->/*@>676c6*/RSDecoder_Dz/*@>5f257*/[/*@>5f254*/0]/*@>2cc4e*/ == /*@>3165b*/0)) {
                    /*@>31665*/decoder_in_tmp/*@>2cc6d*/ = /*@>66046*/0;
                } else {
                    /*@>3165c*/temp/*@>2cc56*/ = (/*@>60b90*/rtConstP./*@>674b6*/RSDecoder_table2/*@>5f289*/[/*@>5f284*/RSDecoder_TempVec2t1/*@>5f283*/[/*@>5f285*/0]/*@>5f281*/ - /*@>5f286*/1]/*@>2cc59*/ + /*@>60b96*/rtConstP./*@>674b9*/RSDecoder_table2/*@>5f298*/[/*@>61179*/rtDW->/*@>676d2*/RSDecoder_Dz/*@>5f292*/[/*@>5f294*/0]/*@>5f290*/ - /*@>5f295*/1])/*@>2cc58*/ % /*@>31664*/7;
                    /*@>2cc70*/if (/*@>31668*/temp/*@>2cc71*/ == /*@>3166a*/0) {
                        /*@>3166b*/temp/*@>2cc78*/ = /*@>66052*/7;
                    }
                    /*@>3166e*/decoder_in_tmp/*@>2cc7d*/ = /*@>60ba6*/rtConstP./*@>674bf*/RSDecoder_table1/*@>5f2a8*/[/*@>5f2a4*/temp/*@>5f2a2*/ - /*@>5f2a5*/1];
                }
                /* end of gf_mul() */
                /*@>31673*/RSDecoder_PsiZStar/*@>2cc88*/[/*@>3167c*/0]/*@>2cc87*/ = /*@>5f2ab*/RSDecoder_PsiZ/*@>5f2ad*/[/*@>5f2aa*/0]/*@>31a8f*/ ^ /*@>31677*/decoder_in_tmp;
                /*  start of gf_mul: gf_mul multiplies the scalars  a * b */
                /*@>2cca3*/if ((/*@>5f2b0*/RSDecoder_TempVec2t1/*@>5f2b2*/[/*@>5f2af*/1]/*@>2cca5*/ == /*@>31684*/0)/*@>2cca4*/ || (/*@>61182*/rtDW->/*@>676d5*/RSDecoder_Dz/*@>5f2b7*/[/*@>5f2b4*/1]/*@>2cca9*/ == /*@>31687*/0)) {
                    /*@>31691*/decoder_in_tmp/*@>2ccc8*/ = /*@>6605e*/0;
                } else {
                    /*@>31688*/temp/*@>2ccb1*/ = (/*@>60bb0*/rtConstP./*@>674c2*/RSDecoder_table2/*@>5f2c6*/[/*@>5f2c1*/RSDecoder_TempVec2t1/*@>5f2c0*/[/*@>5f2c2*/1]/*@>5f2be*/ - /*@>5f2c3*/1]/*@>2ccb4*/ + /*@>60bb6*/rtConstP./*@>674c5*/RSDecoder_table2/*@>5f2d5*/[/*@>6118b*/rtDW->/*@>676d8*/RSDecoder_Dz/*@>5f2cf*/[/*@>5f2d1*/1]/*@>5f2cd*/ - /*@>5f2d2*/1])/*@>2ccb3*/ % /*@>31690*/7;
                    /*@>2cccb*/if (/*@>31694*/temp/*@>2cccc*/ == /*@>31696*/0) {
                        /*@>31697*/temp/*@>2ccd3*/ = /*@>66061*/7;
                    }
                    /*@>3169a*/decoder_in_tmp/*@>2ccd8*/ = /*@>60bbe*/rtConstP./*@>674c8*/RSDecoder_table1/*@>5f2e3*/[/*@>5f2df*/temp/*@>5f2dd*/ - /*@>5f2e0*/1];
                }
                /* end of gf_mul() */
                /*@>3169f*/RSDecoder_PsiZStar/*@>2cce3*/[/*@>316a8*/1]/*@>2cce2*/ = /*@>5f2e6*/RSDecoder_PsiZ/*@>5f2e8*/[/*@>5f2e5*/1]/*@>31a8e*/ ^ /*@>316a3*/decoder_in_tmp;
                /*  start of gf_mul: gf_mul multiplies the scalars  a * b */
                /*@>2ccfe*/if ((/*@>5f2eb*/RSDecoder_TempVec2t1/*@>5f2ed*/[/*@>5f2ea*/2]/*@>2cd00*/ == /*@>316b0*/0)/*@>2ccff*/ || (/*@>61194*/rtDW->/*@>676db*/RSDecoder_Dz/*@>5f2f2*/[/*@>5f2ef*/2]/*@>2cd04*/ == /*@>316b3*/0)) {
                    /*@>316bd*/decoder_in_tmp/*@>2cd23*/ = /*@>6606d*/0;
                } else {
                    /*@>316b4*/temp/*@>2cd0c*/ = (/*@>60bc8*/rtConstP./*@>674cb*/RSDecoder_table2/*@>5f301*/[/*@>5f2fc*/RSDecoder_TempVec2t1/*@>5f2fb*/[/*@>5f2fd*/2]/*@>5f2f9*/ - /*@>5f2fe*/1]/*@>2cd0f*/ + /*@>60bce*/rtConstP./*@>674ce*/RSDecoder_table2/*@>5f310*/[/*@>6119d*/rtDW->/*@>676de*/RSDecoder_Dz/*@>5f30a*/[/*@>5f30c*/2]/*@>5f308*/ - /*@>5f30d*/1])/*@>2cd0e*/ % /*@>316bc*/7;
                    /*@>2cd26*/if (/*@>316c0*/temp/*@>2cd27*/ == /*@>316c2*/0) {
                        /*@>316c3*/temp/*@>2cd2e*/ = /*@>66073*/7;
                    }
                    /*@>316c6*/decoder_in_tmp/*@>2cd33*/ = /*@>60bd6*/rtConstP./*@>674d1*/RSDecoder_table1/*@>5f318*/[/*@>5f314*/temp/*@>5f312*/ - /*@>5f315*/1];
                }
                /* end of gf_mul() */
                /*@>316cb*/RSDecoder_PsiZStar/*@>2cd3e*/[/*@>316d4*/2]/*@>2cd3d*/ = /*@>5f31b*/RSDecoder_PsiZ/*@>5f31d*/[/*@>5f31a*/2]/*@>31a8d*/ ^ /*@>316cf*/decoder_in_tmp;
                /*  start of gf_mul: gf_mul multiplies the scalars  a * b */
                /*@>2cd59*/if ((/*@>5f347*/RSDecoder_TempVec2t1/*@>5f349*/[/*@>5f346*/3]/*@>2cd5b*/ == /*@>316dc*/0)/*@>2cd5a*/ || (/*@>611af*/rtDW->/*@>676e4*/RSDecoder_Dz/*@>5f34e*/[/*@>5f34b*/3]/*@>2cd5f*/ == /*@>316df*/0)) {
                    /*@>316e9*/decoder_in_tmp/*@>2cd7e*/ = /*@>6607c*/0;
                } else {
                    /*@>316e0*/temp/*@>2cd67*/ = (/*@>60bf0*/rtConstP./*@>674da*/RSDecoder_table2/*@>5f35d*/[/*@>5f358*/RSDecoder_TempVec2t1/*@>5f357*/[/*@>5f359*/3]/*@>5f355*/ - /*@>5f35a*/1]/*@>2cd6a*/ + /*@>60bf6*/rtConstP./*@>674dd*/RSDecoder_table2/*@>5f36c*/[/*@>611b8*/rtDW->/*@>676e7*/RSDecoder_Dz/*@>5f366*/[/*@>5f368*/3]/*@>5f364*/ - /*@>5f369*/1])/*@>2cd69*/ % /*@>316e8*/7;
                    /*@>2cd81*/if (/*@>316ec*/temp/*@>2cd82*/ == /*@>316ee*/0) {
                        /*@>316ef*/temp/*@>2cd89*/ = /*@>66082*/7;
                    }
                    /*@>316f2*/decoder_in_tmp/*@>2cd8e*/ = /*@>60c08*/rtConstP./*@>674e3*/RSDecoder_table1/*@>5f382*/[/*@>5f37e*/temp/*@>5f37c*/ - /*@>5f37f*/1];
                }
                /* end of gf_mul() */
                /*@>316f7*/RSDecoder_PsiZStar/*@>2cd99*/[/*@>31700*/3]/*@>2cd98*/ = /*@>5f385*/RSDecoder_PsiZ/*@>5f387*/[/*@>5f384*/3]/*@>31a8c*/ ^ /*@>316fb*/decoder_in_tmp;
                /* Diamond 2  */
                /*@>46d76*/Temp3/*@>46d78*/ = /*@>30ec1*/j/*@>45f0*/ - /*@>30ebf*/noErrorStatus;
                /*@>45f3*/if (/*@>30ec3*/RSDecoder_OmegaZActual_idx_1/*@>45f2*/ < /*@>46d7a*/Temp3) {
                    /* Boxes 4-7 -- Correction polynomial */
                    /*              Dz = PsiZ(n-1) / discrep(n) */
                    /*@>30ecf*/noErrorStatus/*@>45fe*/ = /*@>30ecd*/j/*@>45fd*/ - /*@>30ecb*/RSDecoder_OmegaZActual_idx_1;
/*@>264a4*/                    for (/*@>665a1*/RSDecoder_OmegaZActual_idx_0 = /*@>665a0*/0; /*@>665ab*/RSDecoder_OmegaZActual_idx_0 < /*@>665a9*/5; /*@>665a7*/RSDecoder_OmegaZActual_idx_0/*@>6666f*/++) {
                        decoder_in_tmp = /*@>5f428*/RSDecoder_PsiZ/*@>5f42a*/[/*@>5f427*/RSDecoder_OmegaZActual_idx_0];
                        temp = /*@>5f42e*/RSDecoder_TempVec2t1/*@>5f430*/[/*@>5f42d*/RSDecoder_OmegaZActual_idx_0];
                        /*  start of gf_div():gf_div divides the scalars x/b */
                        /*@>460d*/if (temp/*@>460c*/ == /*@>30ed1*/0) {
                            /*@>30ed2*/temp/*@>4610*/ = /*@>6609d*/1;
                        } else {
                            /*@>30ed4*/temp/*@>4618*/ = /*@>60c64*/rtConstP./*@>67501*/RSDecoder_table1/*@>5f45a*/[/*@>5f450*/6/*@>5f44f*/ - /*@>60c6a*/rtConstP./*@>67504*/RSDecoder_table2/*@>5f452*/[temp/*@>5f454*/ - /*@>5f457*/1]];
                        }
                        /*  start of gf_mul: gf_mul multiplies the scalars  a * b */
                        /*@>461e*/if ((/*@>30ed6*/temp/*@>461c*/ == /*@>30ed9*/0)/*@>461d*/ || (decoder_in_tmp/*@>461b*/ == /*@>30ed8*/0)) {
                            /*@>6124e*/rtDW->/*@>6771d*/RSDecoder_Dz/*@>1a107*/[/*@>30dd4*/RSDecoder_OmegaZActual_idx_0]/*@>4620*/ = /*@>660a9*/0;
                        } else {
                            /*@>30edc*/temp/*@>462a*/ = (/*@>60c7a*/rtConstP./*@>6750a*/RSDecoder_table2/*@>5f470*/[/*@>5f46c*/temp/*@>5f46a*/ - /*@>5f46d*/1]/*@>4628*/ + /*@>60c80*/rtConstP./*@>6750d*/RSDecoder_table2/*@>5f478*/[decoder_in_tmp/*@>5f472*/ - /*@>5f475*/1])/*@>4629*/ % /*@>30edb*/7;
                            /*@>462d*/if (/*@>30ede*/temp/*@>462c*/ == /*@>30ee0*/0) {
                                /*@>30ee1*/temp/*@>462f*/ = /*@>660af*/7;
                            }
                            /*@>61257*/rtDW->/*@>67720*/RSDecoder_Dz/*@>23ce1*/[/*@>30cc2*/RSDecoder_OmegaZActual_idx_0]/*@>4633*/ = /*@>60ca0*/rtConstP./*@>67519*/RSDecoder_table1/*@>5f4a4*/[/*@>5f4a0*/temp/*@>5f49e*/ - /*@>5f4a1*/1];
                        }
                        /* end of gf_mul() */
                        /*  end of gf_div() */
                    }
                    /*@>30ee6*/RSDecoder_OmegaZActual_idx_1/*@>463d*/ = Temp3;
                }
                /* Box 8 -- Reset the error/erasure locator polynomial */
/*@>2646c*/                for (/*@>66590*/RSDecoder_OmegaZActual_idx_0 = /*@>6658f*/0; /*@>6659a*/RSDecoder_OmegaZActual_idx_0 < /*@>66598*/5; /*@>66596*/RSDecoder_OmegaZActual_idx_0/*@>6666d*/++) {
                    /*@>30ce3*/RSDecoder_PsiZ/*@>23aa2*/[/*@>30ce1*/RSDecoder_OmegaZActual_idx_0]/*@>464b*/ = /*@>5f422*/RSDecoder_PsiZStar/*@>5f424*/[/*@>5f421*/RSDecoder_OmegaZActual_idx_0];
                }
            }
            /* Box 9 -- Correction polynomial */
            /*           Dz = z * Dz */
            /*@>610f7*/rtDW->/*@>676a2*/RSDecoder_Dz/*@>2cbee*/[/*@>3182f*/4]/*@>2cbed*/ = /*@>610fe*/rtDW->/*@>676a5*/RSDecoder_Dz/*@>5f220*/[/*@>5f21d*/3];
            /*@>61107*/rtDW->/*@>676a8*/RSDecoder_Dz/*@>2cbfe*/[/*@>31830*/3]/*@>2cbfd*/ = /*@>6110e*/rtDW->/*@>676ab*/RSDecoder_Dz/*@>5f225*/[/*@>5f222*/2];
            /*@>61127*/rtDW->/*@>676b4*/RSDecoder_Dz/*@>2cc0e*/[/*@>31831*/2]/*@>2cc0d*/ = /*@>6112e*/rtDW->/*@>676b7*/RSDecoder_Dz/*@>5f238*/[/*@>5f235*/1];
            /*@>61147*/rtDW->/*@>676c0*/RSDecoder_Dz/*@>2cc1e*/[/*@>31832*/1]/*@>2cc1d*/ = /*@>6114e*/rtDW->/*@>676c3*/RSDecoder_Dz/*@>5f24d*/[/*@>5f24a*/0];
            /*@>61170*/rtDW->/*@>676cf*/RSDecoder_Dz/*@>465c*/[/*@>30ee8*/0U]/*@>465d*/ = /*@>6604f*/0;
        }
        /*  end of calculatePsiZ  */
        /* FIND ERROR LOCATIONS */
        /* At this point, error/erasure locator polynomial has been found,  which is PsiZ */
        /* Find degree of Psi(Z) */
        /*@>30eea*/Temp3/*@>4662*/ = /*@>6603a*/0;
        /*@>30eed*/loopflag/*@>4663*/ = /*@>30eef*/true;
/*@>26362*/        for (/*@>66570*/RSDecoder_OmegaZActual_idx_0 = /*@>6656f*/4; /*@>6657a*/RSDecoder_OmegaZActual_idx_0 >= /*@>66578*/0; /*@>66576*/RSDecoder_OmegaZActual_idx_0/*@>66662*/--) {
            /*@>4671*/if ((/*@>5f219*/RSDecoder_PsiZ/*@>5f21b*/[/*@>5f218*/RSDecoder_OmegaZActual_idx_0]/*@>466f*/ > /*@>30ef2*/0)/*@>4670*/ && /*@>30ef0*/loopflag) {
                /*@>30ef5*/Temp3/*@>4674*/ = /*@>30ef3*/RSDecoder_OmegaZActual_idx_0;
                /*@>30ef7*/loopflag/*@>4675*/ = /*@>30ef9*/false;
            }
        }
        /* Degree of Psi(Z) must be equal to L and larger than 0 */
        /* (i.e. cannot be a constant) */
        /*@>467e*/if ((/*@>30eff*/Temp3/*@>467c*/ != /*@>30efd*/RSDecoder_OmegaZActual_idx_1)/*@>467d*/ || (/*@>30efa*/Temp3/*@>4679*/ < /*@>30efc*/1)) {
            /*  start of assignOutputs():Populate output vectors with proper data */
            /* Corrected message.  If there is a decoding failure, return the input message. */
            /*@>61117*/rtDW->/*@>676ae*/RSDecoder/*@>2c012*/[/*@>311cc*/iIdx/*@>31a86*/ * /*@>311ce*/3]/*@>2c011*/ = /*@>6111e*/rtDW->/*@>676b1*/BittoIntegerConverter/*@>5f233*/[/*@>5f22f*/iIdx/*@>5f22d*/ * /*@>5f230*/7];
            /*@>61137*/rtDW->/*@>676ba*/RSDecoder/*@>2c02a*/[/*@>311d6*/iIdx/*@>31a80*/ * /*@>311d8*/3/*@>2c02c*/ + /*@>311de*/1]/*@>2c029*/ = /*@>6113e*/rtDW->/*@>676bd*/BittoIntegerConverter/*@>5f248*/[/*@>5f243*/iIdx/*@>5f241*/ * /*@>5f244*/7/*@>5f240*/ + /*@>5f245*/1];
            /*@>61160*/rtDW->/*@>676c9*/RSDecoder/*@>2c042*/[/*@>311e2*/iIdx/*@>31a7a*/ * /*@>311e4*/3/*@>2c044*/ + /*@>311ea*/2]/*@>2c041*/ = /*@>61167*/rtDW->/*@>676cc*/BittoIntegerConverter/*@>5f27a*/[/*@>5f275*/iIdx/*@>5f273*/ * /*@>5f276*/7/*@>5f272*/ + /*@>5f277*/2];
            /* Optional output for # of errors corrected */
            /* Parity of corrected codeword. If it is punctured, remove the punctured symbols. */
            /* If there is a decoding failure, return the input parity. */
            /*  end of assignOutputs()  */
        } else {
            int32_T RSDecoder_OmegaZActual_idx_2;
            int32_T RSDecoder_OmegaZActual_idx_3;
            /* Initialize contents at pointer Errloc */
            /*@>3162e*/RSDecoder_Errloc/*@>2cbc2*/[/*@>31631*/0]/*@>2cbc1*/ = /*@>6603d*/0;
            /*@>31632*/RSDecoder_Errloc/*@>2cbcb*/[/*@>31635*/1]/*@>2cbca*/ = /*@>66040*/0;
            /*@>31636*/RSDecoder_Errloc/*@>2cbd4*/[/*@>31639*/2]/*@>2cbd3*/ = /*@>66043*/0;
            /*@>3163a*/RSDecoder_Errloc/*@>2cbdd*/[/*@>3163d*/3]/*@>2cbdc*/ = /*@>6604c*/0;
            /*  start of gf_roots()  */
            /* This function takes in vector X, computes the roots and stores them in roots */
            /* it returns the number of roots */
            /*@>30f01*/RSDecoder_OmegaZActual_idx_1/*@>46f2*/ = /*@>66058*/5;
            /*@>30f04*/noErrorStatus/*@>46f3*/ = /*@>6605b*/0;
/*@>26310*/            for (/*@>6655f*/RSDecoder_OmegaZActual_idx_0 = /*@>6655e*/0; /*@>66569*/RSDecoder_OmegaZActual_idx_0 < /*@>66567*/5; /*@>66565*/RSDecoder_OmegaZActual_idx_0/*@>66665*/++) {
                /*@>30cdb*/RSDecoder_PsiZStar/*@>23ad7*/[/*@>30cd9*/RSDecoder_OmegaZActual_idx_0]/*@>4701*/ = /*@>5f2d9*/RSDecoder_PsiZ/*@>5f2db*/[/*@>5f2d8*/RSDecoder_OmegaZActual_idx_0];
            }
            /*@>30f07*/RSDecoder_OmegaZActual_idx_0/*@>4702*/ = /*@>66064*/0;
            while/*@<4706*/ (/*@>30f0a*/RSDecoder_OmegaZActual_idx_0/*@>4704*/ < /*@>30f0c*/8) {
                /*@>30f0d*/RSDecoder_OmegaZActual_idx_2/*@>4707*/ = /*@>6606a*/0;
/*@>66548*/                for (/*@>66544*/j/*@>66543*/ = /*@>66545*/0; /*@>6653a*/j/*@>66538*/ < /*@>6653c*/RSDecoder_OmegaZActual_idx_1; /*@>6653e*/j/*@>66667*/++) {
                    /*@>611a6*/rtDW->/*@>676e1*/RSDecoder_d/*@>4712*/[/*@>30f1c*/j]/*@>4714*/ = /*@>30f1e*/RSDecoder_OmegaZActual_idx_0;
                }
/*@>66522*/                for (/*@>6651e*/j/*@>6651d*/ = /*@>6651f*/0; /*@>66514*/j/*@>66512*/ < /*@>66516*/RSDecoder_OmegaZActual_idx_1; /*@>66518*/j/*@>66668*/++) {
                    /*  start of gf_pow():gf_pow raises x^yd  */
                    /*@>30f30*/decoder_in_tmp/*@>4723*/ = /*@>611c1*/rtDW->/*@>676ea*/RSDecoder_d/*@>5f372*/[/*@>5f36f*/j];
                    /*@>475c*/if (/*@>30f47*/decoder_in_tmp/*@>475b*/ == /*@>30f49*/0) {
                        /*@>611da*/rtDW->/*@>676f3*/RSDecoder_d/*@>1a117*/[/*@>30dd0*/j]/*@>4762*/ = (/*@>36ee5*/j/*@>475f*/ == /*@>30f4c*/0);
                    } else {
                        /*@>30f50*/temp/*@>476a*/ = /*@>60c12*/rtConstP./*@>674e6*/RSDecoder_table2/*@>5f397*/[/*@>5f393*/decoder_in_tmp/*@>5f391*/ - /*@>5f394*/1]/*@>31a72*/ * /*@>36ee3*/j/*@>4769*/ % /*@>30f4f*/7;
                        /*@>476d*/if (/*@>30f52*/temp/*@>476c*/ == /*@>30f54*/0) {
                            /*@>30f55*/temp/*@>476f*/ = /*@>66091*/7;
                        }
                        /*@>61215*/rtDW->/*@>67708*/RSDecoder_d/*@>2409c*/[/*@>30c83*/j]/*@>4773*/ = /*@>60c38*/rtConstP./*@>674f2*/RSDecoder_table1/*@>5f3e9*/[/*@>5f3e5*/temp/*@>5f3e3*/ - /*@>5f3e6*/1];
                    }
                    /*  end of gf_pow()  */
                }
/*@>664f0*/                for (/*@>664ec*/j/*@>664eb*/ = /*@>664ed*/0; /*@>664e2*/j/*@>664e0*/ < /*@>664e4*/RSDecoder_OmegaZActual_idx_1; /*@>664e6*/j/*@>66669*/++) {
                    /*  start of gf_mul: gf_mul multiplies the scalars  a * b */
                    /*@>478a*/if ((/*@>611f3*/rtDW->/*@>676fc*/RSDecoder_d/*@>5f3a7*/[/*@>5f3a4*/j]/*@>4788*/ == /*@>30f65*/0)/*@>4789*/ || (/*@>5f3ab*/RSDecoder_PsiZStar/*@>5f3ad*/[/*@>5f3aa*/j]/*@>4787*/ == /*@>30f64*/0)) {
                        /*@>30f66*/decoder_in_tmp/*@>478c*/ = /*@>6608e*/0;
                    } else {
                        /*@>30f6a*/temp/*@>4797*/ = (/*@>60c2a*/rtConstP./*@>674ec*/RSDecoder_table2/*@>5f3d0*/[/*@>6120c*/rtDW->/*@>67705*/RSDecoder_d/*@>5f3c9*/[/*@>5f3cc*/j]/*@>5f3c7*/ - /*@>5f3cd*/1]/*@>4795*/ + /*@>60c30*/rtConstP./*@>674ef*/RSDecoder_table2/*@>5f3e1*/[/*@>5f3db*/RSDecoder_PsiZStar/*@>5f3da*/[/*@>5f3dd*/j]/*@>5f3d8*/ - /*@>5f3de*/1])/*@>4796*/ % /*@>30f69*/7;
                        /*@>479a*/if (/*@>30f6c*/temp/*@>4799*/ == /*@>30f6e*/0) {
                            /*@>30f6f*/temp/*@>479c*/ = /*@>66094*/7;
                        }
                        /*@>30f72*/decoder_in_tmp/*@>47a0*/ = /*@>60c48*/rtConstP./*@>674f8*/RSDecoder_table1/*@>5f3f6*/[/*@>5f3f2*/temp/*@>5f3f0*/ - /*@>5f3f3*/1];
                    }
                    /* end of gf_mul() */
                    /*@>30f76*/RSDecoder_OmegaZActual_idx_2/*@>6666c*/ ^= /*@>310d3*/decoder_in_tmp;
                }
                /*@>47aa*/if (/*@>30f78*/RSDecoder_OmegaZActual_idx_2/*@>47a9*/ == /*@>30f7a*/0) {
                    /*@>30d9f*/RSDecoder_Errloc/*@>47ad*/[/*@>30f7b*/noErrorStatus]/*@>47af*/ = /*@>30f7d*/RSDecoder_OmegaZActual_idx_0;
                    /*@>30f82*/noErrorStatus/*@>6666b*/++;
                    /*  start of gf_div():gf_div divides the scalars x/b */
                    /*  start of gf_mul: gf_mul multiplies the scalars  a * b */
                    /*@>30f89*/decoder_in_tmp/*@>47df*/ = /*@>60c40*/rtConstP./*@>674f5*/RSDecoder_table1/*@>5f3ee*/[/*@>5f3eb*/6];
                    /* end of gf_mul() */
                    /*  end of gf_div() */
                    /*  start of gf_div():gf_div divides the scalars x/b */
                    /*@>47ea*/if (/*@>310c1*/RSDecoder_OmegaZActual_idx_0/*@>47e9*/ == /*@>30f8b*/0) {
                        /*@>30f8c*/temp/*@>47ed*/ = /*@>6609a*/1;
                    } else {
                        /*@>30f8e*/temp/*@>47f4*/ = /*@>60c56*/rtConstP./*@>674fb*/RSDecoder_table1/*@>5f445*/[/*@>5f43b*/6/*@>5f43a*/ - /*@>60c5c*/rtConstP./*@>674fe*/RSDecoder_table2/*@>5f43d*/[/*@>5f441*/RSDecoder_OmegaZActual_idx_0/*@>5f43f*/ - /*@>5f442*/1]];
                    }
                    /*  start of gf_mul: gf_mul multiplies the scalars  a * b */
                    /*@>47fa*/if (/*@>30f90*/temp/*@>47f8*/ == /*@>30f92*/0) {
                        /*@>30f93*/RSDecoder_OmegaZActual_idx_2/*@>47fc*/ = /*@>660a3*/0;
                    } else {
                        /*@>30f97*/temp/*@>4805*/ = /*@>60c72*/rtConstP./*@>67507*/RSDecoder_table2/*@>5f462*/[/*@>5f45e*/temp/*@>5f45c*/ - /*@>5f45f*/1]/*@>4804*/ % /*@>30f96*/7;
                        /*@>4808*/if (/*@>30f99*/temp/*@>4807*/ == /*@>30f9b*/0) {
                            /*@>30f9c*/temp/*@>480a*/ = /*@>660a6*/7;
                        }
                        /*@>30f9f*/RSDecoder_OmegaZActual_idx_2/*@>480e*/ = /*@>60c8a*/rtConstP./*@>67510*/RSDecoder_table1/*@>5f485*/[/*@>5f481*/temp/*@>5f47f*/ - /*@>5f482*/1];
                    }
                    /* end of gf_mul() */
                    /*  end of gf_div() */
                    /*  start of gf_deconv --- de-convolves A from B  */
                    /*@>30fa1*/RSDecoder_OmegaZActual_idx_3/*@>4819*/ = /*@>660b5*/0;
/*@>664be*/                    for (/*@>664ba*/Temp4/*@>664b9*/ = /*@>664bb*/0; /*@>664b0*/Temp4/*@>664ae*/ < /*@>664b2*/RSDecoder_OmegaZActual_idx_1; /*@>664b4*/Temp4/*@>66674*/++) {
                        /*@>61260*/rtDW->/*@>67723*/RSDecoder_tmpQuotient/*@>4825*/[/*@>30fb0*/Temp4]/*@>4826*/ = /*@>660c1*/0;
                    }
                    /*@>41e1d*/if (/*@>47ed1*/0/*@>41e16*/ < /*@>41e1b*/RSDecoder_OmegaZActual_idx_1/*@>41e19*/ - /*@>41e1c*/1) {
                        /*@>4835*/if (/*@>60cc0*/rtConstP./*@>67525*/RSDecoder_table1/*@>5f4ef*/[/*@>5f4ec*/6]/*@>4834*/ == /*@>30fc0*/0) {
                            /*@>30fc1*/inv/*@>4838*/ = /*@>660ca*/1;
                        } else {
                            /*@>30fc3*/inv/*@>483f*/ = /*@>60cd2*/rtConstP./*@>6752b*/RSDecoder_table1/*@>5f51f*/[/*@>5f513*/6/*@>5f512*/ - /*@>60cd8*/rtConstP./*@>6752e*/RSDecoder_table2/*@>5f515*/[/*@>60cde*/rtConstP./*@>67531*/RSDecoder_table1/*@>5f519*/[/*@>5f51b*/6]/*@>5f517*/ - /*@>5f51c*/1]];
                        }
                    }
/*@>66470*/                    for (/*@>6646c*/Temp4/*@>6646b*/ = /*@>6646d*/0; /*@>66460*/Temp4/*@>6645e*/ < /*@>66463*/RSDecoder_OmegaZActual_idx_1/*@>66461*/ - /*@>66464*/1; /*@>66466*/Temp4/*@>66676*/++) {
                        int32_T z;
                        /*  start of gf_div():gf_div divides the scalars x/b */
                        /*  start of gf_mul: gf_mul multiplies the scalars  a * b */
                        /*@>4845*/if ((/*@>30fc5*/inv/*@>4843*/ == /*@>30fc8*/0)/*@>4844*/ || (/*@>5f56b*/RSDecoder_PsiZStar/*@>5f56d*/[/*@>5f56a*/RSDecoder_OmegaZActual_idx_3]/*@>4842*/ == /*@>30fc7*/0)) {
                            /*@>30fc9*/z/*@>4847*/ = /*@>660e2*/0;
                        } else {
                            /*@>30fcd*/temp/*@>4851*/ = (/*@>60d12*/rtConstP./*@>67543*/RSDecoder_table2/*@>5f57d*/[/*@>5f579*/inv/*@>5f577*/ - /*@>5f57a*/1]/*@>484f*/ + /*@>60d18*/rtConstP./*@>67546*/RSDecoder_table2/*@>5f58e*/[/*@>5f588*/RSDecoder_PsiZStar/*@>5f587*/[/*@>5f58a*/RSDecoder_OmegaZActual_idx_3]/*@>5f585*/ - /*@>5f58b*/1])/*@>4850*/ % /*@>30fcc*/7;
                            /*@>4854*/if (/*@>30fcf*/temp/*@>4853*/ == /*@>30fd1*/0) {
                                /*@>30fd2*/temp/*@>4856*/ = /*@>660e8*/7;
                            }
                            /*@>30fd5*/z/*@>485a*/ = /*@>60d28*/rtConstP./*@>6754c*/RSDecoder_table1/*@>5f5a6*/[/*@>5f5a2*/temp/*@>5f5a0*/ - /*@>5f5a3*/1];
                        }
                        /* end of gf_mul() */
                        /*  end of gf_div() */
/*@>66498*/                        for (/*@>66494*/j/*@>66493*/ = /*@>66495*/1; /*@>6648a*/j/*@>66488*/ < /*@>6648c*/RSDecoder_OmegaZActual_idx_1; /*@>6648e*/j/*@>6667e*/++) {
                            /*@>612bf*/rtDW->/*@>67744*/RSDecoder_tmpQuotient/*@>2453d*/[/*@>30c4f*/j/*@>24542*/ - /*@>30c4e*/1]/*@>486f*/ = /*@>612c6*/rtDW->/*@>67747*/RSDecoder_tmpQuotient/*@>5f5bc*/[/*@>5f5b9*/j];
                        }
                        /*@>612b6*/rtDW->/*@>67741*/RSDecoder_tmpQuotient/*@>4872*/[/*@>30fe3*/RSDecoder_OmegaZActual_idx_1/*@>4871*/ - /*@>30fe5*/1]/*@>4874*/ = /*@>310c5*/z;
                        /*  start of gf_mul: gf_mul multiplies the scalars  a * b */
                        /*@>487e*/if ((/*@>310c7*/z/*@>487c*/ == /*@>30fe7*/0)/*@>487d*/ || (/*@>310c9*/decoder_in_tmp/*@>487b*/ == /*@>30fe6*/0)) {
                            /*@>30fe8*/temp/*@>4880*/ = /*@>660f4*/0;
                        } else {
                            /*@>30fec*/temp/*@>4889*/ = (/*@>60d42*/rtConstP./*@>67552*/RSDecoder_table2/*@>5f5ce*/[/*@>5f5ca*/z/*@>5f5c8*/ - /*@>5f5cb*/1]/*@>4887*/ + /*@>60d48*/rtConstP./*@>67555*/RSDecoder_table2/*@>5f5d6*/[/*@>5f5d2*/decoder_in_tmp/*@>5f5d0*/ - /*@>5f5d3*/1])/*@>4888*/ % /*@>30feb*/7;
                            /*@>488c*/if (/*@>30fee*/temp/*@>488b*/ == /*@>30ff0*/0) {
                                /*@>30ff1*/temp/*@>488e*/ = /*@>660f7*/7;
                            }
                            /*@>30ff4*/temp/*@>4892*/ = /*@>60d50*/rtConstP./*@>67558*/RSDecoder_table1/*@>5f5de*/[/*@>5f5da*/temp/*@>5f5d8*/ - /*@>5f5db*/1];
                        }
                        /* end of gf_mul() */
                        /*@>30c3f*/RSDecoder_PsiZStar/*@>24739*/[/*@>30c3d*/RSDecoder_OmegaZActual_idx_3]/*@>6667f*/ ^= /*@>310cb*/temp;
                        /*  start of gf_mul: gf_mul multiplies the scalars  a * b */
                        /*@>48a2*/if ((/*@>310cd*/z/*@>48a0*/ == /*@>30ff7*/0)/*@>48a1*/ || (/*@>310cf*/RSDecoder_OmegaZActual_idx_2/*@>489f*/ == /*@>30ff6*/0)) {
                            /*@>30ff8*/z/*@>48a4*/ = /*@>66103*/0;
                        } else {
                            /*@>30ffc*/temp/*@>48ad*/ = (/*@>60d6e*/rtConstP./*@>67564*/RSDecoder_table2/*@>5f607*/[/*@>5f603*/z/*@>5f601*/ - /*@>5f604*/1]/*@>48ab*/ + /*@>60d74*/rtConstP./*@>67567*/RSDecoder_table2/*@>5f60f*/[/*@>5f60b*/RSDecoder_OmegaZActual_idx_2/*@>5f609*/ - /*@>5f60c*/1])/*@>48ac*/ % /*@>30ffb*/7;
                            /*@>48b0*/if (/*@>30ffe*/temp/*@>48af*/ == /*@>31000*/0) {
                                /*@>31001*/temp/*@>48b2*/ = /*@>66106*/7;
                            }
                            /*@>31004*/z/*@>48b6*/ = /*@>60d86*/rtConstP./*@>6756d*/RSDecoder_table1/*@>5f624*/[/*@>5f620*/temp/*@>5f61e*/ - /*@>5f621*/1];
                        }
                        /* end of gf_mul() */
                        /*@>30c23*/RSDecoder_PsiZStar/*@>24a58*/[/*@>30c21*/RSDecoder_OmegaZActual_idx_3/*@>24a5d*/ + /*@>30c20*/1]/*@>66680*/ ^= /*@>310d1*/z;
                        /*@>31009*/RSDecoder_OmegaZActual_idx_3/*@>66681*/++;
                    }
/*@>66414*/                    for (/*@>66410*/Temp4/*@>6640f*/ = /*@>66411*/0; /*@>66404*/Temp4/*@>66402*/ < /*@>66407*/RSDecoder_OmegaZActual_idx_1/*@>66405*/ - /*@>66408*/1; /*@>6640a*/Temp4/*@>66678*/++) {
                        /*@>30c68*/RSDecoder_PsiZStar/*@>2445b*/[/*@>30c66*/Temp4]/*@>48d5*/ = /*@>6128d*/rtDW->/*@>67732*/RSDecoder_tmpQuotient/*@>5f575*/[/*@>5f571*/Temp4/*@>5f56f*/ + /*@>5f572*/1];
                    }
                    /*  end of gf_deconv  */
                    /*@>3101b*/RSDecoder_OmegaZActual_idx_1/*@>6667a*/--;
                    /*@>31020*/RSDecoder_OmegaZActual_idx_0/*@>6667b*/--;
                }
                /*@>31025*/RSDecoder_OmegaZActual_idx_0/*@>6666a*/++;
            }
/*@>663b6*/            for (/*@>663b2*/j/*@>663b1*/ = /*@>663b3*/0; /*@>663a8*/j/*@>663a6*/ < /*@>663aa*/noErrorStatus; /*@>663ac*/j/*@>66666*/++) {
                /*  start of gf_div():gf_div divides the scalars x/b */
                /*@>48ef*/if (/*@>5f321*/RSDecoder_Errloc/*@>5f323*/[/*@>5f320*/j]/*@>48ee*/ == /*@>31033*/0) {
                    /*@>31034*/temp/*@>48f2*/ = /*@>66079*/1;
                } else {
                    /*@>31036*/temp/*@>48fa*/ = /*@>60be0*/rtConstP./*@>674d4*/RSDecoder_table1/*@>5f344*/[/*@>5f337*/6/*@>5f336*/ - /*@>60be6*/rtConstP./*@>674d7*/RSDecoder_table2/*@>5f339*/[/*@>5f33e*/RSDecoder_Errloc/*@>5f33d*/[/*@>5f340*/j]/*@>5f33b*/ - /*@>5f341*/1]];
                }
                /*  start of gf_mul: gf_mul multiplies the scalars  a * b */
                /*@>4900*/if (/*@>31038*/temp/*@>48fe*/ == /*@>3103a*/0) {
                    /*@>30da1*/RSDecoder_Errloc/*@>1a10f*/[/*@>30dd2*/j]/*@>4902*/ = /*@>66085*/0;
                } else {
                    /*@>3103d*/temp/*@>490b*/ = /*@>60c00*/rtConstP./*@>674e0*/RSDecoder_table2/*@>5f37a*/[/*@>5f376*/temp/*@>5f374*/ - /*@>5f377*/1]/*@>490a*/ % /*@>3103c*/7;
                    /*@>490e*/if (/*@>3103f*/temp/*@>490d*/ == /*@>31041*/0) {
                        /*@>31042*/temp/*@>4910*/ = /*@>6608b*/7;
                    }
                    /*@>30cae*/RSDecoder_Errloc/*@>23dbb*/[/*@>30cac*/j]/*@>4914*/ = /*@>60c22*/rtConstP./*@>674e9*/RSDecoder_table1/*@>5f3bf*/[/*@>5f3bb*/temp/*@>5f3b9*/ - /*@>5f3bc*/1];
                }
                /* end of gf_mul() */
                /*  end of gf_div() */
            }
            /*  end of gf_roots() */
            /* Decoding failure if one of the following conditions is met: */
            /* (1) Psi(Z) has no roots in this field */
            /* (2) Number of roots not equal to degree of PsiZ */
            /*@>4928*/if (/*@>310b7*/noErrorStatus/*@>4927*/ != /*@>31045*/Temp3) {
                /*  start of assignOutputs():Populate output vectors with proper data */
                /* Corrected message.  If there is a decoding failure, return the input message. */
                /*@>611ca*/rtDW->/*@>676ed*/RSDecoder/*@>2c062*/[/*@>311ee*/iIdx/*@>31a6c*/ * /*@>311f0*/3]/*@>2c061*/ = /*@>611d1*/rtDW->/*@>676f0*/BittoIntegerConverter/*@>5f38f*/[/*@>5f38b*/iIdx/*@>5f389*/ * /*@>5f38c*/7];
                /*@>611e3*/rtDW->/*@>676f6*/RSDecoder/*@>2c07a*/[/*@>311f8*/iIdx/*@>31a66*/ * /*@>311fa*/3/*@>2c07c*/ + /*@>31200*/1]/*@>2c079*/ = /*@>611ea*/rtDW->/*@>676f9*/BittoIntegerConverter/*@>5f3a1*/[/*@>5f39c*/iIdx/*@>5f39a*/ * /*@>5f39d*/7/*@>5f399*/ + /*@>5f39e*/1];
                /*@>611fc*/rtDW->/*@>676ff*/RSDecoder/*@>2c092*/[/*@>31204*/iIdx/*@>31a60*/ * /*@>31206*/3/*@>2c094*/ + /*@>3120c*/2]/*@>2c091*/ = /*@>61203*/rtDW->/*@>67702*/BittoIntegerConverter/*@>5f3b7*/[/*@>5f3b2*/iIdx/*@>5f3b0*/ * /*@>5f3b3*/7/*@>5f3af*/ + /*@>5f3b4*/2];
                /* Optional output for # of errors corrected */
                /* Parity of corrected codeword. If it is punctured, remove the punctured symbols. */
                /* If there is a decoding failure, return the input parity. */
                /*  end of assignOutputs()  */
            } else {
                /* Test if the error locations are unique
 */
                /*@>31047*/loopflag/*@>498b*/ = /*@>31049*/true;
                /*@>31054*/RSDecoder_OmegaZActual_idx_0/*@>4995*/ = /*@>66088*/0;
                while/*@<4997*/ ((/*@>31052*/RSDecoder_OmegaZActual_idx_0/*@>4993*/ < /*@>310b9*/noErrorStatus/*@>4991*/ - /*@>31051*/1)/*@>4994*/ && /*@>3104f*/loopflag) {
                    /*@>31063*/j/*@>49a2*/ = /*@>31060*/RSDecoder_OmegaZActual_idx_0/*@>49a1*/ + /*@>31062*/1;
                    while/*@<49a4*/ ((/*@>3105e*/j/*@>499e*/ < /*@>310bf*/noErrorStatus)/*@>499f*/ && /*@>3105c*/loopflag) {
                        /*@>31065*/loopflag/*@>49ac*/ = (/*@>5f402*/RSDecoder_Errloc/*@>5f404*/[/*@>5f401*/RSDecoder_OmegaZActual_idx_0]/*@>111e3*/ != /*@>5f408*/RSDecoder_Errloc/*@>5f40a*/[/*@>5f407*/j]);
                        /*@>3105a*/j/*@>66670*/++;
                    }
                    /*@>3104d*/RSDecoder_OmegaZActual_idx_0/*@>6666e*/++;
                }
                /*@>49af*/if (!/*@>31067*/loopflag) {
                    /*  start of assignOutputs():Populate output vectors with proper data */
                    /* Corrected message.  If there is a decoding failure, return the input message. */
                    /*@>6121e*/rtDW->/*@>6770b*/RSDecoder/*@>2c0b2*/[/*@>31210*/iIdx/*@>31a5a*/ * /*@>31212*/3]/*@>2c0b1*/ = /*@>61225*/rtDW->/*@>6770e*/BittoIntegerConverter/*@>5f3fe*/[/*@>5f3fa*/iIdx/*@>5f3f8*/ * /*@>5f3fb*/7];
                    /*@>6122e*/rtDW->/*@>67711*/RSDecoder/*@>2c0ca*/[/*@>3121a*/iIdx/*@>31a54*/ * /*@>3121c*/3/*@>2c0cc*/ + /*@>31222*/1]/*@>2c0c9*/ = /*@>61235*/rtDW->/*@>67714*/BittoIntegerConverter/*@>5f414*/[/*@>5f40f*/iIdx/*@>5f40d*/ * /*@>5f410*/7/*@>5f40c*/ + /*@>5f411*/1];
                    /*@>6123e*/rtDW->/*@>67717*/RSDecoder/*@>2c0e2*/[/*@>31226*/iIdx/*@>31a4e*/ * /*@>31228*/3/*@>2c0e4*/ + /*@>3122e*/2]/*@>2c0e1*/ = /*@>61245*/rtDW->/*@>6771a*/BittoIntegerConverter/*@>5f41e*/[/*@>5f419*/iIdx/*@>5f417*/ * /*@>5f41a*/7/*@>5f416*/ + /*@>5f41b*/2];
                    /* Optional output for # of errors corrected */
                    /* Parity of corrected codeword. If it is punctured, remove the punctured symbols. */
                    /* If there is a decoding failure, return the input parity. */
                    /*  end of assignOutputs()  */
                } else {
                    /* PART II - FIND ERROR MAGNITUDES AT EACH OF THE ERROR/ERASURE LOCATIONS, */
                    /* AND CORRECT THEM */
                    /*  start of correctErrors():Calculate the error magnitude in the current error position,  */
                    /*                           and correct the errors. */
/*@>26265*/                    for (/*@>66386*/RSDecoder_OmegaZActual_idx_0 = /*@>66385*/0; /*@>66390*/RSDecoder_OmegaZActual_idx_0 < /*@>6638e*/10; /*@>6638c*/RSDecoder_OmegaZActual_idx_0/*@>66671*/++) {
                        /*@>30d9b*/RSDecoder_OmegaZ/*@>4a23*/[/*@>31069*/RSDecoder_OmegaZActual_idx_0]/*@>4a24*/ = /*@>66097*/0;
                    }
                    /*  start of gf_conv():gf_conv convolves A with B and stores the result in retValue  */
/*@>2624c*/                    for (/*@>66375*/RSDecoder_OmegaZActual_idx_0 = /*@>66374*/0; /*@>6637f*/RSDecoder_OmegaZActual_idx_0 < /*@>6637d*/8; /*@>6637b*/RSDecoder_OmegaZActual_idx_0/*@>66672*/++) {
                        /*@>30d99*/RSDecoder_OmegaZ/*@>4a33*/[/*@>3106c*/RSDecoder_OmegaZActual_idx_0]/*@>4a34*/ = /*@>660a0*/0;
                    }
/*@>26206*/                    for (/*@>66364*/RSDecoder_OmegaZActual_idx_0 = /*@>66363*/0; /*@>6636e*/RSDecoder_OmegaZActual_idx_0 < /*@>6636c*/5; /*@>6636a*/RSDecoder_OmegaZActual_idx_0/*@>66673*/++) {
                        decoder_in_tmp = /*@>5f466*/RSDecoder_PsiZ/*@>5f468*/[/*@>5f465*/RSDecoder_OmegaZActual_idx_0];
                        /*@>2ca4c*/if ((decoder_in_tmp/*@>2ca4e*/ == /*@>3156c*/0)/*@>2ca4d*/ || (/*@>5f47b*/RSDecoder_Syndrome/*@>5f47d*/[/*@>5f47a*/0]/*@>2ca52*/ == /*@>3156f*/0)) {
                            /*@>31579*/temp/*@>2ca6b*/ = /*@>660ac*/0;
                        } else {
                            /*@>31570*/temp/*@>2ca57*/ = (/*@>60c92*/rtConstP./*@>67513*/RSDecoder_table2/*@>5f48d*/[decoder_in_tmp/*@>5f487*/ - /*@>5f48a*/1]/*@>2ca5a*/ + /*@>60c98*/rtConstP./*@>67516*/RSDecoder_table2/*@>5f49c*/[/*@>5f497*/RSDecoder_Syndrome/*@>5f496*/[/*@>5f498*/0]/*@>5f494*/ - /*@>5f499*/1])/*@>2ca59*/ % /*@>31578*/7;
                            /*@>2ca6e*/if (/*@>3157c*/temp/*@>2ca6f*/ == /*@>3157e*/0) {
                                /*@>3157f*/temp/*@>2ca76*/ = /*@>660b2*/7;
                            }
                            /*@>3158c*/temp/*@>2ca8e*/ = /*@>60ca8*/rtConstP./*@>6751c*/RSDecoder_table1/*@>5f4bc*/[/*@>5f4b8*/temp/*@>5f4b6*/ - /*@>5f4b9*/1];
                        }
                        /*@>31582*/RSDecoder_OmegaZ/*@>2ca7b*/[/*@>31584*/RSDecoder_OmegaZActual_idx_0]/*@>66675*/ ^= /*@>31586*/temp;
                        /*@>2caab*/if ((decoder_in_tmp/*@>2caad*/ == /*@>3159e*/0)/*@>2caac*/ || (/*@>5f4bf*/RSDecoder_Syndrome/*@>5f4c1*/[/*@>5f4be*/1]/*@>2cab1*/ == /*@>315a1*/0)) {
                            /*@>315ab*/temp/*@>2caca*/ = /*@>660bb*/0;
                        } else {
                            /*@>315a2*/temp/*@>2cab6*/ = (/*@>60cb0*/rtConstP./*@>6751f*/RSDecoder_table2/*@>5f4ce*/[decoder_in_tmp/*@>5f4c8*/ - /*@>5f4cb*/1]/*@>2cab9*/ + /*@>60cb6*/rtConstP./*@>67522*/RSDecoder_table2/*@>5f4dd*/[/*@>5f4d8*/RSDecoder_Syndrome/*@>5f4d7*/[/*@>5f4d9*/1]/*@>5f4d5*/ - /*@>5f4da*/1])/*@>2cab8*/ % /*@>315aa*/7;
                            /*@>2cacd*/if (/*@>315ae*/temp/*@>2cace*/ == /*@>315b0*/0) {
                                /*@>315b1*/temp/*@>2cad5*/ = /*@>660be*/7;
                            }
                            /*@>315be*/temp/*@>2caed*/ = /*@>60cca*/rtConstP./*@>67528*/RSDecoder_table1/*@>5f4fc*/[/*@>5f4f8*/temp/*@>5f4f6*/ - /*@>5f4f9*/1];
                        }
                        /*@>315b4*/RSDecoder_OmegaZ/*@>2cada*/[/*@>315b6*/RSDecoder_OmegaZActual_idx_0/*@>2cadc*/ + /*@>315c4*/1]/*@>66677*/ ^= /*@>315b8*/temp;
                        /*@>2cb0a*/if ((decoder_in_tmp/*@>2cb0c*/ == /*@>315d2*/0)/*@>2cb0b*/ || (/*@>5f4ff*/RSDecoder_Syndrome/*@>5f501*/[/*@>5f4fe*/2]/*@>2cb10*/ == /*@>315d5*/0)) {
                            /*@>315df*/temp/*@>2cb29*/ = /*@>660c4*/0;
                        } else {
                            /*@>315d6*/temp/*@>2cb15*/ = (/*@>60ce8*/rtConstP./*@>67534*/RSDecoder_table2/*@>5f52c*/[decoder_in_tmp/*@>5f526*/ - /*@>5f529*/1]/*@>2cb18*/ + /*@>60cee*/rtConstP./*@>67537*/RSDecoder_table2/*@>5f53b*/[/*@>5f536*/RSDecoder_Syndrome/*@>5f535*/[/*@>5f537*/2]/*@>5f533*/ - /*@>5f538*/1])/*@>2cb17*/ % /*@>315de*/7;
                            /*@>2cb2c*/if (/*@>315e2*/temp/*@>2cb2d*/ == /*@>315e4*/0) {
                                /*@>315e5*/temp/*@>2cb34*/ = /*@>660d3*/7;
                            }
                            /*@>315f2*/temp/*@>2cb4c*/ = /*@>60cfa*/rtConstP./*@>6753a*/RSDecoder_table1/*@>5f54b*/[/*@>5f547*/temp/*@>5f545*/ - /*@>5f548*/1];
                        }
                        /*@>315e8*/RSDecoder_OmegaZ/*@>2cb39*/[/*@>315ea*/RSDecoder_OmegaZActual_idx_0/*@>2cb3b*/ + /*@>315f8*/2]/*@>66679*/ ^= /*@>315ec*/temp;
                        /*@>2cb69*/if ((decoder_in_tmp/*@>2cb6b*/ == /*@>31606*/0)/*@>2cb6a*/ || (/*@>5f54e*/RSDecoder_Syndrome/*@>5f550*/[/*@>5f54d*/3]/*@>2cb6f*/ == /*@>31609*/0)) {
                            /*@>31613*/temp/*@>2cb88*/ = /*@>660dc*/0;
                        } else {
                            /*@>3160a*/temp/*@>2cb74*/ = (/*@>60d02*/rtConstP./*@>6753d*/RSDecoder_table2/*@>5f558*/[decoder_in_tmp/*@>5f552*/ - /*@>5f555*/1]/*@>2cb77*/ + /*@>60d08*/rtConstP./*@>67540*/RSDecoder_table2/*@>5f567*/[/*@>5f562*/RSDecoder_Syndrome/*@>5f561*/[/*@>5f563*/3]/*@>5f55f*/ - /*@>5f564*/1])/*@>2cb76*/ % /*@>31612*/7;
                            /*@>2cb8b*/if (/*@>31616*/temp/*@>2cb8c*/ == /*@>31618*/0) {
                                /*@>31619*/temp/*@>2cb93*/ = /*@>660df*/7;
                            }
                            /*@>31626*/temp/*@>2cbab*/ = /*@>60d20*/rtConstP./*@>67549*/RSDecoder_table1/*@>5f59e*/[/*@>5f59a*/temp/*@>5f598*/ - /*@>5f59b*/1];
                        }
                        /*@>3161c*/RSDecoder_OmegaZ/*@>2cb98*/[/*@>3161e*/RSDecoder_OmegaZActual_idx_0/*@>2cb9a*/ + /*@>3162c*/3]/*@>6667d*/ ^= /*@>31620*/temp;
                    }
                    /*  end of gf_conv()  */
                    /* Disregard terms of x^(2t) and higher in Omega(Z) */
                    /* because we have no knowledge of such terms in S(Z). */
                    /* That is, retain terms up to x^(2t-1) */
                    /*@>30bf8*/RSDecoder_OmegaZActual_idx_0/*@>2c9f3*/ = /*@>5f4a7*/RSDecoder_OmegaZ/*@>5f4a9*/[/*@>5f4a6*/0];
                    /*@>30bfa*/RSDecoder_OmegaZActual_idx_1/*@>2ca01*/ = /*@>5f4b2*/RSDecoder_OmegaZ/*@>5f4b4*/[/*@>5f4b1*/1];
                    /*@>30bfc*/RSDecoder_OmegaZActual_idx_2/*@>2ca0f*/ = /*@>5f4c4*/RSDecoder_OmegaZ/*@>5f4c6*/[/*@>5f4c3*/2];
                    /*@>30bfe*/RSDecoder_OmegaZActual_idx_3/*@>2ca1d*/ = /*@>5f4e0*/RSDecoder_OmegaZ/*@>5f4e2*/[/*@>5f4df*/3];
                    /* Compute derivative of PsiZ */
                    /*@>61269*/rtDW->/*@>67726*/RSDecoder_PsiZDeriv/*@>2c9cc*/[/*@>3154e*/0]/*@>2c9cb*/ = /*@>5f4f2*/RSDecoder_PsiZ/*@>5f4f4*/[/*@>5f4f1*/1];
                    /*@>61272*/rtDW->/*@>67729*/RSDecoder_PsiZDeriv/*@>2c9dc*/[/*@>31553*/2]/*@>2c9db*/ = /*@>5f522*/RSDecoder_PsiZ/*@>5f524*/[/*@>5f521*/3];
                    /*@>6127b*/rtDW->/*@>6772c*/RSDecoder_PsiZDeriv/*@>2c9ae*/[/*@>31835*/1]/*@>2c9ad*/ = /*@>660cd*/0;
                    /*@>61284*/rtDW->/*@>6772f*/RSDecoder_PsiZDeriv/*@>2c9b9*/[/*@>31836*/3]/*@>2c9b8*/ = /*@>660d0*/0;
                    /* Find error magnitude at each error location.  Use the expression found on pg. 222 of Wicker. */
/*@>6634d*/                    for (/*@>66349*/j/*@>66348*/ = /*@>6634a*/0; /*@>6633f*/j/*@>6633d*/ < /*@>66341*/noErrorStatus; /*@>66343*/j/*@>6667c*/++) {
                        /* Dot product for numerator term */
                        /*@>31079*/Temp3/*@>4aab*/ = /*@>660e5*/0;
                        /* Dot product for denominator */
                        /*@>3107c*/Temp4/*@>4b3a*/ = /*@>660eb*/0;
                        /*  start of gf_pow():gf_pow raises x^yd  */
                        /*@>3fcc2*/if (/*@>5f5b4*/RSDecoder_Errloc/*@>5f5b6*/[/*@>5f5b3*/j]/*@>2c178*/ == /*@>3123a*/0) {
                            /*@>3fcc6*/decoder_in_tmp/*@>3fcc5*/ = /*@>660f1*/1;
                        } else {
                            /*@>3123d*/decoder_in_tmp/*@>2c194*/ = /*@>60d3a*/rtConstP./*@>6754f*/RSDecoder_table1/*@>5f5c6*/[/*@>5f5c3*/6];
                        }
                        /*  end of gf_pow()  */
                        /*@>2c1cc*/if (/*@>36ed3*/RSDecoder_OmegaZActual_idx_0/*@>2c1cd*/ > /*@>3124c*/0) {
                            /*  start of gf_mul: gf_mul multiplies the scalars  a * b */
                            /*@>2c1ee*/if (/*@>31250*/decoder_in_tmp/*@>2c1f4*/ == /*@>31252*/0) {
                                /*@>40128*/Temp3/*@>2c219*/ = /*@>660fa*/0;
                            } else {
                                /*@>31253*/temp/*@>2c205*/ = (/*@>60d58*/rtConstP./*@>6755b*/RSDecoder_table2/*@>5f5f2*/[/*@>5f5ee*/RSDecoder_OmegaZActual_idx_0/*@>5f5ec*/ - /*@>5f5ef*/1]/*@>2c208*/ + /*@>60d5e*/rtConstP./*@>6755e*/RSDecoder_table2/*@>5f5fa*/[/*@>5f5f6*/decoder_in_tmp/*@>5f5f4*/ - /*@>5f5f7*/1])/*@>2c207*/ % /*@>3125b*/7;
                                /*@>2c22a*/if (/*@>31265*/temp/*@>2c22b*/ == /*@>31267*/0) {
                                    /*@>31268*/temp/*@>2c243*/ = /*@>66100*/7;
                                }
                                /*@>40129*/Temp3/*@>2c24f*/ = /*@>60d7c*/rtConstP./*@>6756a*/RSDecoder_table1/*@>5f617*/[/*@>5f613*/temp/*@>5f611*/ - /*@>5f614*/1];
                            }
                            /* end of gf_mul() */
                        }
                        /*  start of gf_pow():gf_pow raises x^yd  */
                        /*@>3fcc7*/if (/*@>5f5e8*/RSDecoder_Errloc/*@>5f5ea*/[/*@>5f5e7*/j]/*@>2c261*/ == /*@>31276*/0) {
                            /*@>3fccb*/decoder_in_tmp/*@>3fcca*/ = /*@>660fd*/1;
                        } else {
                            /*@>31279*/decoder_in_tmp/*@>2c27d*/ = /*@>60d66*/rtConstP./*@>67561*/RSDecoder_table1/*@>5f5ff*/[/*@>5f5fc*/6];
                        }
                        /*  end of gf_pow()  */
                        /*@>2c2b5*/if (/*@>612df*/rtDW->/*@>67750*/RSDecoder_PsiZDeriv/*@>5f61c*/[/*@>5f619*/0]/*@>2c2b6*/ > /*@>31288*/0) {
                            /*  start of gf_mul: gf_mul multiplies the scalars  a * b */
                            /*@>2c2d9*/if ((/*@>612e8*/rtDW->/*@>67753*/RSDecoder_PsiZDeriv/*@>5f631*/[/*@>5f62e*/0]/*@>2c2db*/ == /*@>3128b*/0)/*@>2c2da*/ || (/*@>3128c*/decoder_in_tmp/*@>2c2e2*/ == /*@>3128e*/0)) {
                                /*@>4012a*/Temp4/*@>2c304*/ = /*@>66109*/0;
                            } else {
                                /*@>3128f*/temp/*@>2c2ed*/ = (/*@>60d90*/rtConstP./*@>67570*/RSDecoder_table2/*@>5f640*/[/*@>612f1*/rtDW->/*@>67756*/RSDecoder_PsiZDeriv/*@>5f63a*/[/*@>5f63c*/0]/*@>5f638*/ - /*@>5f63d*/1]/*@>2c2f0*/ + /*@>60d96*/rtConstP./*@>67573*/RSDecoder_table2/*@>5f648*/[/*@>5f644*/decoder_in_tmp/*@>5f642*/ - /*@>5f645*/1])/*@>2c2ef*/ % /*@>31297*/7;
                                /*@>2c30d*/if (/*@>3129b*/temp/*@>2c30e*/ == /*@>3129d*/0) {
                                    /*@>3129e*/temp/*@>2c320*/ = /*@>6610f*/7;
                                }
                                /*@>4012b*/Temp4/*@>2c32a*/ = /*@>60dac*/rtConstP./*@>6757c*/RSDecoder_table1/*@>5f677*/[/*@>5f673*/temp/*@>5f671*/ - /*@>5f674*/1];
                            }
                            /* end of gf_mul() */
                        }
                        /*  start of gf_pow():gf_pow raises x^yd  */
                        /*  start of gf_div():gf_div divides the scalars x/b */
                        /*@>2c36a*/if (/*@>5f64c*/RSDecoder_Errloc/*@>5f64e*/[/*@>5f64b*/j]/*@>2c36b*/ == /*@>312b6*/0) {
                            /*@>312c7*/temp/*@>2c39c*/ = /*@>6610c*/1;
                        } else {
                            /*@>312bf*/temp/*@>2c38a*/ = /*@>60d9e*/rtConstP./*@>67576*/RSDecoder_table1/*@>5f66f*/[/*@>5f662*/6/*@>5f661*/ - /*@>60da4*/rtConstP./*@>67579*/RSDecoder_table2/*@>5f664*/[/*@>5f669*/RSDecoder_Errloc/*@>5f668*/[/*@>5f66b*/j]/*@>5f666*/ - /*@>5f66c*/1]];
                        }
                        /*  start of gf_mul: gf_mul multiplies the scalars  a * b */
                        /*@>2c3bf*/if (/*@>312d7*/temp/*@>2c3c0*/ == /*@>312d9*/0) {
                            /*@>312e0*/decoder_in_tmp/*@>2c3d8*/ = /*@>66112*/0;
                        } else {
                            /*@>312da*/temp/*@>2c3c7*/ = /*@>60db4*/rtConstP./*@>6757f*/RSDecoder_table2/*@>5f67f*/[/*@>5f67b*/temp/*@>5f679*/ - /*@>5f67c*/1]/*@>2c3c9*/ % /*@>312df*/7;
                            /*@>2c3e6*/if (/*@>312e9*/temp/*@>2c3e7*/ == /*@>312eb*/0) {
                                /*@>312f8*/temp/*@>2c40c*/ = /*@>66115*/7;
                            }
                            /*@>312fe*/decoder_in_tmp/*@>2c41f*/ = /*@>60dbc*/rtConstP./*@>67582*/RSDecoder_table1/*@>5f687*/[/*@>5f683*/temp/*@>5f681*/ - /*@>5f684*/1];
                        }
                        /* end of gf_mul() */
                        /*  end of gf_div() */
                        /*@>2c365*/if (/*@>312af*/decoder_in_tmp/*@>4ec9d*/ != /*@>312b1*/0) {
                            /*@>312b7*/temp/*@>2c373*/ = /*@>60dc4*/rtConstP./*@>67585*/RSDecoder_table2/*@>5f68f*/[/*@>5f68b*/decoder_in_tmp/*@>5f689*/ - /*@>5f68c*/1]/*@>2c375*/ % /*@>312bc*/7;
                            /*@>2c3a2*/if (/*@>312c9*/temp/*@>2c3a3*/ == /*@>312cb*/0) {
                                /*@>312cc*/temp/*@>2c3ab*/ = /*@>66118*/7;
                            }
                            /*@>312cf*/decoder_in_tmp/*@>2c3b1*/ = /*@>60dcc*/rtConstP./*@>67588*/RSDecoder_table1/*@>5f697*/[/*@>5f693*/temp/*@>5f691*/ - /*@>5f694*/1];
                        }
                        /*  end of gf_pow()  */
                        /*@>2c3ba*/if (/*@>36ed7*/RSDecoder_OmegaZActual_idx_1/*@>2c3bb*/ > /*@>312d6*/0) {
                            /*  start of gf_mul: gf_mul multiplies the scalars  a * b */
                            /*@>2c3dc*/if (/*@>312e6*/decoder_in_tmp/*@>2c3e2*/ == /*@>312e8*/0) {
                                /*@>312f5*/decoder_in_tmp/*@>2c407*/ = /*@>6611b*/0;
                            } else {
                                /*@>312ec*/temp/*@>2c3f3*/ = (/*@>60dd4*/rtConstP./*@>6758b*/RSDecoder_table2/*@>5f69f*/[/*@>5f69b*/RSDecoder_OmegaZActual_idx_1/*@>5f699*/ - /*@>5f69c*/1]/*@>2c3f6*/ + /*@>60dda*/rtConstP./*@>6758e*/RSDecoder_table2/*@>5f6a7*/[/*@>5f6a3*/decoder_in_tmp/*@>5f6a1*/ - /*@>5f6a4*/1])/*@>2c3f5*/ % /*@>312f4*/7;
                                /*@>2c418*/if (/*@>312fb*/temp/*@>2c419*/ == /*@>312fd*/0) {
                                    /*@>31303*/temp/*@>2c431*/ = /*@>66121*/7;
                                }
                                /*@>31306*/decoder_in_tmp/*@>2c43d*/ = /*@>60df0*/rtConstP./*@>67597*/RSDecoder_table1/*@>5f6d6*/[/*@>5f6d2*/temp/*@>5f6d0*/ - /*@>5f6d3*/1];
                            }
                            /* end of gf_mul() */
                            /*@>3130b*/Temp3/*@>66682*/ ^= /*@>3130f*/decoder_in_tmp;
                        }
                        /*  start of gf_pow():gf_pow raises x^yd  */
                        /*  start of gf_div():gf_div divides the scalars x/b */
                        /*@>2c453*/if (/*@>5f6ab*/RSDecoder_Errloc/*@>5f6ad*/[/*@>5f6aa*/j]/*@>2c454*/ == /*@>31318*/0) {
                            /*@>31329*/temp/*@>2c485*/ = /*@>6611e*/1;
                        } else {
                            /*@>31321*/temp/*@>2c473*/ = /*@>60de2*/rtConstP./*@>67591*/RSDecoder_table1/*@>5f6ce*/[/*@>5f6c1*/6/*@>5f6c0*/ - /*@>60de8*/rtConstP./*@>67594*/RSDecoder_table2/*@>5f6c3*/[/*@>5f6c8*/RSDecoder_Errloc/*@>5f6c7*/[/*@>5f6ca*/j]/*@>5f6c5*/ - /*@>5f6cb*/1]];
                        }
                        /*  start of gf_mul: gf_mul multiplies the scalars  a * b */
                        /*@>2c4ab*/if (/*@>31339*/temp/*@>2c4ac*/ == /*@>3133b*/0) {
                            /*@>31342*/decoder_in_tmp/*@>2c4c4*/ = /*@>66124*/0;
                        } else {
                            /*@>3133c*/temp/*@>2c4b3*/ = /*@>60df8*/rtConstP./*@>6759a*/RSDecoder_table2/*@>5f6de*/[/*@>5f6da*/temp/*@>5f6d8*/ - /*@>5f6db*/1]/*@>2c4b5*/ % /*@>31341*/7;
                            /*@>2c4d4*/if (/*@>3134b*/temp/*@>2c4d5*/ == /*@>3134d*/0) {
                                /*@>3135a*/temp/*@>2c4f7*/ = /*@>66127*/7;
                            }
                            /*@>31360*/decoder_in_tmp/*@>2c502*/ = /*@>60e00*/rtConstP./*@>6759d*/RSDecoder_table1/*@>5f6e6*/[/*@>5f6e2*/temp/*@>5f6e0*/ - /*@>5f6e3*/1];
                        }
                        /* end of gf_mul() */
                        /*  end of gf_div() */
                        /*@>2c44e*/if (/*@>31311*/decoder_in_tmp/*@>4ec9c*/ != /*@>31313*/0) {
                            /*@>31319*/temp/*@>2c45c*/ = /*@>60e08*/rtConstP./*@>675a0*/RSDecoder_table2/*@>5f6ee*/[/*@>5f6ea*/decoder_in_tmp/*@>5f6e8*/ - /*@>5f6eb*/1]/*@>2c45e*/ % /*@>3131e*/7;
                            /*@>2c48b*/if (/*@>3132b*/temp/*@>2c48c*/ == /*@>3132d*/0) {
                                /*@>3132e*/temp/*@>2c494*/ = /*@>6612a*/7;
                            }
                            /*@>31331*/decoder_in_tmp/*@>2c49a*/ = /*@>60e12*/rtConstP./*@>675a3*/RSDecoder_table1/*@>5f6fb*/[/*@>5f6f7*/temp/*@>5f6f5*/ - /*@>5f6f8*/1];
                        }
                        /*  end of gf_pow()  */
                        /*@>2c4a3*/if (/*@>612fa*/rtDW->/*@>67759*/RSDecoder_PsiZDeriv/*@>5f6f3*/[/*@>5f6f0*/1]/*@>2c4a4*/ > /*@>31338*/0) {
                            /*  start of gf_mul: gf_mul multiplies the scalars  a * b */
                            /*@>2c4c7*/if ((/*@>61303*/rtDW->/*@>6775c*/RSDecoder_PsiZDeriv/*@>5f700*/[/*@>5f6fd*/1]/*@>2c4c9*/ == /*@>31347*/0)/*@>2c4c8*/ || (/*@>31348*/decoder_in_tmp/*@>2c4d0*/ == /*@>3134a*/0)) {
                                /*@>31357*/decoder_in_tmp/*@>2c4f2*/ = /*@>6612d*/0;
                            } else {
                                /*@>3134e*/temp/*@>2c4db*/ = (/*@>60e1c*/rtConstP./*@>675a6*/RSDecoder_table2/*@>5f70f*/[/*@>6130c*/rtDW->/*@>6775f*/RSDecoder_PsiZDeriv/*@>5f709*/[/*@>5f70b*/1]/*@>5f707*/ - /*@>5f70c*/1]/*@>2c4de*/ + /*@>60e22*/rtConstP./*@>675a9*/RSDecoder_table2/*@>5f717*/[/*@>5f713*/decoder_in_tmp/*@>5f711*/ - /*@>5f714*/1])/*@>2c4dd*/ % /*@>31356*/7;
                                /*@>2c4fb*/if (/*@>3135d*/temp/*@>2c4fc*/ == /*@>3135f*/0) {
                                    /*@>31365*/temp/*@>2c50e*/ = /*@>66133*/7;
                                }
                                /*@>31368*/decoder_in_tmp/*@>2c518*/ = /*@>60e38*/rtConstP./*@>675b2*/RSDecoder_table1/*@>5f746*/[/*@>5f742*/temp/*@>5f740*/ - /*@>5f743*/1];
                            }
                            /* end of gf_mul() */
                            /*@>3136d*/Temp4/*@>66683*/ ^= /*@>31371*/decoder_in_tmp;
                        }
                        /*  start of gf_pow():gf_pow raises x^yd  */
                        /*  start of gf_div():gf_div divides the scalars x/b */
                        /*@>2c558*/if (/*@>5f71b*/RSDecoder_Errloc/*@>5f71d*/[/*@>5f71a*/j]/*@>2c559*/ == /*@>3137f*/0) {
                            /*@>31390*/temp/*@>2c58a*/ = /*@>66130*/1;
                        } else {
                            /*@>31388*/temp/*@>2c578*/ = /*@>60e2a*/rtConstP./*@>675ac*/RSDecoder_table1/*@>5f73e*/[/*@>5f731*/6/*@>5f730*/ - /*@>60e30*/rtConstP./*@>675af*/RSDecoder_table2/*@>5f733*/[/*@>5f738*/RSDecoder_Errloc/*@>5f737*/[/*@>5f73a*/j]/*@>5f735*/ - /*@>5f73b*/1]];
                        }
                        /*  start of gf_mul: gf_mul multiplies the scalars  a * b */
                        /*@>2c5ad*/if (/*@>313a0*/temp/*@>2c5ae*/ == /*@>313a2*/0) {
                            /*@>313a9*/decoder_in_tmp/*@>2c5c6*/ = /*@>66136*/0;
                        } else {
                            /*@>313a3*/temp/*@>2c5b5*/ = /*@>60e40*/rtConstP./*@>675b5*/RSDecoder_table2/*@>5f74e*/[/*@>5f74a*/temp/*@>5f748*/ - /*@>5f74b*/1]/*@>2c5b7*/ % /*@>313a8*/7;
                            /*@>2c5d4*/if (/*@>313b2*/temp/*@>2c5d5*/ == /*@>313b4*/0) {
                                /*@>313c1*/temp/*@>2c5fa*/ = /*@>66139*/7;
                            }
                            /*@>313c7*/decoder_in_tmp/*@>2c60d*/ = /*@>60e48*/rtConstP./*@>675b8*/RSDecoder_table1/*@>5f756*/[/*@>5f752*/temp/*@>5f750*/ - /*@>5f753*/1];
                        }
                        /* end of gf_mul() */
                        /*  end of gf_div() */
                        /*@>2c553*/if (/*@>31378*/decoder_in_tmp/*@>4ec9b*/ != /*@>3137a*/0) {
                            /*@>31380*/temp/*@>2c561*/ = (/*@>60e50*/rtConstP./*@>675bb*/RSDecoder_table2/*@>5f75e*/[/*@>5f75a*/decoder_in_tmp/*@>5f758*/ - /*@>5f75b*/1]/*@>31a4b*/ << /*@>35f61*/1)/*@>2c563*/ % /*@>31385*/7;
                            /*@>2c590*/if (/*@>31392*/temp/*@>2c591*/ == /*@>31394*/0) {
                                /*@>31395*/temp/*@>2c599*/ = /*@>6613c*/7;
                            }
                            /*@>31398*/decoder_in_tmp/*@>2c59f*/ = /*@>60e58*/rtConstP./*@>675be*/RSDecoder_table1/*@>5f766*/[/*@>5f762*/temp/*@>5f760*/ - /*@>5f763*/1];
                        }
                        /*  end of gf_pow()  */
                        /*@>2c5a8*/if (/*@>36edb*/RSDecoder_OmegaZActual_idx_2/*@>2c5a9*/ > /*@>3139f*/0) {
                            /*  start of gf_mul: gf_mul multiplies the scalars  a * b */
                            /*@>2c5ca*/if (/*@>313af*/decoder_in_tmp/*@>2c5d0*/ == /*@>313b1*/0) {
                                /*@>313be*/decoder_in_tmp/*@>2c5f5*/ = /*@>6613f*/0;
                            } else {
                                /*@>313b5*/temp/*@>2c5e1*/ = (/*@>60e60*/rtConstP./*@>675c1*/RSDecoder_table2/*@>5f76e*/[/*@>5f76a*/RSDecoder_OmegaZActual_idx_2/*@>5f768*/ - /*@>5f76b*/1]/*@>2c5e4*/ + /*@>60e66*/rtConstP./*@>675c4*/RSDecoder_table2/*@>5f776*/[/*@>5f772*/decoder_in_tmp/*@>5f770*/ - /*@>5f773*/1])/*@>2c5e3*/ % /*@>313bd*/7;
                                /*@>2c606*/if (/*@>313c4*/temp/*@>2c607*/ == /*@>313c6*/0) {
                                    /*@>313cc*/temp/*@>2c61f*/ = /*@>66145*/7;
                                }
                                /*@>313cf*/decoder_in_tmp/*@>2c62b*/ = /*@>60e7c*/rtConstP./*@>675cd*/RSDecoder_table1/*@>5f7a5*/[/*@>5f7a1*/temp/*@>5f79f*/ - /*@>5f7a2*/1];
                            }
                            /* end of gf_mul() */
                            /*@>313d4*/Temp3/*@>66684*/ ^= /*@>313d8*/decoder_in_tmp;
                        }
                        /*  start of gf_pow():gf_pow raises x^yd  */
                        /*  start of gf_div():gf_div divides the scalars x/b */
                        /*@>2c641*/if (/*@>5f77a*/RSDecoder_Errloc/*@>5f77c*/[/*@>5f779*/j]/*@>2c642*/ == /*@>313e1*/0) {
                            /*@>313f2*/temp/*@>2c673*/ = /*@>66142*/1;
                        } else {
                            /*@>313ea*/temp/*@>2c661*/ = /*@>60e6e*/rtConstP./*@>675c7*/RSDecoder_table1/*@>5f79d*/[/*@>5f790*/6/*@>5f78f*/ - /*@>60e74*/rtConstP./*@>675ca*/RSDecoder_table2/*@>5f792*/[/*@>5f797*/RSDecoder_Errloc/*@>5f796*/[/*@>5f799*/j]/*@>5f794*/ - /*@>5f79a*/1]];
                        }
                        /*  start of gf_mul: gf_mul multiplies the scalars  a * b */
                        /*@>2c699*/if (/*@>31402*/temp/*@>2c69a*/ == /*@>31404*/0) {
                            /*@>3140b*/decoder_in_tmp/*@>2c6b2*/ = /*@>66148*/0;
                        } else {
                            /*@>31405*/temp/*@>2c6a1*/ = /*@>60e84*/rtConstP./*@>675d0*/RSDecoder_table2/*@>5f7ad*/[/*@>5f7a9*/temp/*@>5f7a7*/ - /*@>5f7aa*/1]/*@>2c6a3*/ % /*@>3140a*/7;
                            /*@>2c6c2*/if (/*@>31414*/temp/*@>2c6c3*/ == /*@>31416*/0) {
                                /*@>31423*/temp/*@>2c6e5*/ = /*@>6614b*/7;
                            }
                            /*@>31429*/decoder_in_tmp/*@>2c6f0*/ = /*@>60e8c*/rtConstP./*@>675d3*/RSDecoder_table1/*@>5f7b5*/[/*@>5f7b1*/temp/*@>5f7af*/ - /*@>5f7b2*/1];
                        }
                        /* end of gf_mul() */
                        /*  end of gf_div() */
                        /*@>2c63c*/if (/*@>313da*/decoder_in_tmp/*@>4ec9a*/ != /*@>313dc*/0) {
                            /*@>313e2*/temp/*@>2c64a*/ = (/*@>60e94*/rtConstP./*@>675d6*/RSDecoder_table2/*@>5f7bd*/[/*@>5f7b9*/decoder_in_tmp/*@>5f7b7*/ - /*@>5f7ba*/1]/*@>31a42*/ << /*@>35f63*/1)/*@>2c64c*/ % /*@>313e7*/7;
                            /*@>2c679*/if (/*@>313f4*/temp/*@>2c67a*/ == /*@>313f6*/0) {
                                /*@>313f7*/temp/*@>2c682*/ = /*@>6614e*/7;
                            }
                            /*@>313fa*/decoder_in_tmp/*@>2c688*/ = /*@>60e9e*/rtConstP./*@>675d9*/RSDecoder_table1/*@>5f7ca*/[/*@>5f7c6*/temp/*@>5f7c4*/ - /*@>5f7c7*/1];
                        }
                        /*  end of gf_pow()  */
                        /*@>2c691*/if (/*@>61315*/rtDW->/*@>67762*/RSDecoder_PsiZDeriv/*@>5f7c2*/[/*@>5f7bf*/2]/*@>2c692*/ > /*@>31401*/0) {
                            /*  start of gf_mul: gf_mul multiplies the scalars  a * b */
                            /*@>2c6b5*/if ((/*@>6131e*/rtDW->/*@>67765*/RSDecoder_PsiZDeriv/*@>5f7cf*/[/*@>5f7cc*/2]/*@>2c6b7*/ == /*@>31410*/0)/*@>2c6b6*/ || (/*@>31411*/decoder_in_tmp/*@>2c6be*/ == /*@>31413*/0)) {
                                /*@>31420*/decoder_in_tmp/*@>2c6e0*/ = /*@>66151*/0;
                            } else {
                                /*@>31417*/temp/*@>2c6c9*/ = (/*@>60ea8*/rtConstP./*@>675dc*/RSDecoder_table2/*@>5f7de*/[/*@>61327*/rtDW->/*@>67768*/RSDecoder_PsiZDeriv/*@>5f7d8*/[/*@>5f7da*/2]/*@>5f7d6*/ - /*@>5f7db*/1]/*@>2c6cc*/ + /*@>60eae*/rtConstP./*@>675df*/RSDecoder_table2/*@>5f7e6*/[/*@>5f7e2*/decoder_in_tmp/*@>5f7e0*/ - /*@>5f7e3*/1])/*@>2c6cb*/ % /*@>3141f*/7;
                                /*@>2c6e9*/if (/*@>31426*/temp/*@>2c6ea*/ == /*@>31428*/0) {
                                    /*@>3142e*/temp/*@>2c6fc*/ = /*@>66157*/7;
                                }
                                /*@>31431*/decoder_in_tmp/*@>2c706*/ = /*@>60ec4*/rtConstP./*@>675e8*/RSDecoder_table1/*@>5f815*/[/*@>5f811*/temp/*@>5f80f*/ - /*@>5f812*/1];
                            }
                            /* end of gf_mul() */
                            /*@>31436*/Temp4/*@>66685*/ ^= /*@>3143a*/decoder_in_tmp;
                        }
                        /*  start of gf_pow():gf_pow raises x^yd  */
                        /*  start of gf_div():gf_div divides the scalars x/b */
                        /*@>2c746*/if (/*@>5f7ea*/RSDecoder_Errloc/*@>5f7ec*/[/*@>5f7e9*/j]/*@>2c747*/ == /*@>31448*/0) {
                            /*@>31459*/temp/*@>2c778*/ = /*@>66154*/1;
                        } else {
                            /*@>31451*/temp/*@>2c766*/ = /*@>60eb6*/rtConstP./*@>675e2*/RSDecoder_table1/*@>5f80d*/[/*@>5f800*/6/*@>5f7ff*/ - /*@>60ebc*/rtConstP./*@>675e5*/RSDecoder_table2/*@>5f802*/[/*@>5f807*/RSDecoder_Errloc/*@>5f806*/[/*@>5f809*/j]/*@>5f804*/ - /*@>5f80a*/1]];
                        }
                        /*  start of gf_mul: gf_mul multiplies the scalars  a * b */
                        /*@>2c79b*/if (/*@>31469*/temp/*@>2c79c*/ == /*@>3146b*/0) {
                            /*@>31472*/decoder_in_tmp/*@>2c7b4*/ = /*@>6615a*/0;
                        } else {
                            /*@>3146c*/temp/*@>2c7a3*/ = /*@>60ecc*/rtConstP./*@>675eb*/RSDecoder_table2/*@>5f81d*/[/*@>5f819*/temp/*@>5f817*/ - /*@>5f81a*/1]/*@>2c7a5*/ % /*@>31471*/7;
                            /*@>2c7c2*/if (/*@>3147b*/temp/*@>2c7c3*/ == /*@>3147d*/0) {
                                /*@>3148a*/temp/*@>2c7e8*/ = /*@>6615d*/7;
                            }
                            /*@>31490*/decoder_in_tmp/*@>2c7fb*/ = /*@>60ed4*/rtConstP./*@>675ee*/RSDecoder_table1/*@>5f825*/[/*@>5f821*/temp/*@>5f81f*/ - /*@>5f822*/1];
                        }
                        /* end of gf_mul() */
                        /*  end of gf_div() */
                        /*@>2c741*/if (/*@>31441*/decoder_in_tmp/*@>4ec99*/ != /*@>31443*/0) {
                            /*@>31449*/temp/*@>2c74f*/ = /*@>60edc*/rtConstP./*@>675f1*/RSDecoder_table2/*@>5f82d*/[/*@>5f829*/decoder_in_tmp/*@>5f827*/ - /*@>5f82a*/1]/*@>31a37*/ * /*@>30c03*/3/*@>2c751*/ % /*@>3144e*/7;
                            /*@>2c77e*/if (/*@>3145b*/temp/*@>2c77f*/ == /*@>3145d*/0) {
                                /*@>3145e*/temp/*@>2c787*/ = /*@>66160*/7;
                            }
                            /*@>31461*/decoder_in_tmp/*@>2c78d*/ = /*@>60ee4*/rtConstP./*@>675f4*/RSDecoder_table1/*@>5f835*/[/*@>5f831*/temp/*@>5f82f*/ - /*@>5f832*/1];
                        }
                        /*  end of gf_pow()  */
                        /*@>2c796*/if (/*@>36edf*/RSDecoder_OmegaZActual_idx_3/*@>2c797*/ > /*@>31468*/0) {
                            /*  start of gf_mul: gf_mul multiplies the scalars  a * b */
                            /*@>2c7b8*/if (/*@>31478*/decoder_in_tmp/*@>2c7be*/ == /*@>3147a*/0) {
                                /*@>31487*/decoder_in_tmp/*@>2c7e3*/ = /*@>66163*/0;
                            } else {
                                /*@>3147e*/temp/*@>2c7cf*/ = (/*@>60eec*/rtConstP./*@>675f7*/RSDecoder_table2/*@>5f83d*/[/*@>5f839*/RSDecoder_OmegaZActual_idx_3/*@>5f837*/ - /*@>5f83a*/1]/*@>2c7d2*/ + /*@>60ef2*/rtConstP./*@>675fa*/RSDecoder_table2/*@>5f845*/[/*@>5f841*/decoder_in_tmp/*@>5f83f*/ - /*@>5f842*/1])/*@>2c7d1*/ % /*@>31486*/7;
                                /*@>2c7f4*/if (/*@>3148d*/temp/*@>2c7f5*/ == /*@>3148f*/0) {
                                    /*@>31495*/temp/*@>2c80d*/ = /*@>66169*/7;
                                }
                                /*@>31498*/decoder_in_tmp/*@>2c819*/ = /*@>60f08*/rtConstP./*@>67603*/RSDecoder_table1/*@>5f874*/[/*@>5f870*/temp/*@>5f86e*/ - /*@>5f871*/1];
                            }
                            /* end of gf_mul() */
                            /*@>3149d*/Temp3/*@>66686*/ ^= /*@>314a1*/decoder_in_tmp;
                        }
                        /*  start of gf_pow():gf_pow raises x^yd  */
                        /*  start of gf_div():gf_div divides the scalars x/b */
                        /*@>2c82f*/if (/*@>5f849*/RSDecoder_Errloc/*@>5f84b*/[/*@>5f848*/j]/*@>2c830*/ == /*@>314aa*/0) {
                            /*@>314bb*/temp/*@>2c861*/ = /*@>66166*/1;
                        } else {
                            /*@>314b3*/temp/*@>2c84f*/ = /*@>60efa*/rtConstP./*@>675fd*/RSDecoder_table1/*@>5f86c*/[/*@>5f85f*/6/*@>5f85e*/ - /*@>60f00*/rtConstP./*@>67600*/RSDecoder_table2/*@>5f861*/[/*@>5f866*/RSDecoder_Errloc/*@>5f865*/[/*@>5f868*/j]/*@>5f863*/ - /*@>5f869*/1]];
                        }
                        /*  start of gf_mul: gf_mul multiplies the scalars  a * b */
                        /*@>2c887*/if (/*@>314cb*/temp/*@>2c888*/ == /*@>314cd*/0) {
                            /*@>314d4*/decoder_in_tmp/*@>2c8a0*/ = /*@>6616c*/0;
                        } else {
                            /*@>314ce*/temp/*@>2c88f*/ = /*@>60f10*/rtConstP./*@>67606*/RSDecoder_table2/*@>5f87c*/[/*@>5f878*/temp/*@>5f876*/ - /*@>5f879*/1]/*@>2c891*/ % /*@>314d3*/7;
                            /*@>2c8b0*/if (/*@>314dd*/temp/*@>2c8b1*/ == /*@>314df*/0) {
                                /*@>314ec*/temp/*@>2c8d3*/ = /*@>6616f*/7;
                            }
                            /*@>314f2*/decoder_in_tmp/*@>2c8de*/ = /*@>60f18*/rtConstP./*@>67609*/RSDecoder_table1/*@>5f884*/[/*@>5f880*/temp/*@>5f87e*/ - /*@>5f881*/1];
                        }
                        /* end of gf_mul() */
                        /*  end of gf_div() */
                        /*@>2c82a*/if (/*@>314a3*/decoder_in_tmp/*@>4ec98*/ != /*@>314a5*/0) {
                            /*@>314ab*/temp/*@>2c838*/ = /*@>60f20*/rtConstP./*@>6760c*/RSDecoder_table2/*@>5f88c*/[/*@>5f888*/decoder_in_tmp/*@>5f886*/ - /*@>5f889*/1]/*@>31a33*/ * /*@>30c01*/3/*@>2c83a*/ % /*@>314b0*/7;
                            /*@>2c867*/if (/*@>314bd*/temp/*@>2c868*/ == /*@>314bf*/0) {
                                /*@>314c0*/temp/*@>2c870*/ = /*@>66172*/7;
                            }
                            /*@>314c3*/decoder_in_tmp/*@>2c876*/ = /*@>60f2a*/rtConstP./*@>6760f*/RSDecoder_table1/*@>5f899*/[/*@>5f895*/temp/*@>5f893*/ - /*@>5f896*/1];
                        }
                        /*  end of gf_pow()  */
                        /*@>2c87f*/if (/*@>61330*/rtDW->/*@>6776b*/RSDecoder_PsiZDeriv/*@>5f891*/[/*@>5f88e*/3]/*@>2c880*/ > /*@>314ca*/0) {
                            /*  start of gf_mul: gf_mul multiplies the scalars  a * b */
                            /*@>2c8a3*/if ((/*@>61339*/rtDW->/*@>6776e*/RSDecoder_PsiZDeriv/*@>5f89e*/[/*@>5f89b*/3]/*@>2c8a5*/ == /*@>314d9*/0)/*@>2c8a4*/ || (/*@>314da*/decoder_in_tmp/*@>2c8ac*/ == /*@>314dc*/0)) {
                                /*@>314e9*/decoder_in_tmp/*@>2c8ce*/ = /*@>66175*/0;
                            } else {
                                /*@>314e0*/temp/*@>2c8b7*/ = (/*@>60f34*/rtConstP./*@>67612*/RSDecoder_table2/*@>5f8ad*/[/*@>61342*/rtDW->/*@>67771*/RSDecoder_PsiZDeriv/*@>5f8a7*/[/*@>5f8a9*/3]/*@>5f8a5*/ - /*@>5f8aa*/1]/*@>2c8ba*/ + /*@>60f3a*/rtConstP./*@>67615*/RSDecoder_table2/*@>5f8b5*/[/*@>5f8b1*/decoder_in_tmp/*@>5f8af*/ - /*@>5f8b2*/1])/*@>2c8b9*/ % /*@>314e8*/7;
                                /*@>2c8d7*/if (/*@>314ef*/temp/*@>2c8d8*/ == /*@>314f1*/0) {
                                    /*@>314f7*/temp/*@>2c8ea*/ = /*@>6617b*/7;
                                }
                                /*@>314fa*/decoder_in_tmp/*@>2c8f4*/ = /*@>60f50*/rtConstP./*@>6761e*/RSDecoder_table1/*@>5f8d2*/[/*@>5f8ce*/temp/*@>5f8cc*/ - /*@>5f8cf*/1];
                            }
                            /* end of gf_mul() */
                            /*@>314ff*/Temp4/*@>66687*/ ^= /*@>31503*/decoder_in_tmp;
                        }
                        /* Re-use space in Temp1 */
                        /*  start of gf_div():gf_div divides the scalars x/b */
                        /*@>4bcd*/if (/*@>3107f*/Temp4/*@>4bcc*/ == /*@>31083*/0) {
                            /*@>31084*/temp/*@>4bd0*/ = /*@>66178*/1;
                        } else {
                            /*@>31086*/temp/*@>4bd7*/ = /*@>60f42*/rtConstP./*@>67618*/RSDecoder_table1/*@>5f8ca*/[/*@>5f8c0*/6/*@>5f8bf*/ - /*@>60f48*/rtConstP./*@>6761b*/RSDecoder_table2/*@>5f8c2*/[/*@>5f8c6*/Temp4/*@>5f8c4*/ - /*@>5f8c7*/1]];
                        }
                        /*  start of gf_mul: gf_mul multiplies the scalars  a * b */
                        /*@>4bdd*/if ((/*@>31088*/temp/*@>4bdb*/ == /*@>3108b*/0)/*@>4bdc*/ || (/*@>31081*/Temp3/*@>4bda*/ == /*@>3108a*/0)) {
                            /*@>3108c*/decoder_in_tmp/*@>4bdf*/ = /*@>6617e*/0;
                        } else {
                            /*@>31090*/temp/*@>4be8*/ = (/*@>60f58*/rtConstP./*@>67621*/RSDecoder_table2/*@>5f8da*/[/*@>5f8d6*/temp/*@>5f8d4*/ - /*@>5f8d7*/1]/*@>4be6*/ + /*@>60f5e*/rtConstP./*@>67624*/RSDecoder_table2/*@>5f8e2*/[/*@>5f8de*/Temp3/*@>5f8dc*/ - /*@>5f8df*/1])/*@>4be7*/ % /*@>3108f*/7;
                            /*@>4beb*/if (/*@>31092*/temp/*@>4bea*/ == /*@>31094*/0) {
                                /*@>31095*/temp/*@>4bed*/ = /*@>66181*/7;
                            }
                            /*@>31098*/decoder_in_tmp/*@>4bf1*/ = /*@>60f66*/rtConstP./*@>67627*/RSDecoder_table1/*@>5f8ea*/[/*@>5f8e6*/temp/*@>5f8e4*/ - /*@>5f8e7*/1];
                        }
                        /* end of gf_mul() */
                        /*  end of gf_div() */
                        /* Find exponent representations of Errloc ==> get actual error locations */
                        /* Correct the current error */
                        /*@>46d86*/temp/*@>46d88*/ = /*@>30c1a*/6/*@>24c22*/ - /*@>60f6e*/rtConstP./*@>6762a*/RSDecoder_table2/*@>5f8fb*/[/*@>5f8f5*/RSDecoder_Errloc/*@>5f8f4*/[/*@>5f8f7*/j]/*@>5f8f2*/ - /*@>5f8f8*/1];
                        /*@>6134b*/rtDW->/*@>67774*/RSDecoder_CCode/*@>24c7c*/[temp]/*@>66688*/ ^= /*@>310bd*/decoder_in_tmp;
                    }
                    /*  end of correctErrors()  */
                    /* Assign outputs.  Reduce cnumerr by the number of punctures and erasures. */
                    /*  start of assignOutputs():Populate output vectors with proper data */
                    /* Corrected message.  If there is a decoding failure, return the input message. */
                    /*@>61296*/rtDW->/*@>67735*/RSDecoder/*@>2c91a*/[/*@>3150a*/iIdx/*@>31a2a*/ * /*@>3150c*/3]/*@>2c919*/ = /*@>2c923*/(uint32_T)/*@>6129d*/rtDW->/*@>67738*/RSDecoder_CCode/*@>5f5ab*/[/*@>5f5a8*/0];
                    /*@>612a6*/rtDW->/*@>6773b*/RSDecoder/*@>2c92e*/[/*@>31512*/iIdx/*@>31a27*/ * /*@>31514*/3/*@>2c930*/ + /*@>31517*/1]/*@>2c92d*/ = /*@>2c937*/(uint32_T)/*@>612ad*/rtDW->/*@>6773e*/RSDecoder_CCode/*@>5f5b0*/[/*@>5f5ad*/1];
                    /*@>612cf*/rtDW->/*@>6774a*/RSDecoder/*@>2c942*/[/*@>3151b*/iIdx/*@>31a24*/ * /*@>3151d*/3/*@>2c944*/ + /*@>31520*/2]/*@>2c941*/ = /*@>2c94b*/(uint32_T)/*@>612d6*/rtDW->/*@>6774d*/RSDecoder_CCode/*@>5f5c1*/[/*@>5f5be*/2];
                    /* Optional output for # of errors corrected */
                    /* Parity of corrected codeword. If it is punctured, remove the punctured symbols. */
                    /* If there is a decoding failure, return the input parity. */
                    /*  end of assignOutputs()  */
                }
            }
        }
    }
}
/* {E!d38}End of S-Function (scomberlekamp): '<S6>/RS Decoder' */

/* {S!d40}S-Function (scominttobit): '<S6>/Integer to Bit Converter' incorporates:
 *  S-Function (scomberlekamp): '<S6>/RS Decoder'
 */
/*  end of COMM_DoBerlekamp()  */
/* Integer to Bit Conversion */
/*@>259c4*/for (/*@>661d4*/RSDecoder_OmegaZActual_idx_0 = /*@>661d3*/0; /*@>661de*/RSDecoder_OmegaZActual_idx_0 < /*@>661dc*/2400; /*@>661da*/RSDecoder_OmegaZActual_idx_0/*@>66654*/++) {
    uint32_T u;
    /*@>3109f*/iIdx/*@>56ba*/ = (/*@>3109b*/RSDecoder_OmegaZActual_idx_0/*@>56b7*/ + /*@>3109d*/1)/*@>31aba*/ * /*@>3109e*/3;
    /*@>310a1*/u/*@>56be*/ = /*@>60ffd*/rtDW->/*@>67648*/RSDecoder/*@>5f171*/[/*@>5f16e*/RSDecoder_OmegaZActual_idx_0];
    /*@>61016*/rtDW->/*@>67651*/IntegertoBitConverter/*@>2bf72*/[/*@>31186*/iIdx/*@>2bf74*/ - /*@>31188*/1]/*@>2bf71*/ = /*@>33988*/(int8_T)(/*@>31189*/u/*@>31ab9*/ & /*@>3118b*/1U);
    /*@>3118c*/u/*@>66656*/ >>= /*@>31190*/1U;
    /*@>61038*/rtDW->/*@>6765d*/IntegertoBitConverter/*@>2bf8e*/[/*@>37253*/iIdx/*@>46680*/ - /*@>3119a*/2]/*@>2bf8d*/ = /*@>339a2*/(int8_T)(/*@>3119b*/u/*@>31ab8*/ & /*@>3119d*/1U);
    /*@>6104a*/rtDW->/*@>67663*/IntegertoBitConverter/*@>2bfaa*/[/*@>37f92*/iIdx/*@>46684*/ - /*@>311ac*/3]/*@>2bfa9*/ = /*@>339c1*/(int8_T)(/*@>37263*/u/*@>37261*/ >> /*@>37264*/1U/*@>31ab7*/ & /*@>311af*/1U);
}
/* {E!d40}End of S-Function (scominttobit): '<S6>/Integer to Bit Converter' */
/*@>20a1d*/for (/*@>661c3*/RSDecoder_OmegaZActual_idx_0 = /*@>661c2*/0; /*@>661cd*/RSDecoder_OmegaZActual_idx_0 < /*@>661cb*/7200; /*@>661c9*/RSDecoder_OmegaZActual_idx_0/*@>66655*/++) {
    /* {S!d42}DataTypeConversion: '<S7>/Conversion' incorporates:
 *  S-Function (scominttobit): '<S6>/Integer to Bit Converter'
 */
    /*@>30d6d*/rtY_descrambler_in/*@>23021*/[/*@>30d6b*/RSDecoder_OmegaZActual_idx_0]/*@>20a0e*/ = /*@>34237*/(uint8_T)/*@>6102f*/rtDW->/*@>6765a*/IntegertoBitConverter/*@>5f187*/[/*@>5f184*/RSDecoder_OmegaZActual_idx_0];
    /* {S!d44}DataTypeConversion: '<S4>/Data Type Conversion' incorporates:
 *  DataTypeConversion: '<S7>/Conversion'
 */
    /*@>61041*/rtDW->/*@>67660*/DataTypeConversion/*@>23059*/[/*@>30d63*/RSDecoder_OmegaZActual_idx_0]/*@>20a2b*/ = (/*@>5f18b*/rtY_descrambler_in/*@>5f18d*/[/*@>5f18a*/RSDecoder_OmegaZActual_idx_0]/*@>31ac0*/ != /*@>31abe*/0.0);
}
/* {S!d48}S-Function (scomscram2): '<S4>/Descrambler' incorporates:
 *  DataTypeConversion: '<S4>/Data Type Conversion'
 */
/*@>58c94*/memset(&/*@>54290*/shiftReg/*@>54291*/[/*@>5428d*/0], /*@>66016*/0, /*@>54296*/sizeof(int32_T)/*@>65c22*/ << /*@>65c21*/4U);
/*@>25948*/for (/*@>66192*/j = /*@>66191*/0; /*@>6619c*/j < /*@>6619a*/7200; /*@>66198*/j/*@>66657*/++) {
    /*@>46d2e*/inv/*@>46d30*/ = /*@>61083*/rtDW->/*@>67678*/DataTypeConversion/*@>5f1ab*/[/*@>5f1a8*/j];
    /*@>310a5*/iIdx/*@>5743*/ = /*@>46d32*/inv;
/*@>2597c*/    for (/*@>661b2*/RSDecoder_OmegaZActual_idx_0 = /*@>661b1*/0; /*@>661bc*/RSDecoder_OmegaZActual_idx_0 < /*@>661ba*/16; /*@>661b8*/RSDecoder_OmegaZActual_idx_0/*@>66658*/++) {
        /*@>310a9*/iIdx/*@>66659*/ -= /*@>31ad4*/(uint8_T)(/*@>60b34*/rtConstP./*@>6749e*/Descrambler_Polynomial/*@>5f1bb*/[/*@>5f1b7*/RSDecoder_OmegaZActual_idx_0/*@>5f1b5*/ + /*@>5f1b8*/1]/*@>31ad0*/ * /*@>5f1bf*/shiftReg/*@>5f1c1*/[/*@>5f1be*/RSDecoder_OmegaZActual_idx_0]);
    }
    while/*@<5758*/ (/*@>310ab*/iIdx/*@>5756*/ < /*@>310ad*/0) {
        /*@>310b1*/iIdx/*@>6665a*/ += /*@>310b0*/2;
    }
    /*@>30db7*/rtY_data_frame/*@>5760*/[/*@>310b3*/j]/*@>5763*/ = (/*@>310e3*/iIdx/*@>de8a*/ % /*@>310e5*/2/*@>31ac4*/ != /*@>31ac2*/0);
/*@>25961*/    for (/*@>661a3*/RSDecoder_OmegaZActual_idx_0 = /*@>661a2*/14; /*@>661ad*/RSDecoder_OmegaZActual_idx_0 >= /*@>661ab*/0; /*@>661a9*/RSDecoder_OmegaZActual_idx_0/*@>6665b*/--) {
        /*@>30d44*/shiftReg/*@>2324f*/[/*@>30d42*/RSDecoder_OmegaZActual_idx_0/*@>28630*/ + /*@>3115a*/1]/*@>5771*/ = /*@>5f1c5*/shiftReg/*@>5f1c7*/[/*@>5f1c4*/RSDecoder_OmegaZActual_idx_0];
    }
    /*@>30d4b*/shiftReg/*@>2321a*/[/*@>30d4a*/0U]/*@>5776*/ = inv;
    /* {S!d46}Outport: '<Root>/rx_out' incorporates:
 *  DataTypeConversion: '<S4>/Data Type Conversion'
 *  S-Function (scomscram2): '<S4>/Descrambler'
 */
    /*@>30d59*/rtY_rx_out/*@>230f7*/[/*@>30d57*/j]/*@>20a48*/ = /*@>5f1cb*/rtY_data_frame/*@>5f1cd*/[/*@>5f1ca*/j];
}
/* {E!d48}End of S-Function (scomscram2): '<S4>/Descrambler' */

/* {S!d50}Outport: '<Root>/rx_in' incorporates:
 *  Inport: '<Root>/rx_frame'
 */
/*@>58ca1*/memcpy(&/*@>530b4*/rtY_rx_in/*@>530b5*/[/*@>530a4*/0], &/*@>530bc*/rtU_rx_frame/*@>530bd*/[/*@>530b1*/0], /*@>530b3*/8464U/*@>530c0*/ * /*@>530bf*/sizeof(creal_T));
/* {S!d52}Outport: '<Root>/demapper_in' incorporates:
 *  Inport: '<Root>/rx_frame'
 */
/*@>58ca3*/memcpy(&/*@>53058*/rtY_demapper_in/*@>53059*/[/*@>53048*/0], &/*@>53062*/rtU_rx_frame/*@>53063*/[/*@>53055*/64], /*@>53057*/8400U/*@>53066*/ * /*@>53065*/sizeof(creal_T));
%<SLibInsertSolverResetCode()>\
%closefile cfgTxt
%<cfgTxt>
%<LibSetSystemField(system, "CachedOutputLocalVars", localVarDecl)>
%endfunction
%function OutputsFcnProtoType(block, system) Output
%assign fcnProtoType = ""
%openfile fcnProtoType
static void Outputs(\
%assign comma = ""
%closefile fcnProtoType
%<SLibCG_SetFcnProtoType(0, 0, fcnProtoType)>
%endfunction
