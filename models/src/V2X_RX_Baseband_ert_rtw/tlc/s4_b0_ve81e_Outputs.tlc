%implements s4_b0_ve81e_Outputs "C"

%function Outputs(block, system) Output
%assign cfgTxt = ""
%openfile cfgTxt
%assign localVarDecl = ""
%openfile localVarDecl

int32_T shiftReg[16];
int32_T RSDecoder_OmegaZ[10];
int32_T RSDecoder_PsiZ[5];
int32_T RSDecoder_PsiZStar[5];
int32_T RSDecoder_TempVec2t1[5];
int32_T RSDecoder_Errloc[4];
int32_T RSDecoder_Syndrome[4];
int32_T ForEach_itr;
int32_T RSDecoder_OmegaZActual_idx_0;
int32_T Temp4;
int32_T intVal;
int32_T inv;
int32_T j;
int8_T y[8];
%closefile localVarDecl
%<SLibCG_TrackDW(4)>\
%<SLibCG_TrackEO(2)>\
%<SLibCG_TrackEO(1)>\
%<SLibCG_TrackEO(0)>\
%<SLibCG_TrackEI(0)>\
/* {S!d54}S-Function (scominttobit): '<S6>/Bit to Integer Converter' incorporates:
 *  Inport: '<Root>/rx_frame'
 */
/* Bit to Integer Conversion */
/*@>3659b*/ForEach_itr/*@>ab36*/ = /*@>6a0b4*/128;
/*@>2c4bd*/for (/*@>6a703*/RSDecoder_OmegaZActual_idx_0 = /*@>6a702*/0; /*@>6a70d*/RSDecoder_OmegaZActual_idx_0 < /*@>6a70b*/5600; /*@>6a709*/RSDecoder_OmegaZActual_idx_0/*@>6a711*/++) {
    /* Input bit order is MSB first */
    /*@>36f9c*/intVal/*@>329b1*/ = /*@>3907b*/(int32_T)((/*@>3c4ba*/(uint32_T)/*@>6357a*/rtU_v2x_rx_bb_in/*@>6357c*/[/*@>63579*/ForEach_itr]/*@>3c4b9*/ << /*@>3c4bd*/1U/*@>3c4b8*/ | /*@>63582*/rtU_v2x_rx_bb_in/*@>63584*/[/*@>63580*/ForEach_itr/*@>6357e*/ + /*@>63581*/1])/*@>37135*/ << /*@>36fa0*/1U/*@>37134*/ | /*@>6358a*/rtU_v2x_rx_bb_in/*@>6358c*/[/*@>63588*/ForEach_itr/*@>63586*/ + /*@>63589*/2]);
    /*@>36fa5*/ForEach_itr/*@>6a712*/ += /*@>36fa9*/3;
    /*@>652a0*/rtDW->/*@>6b6be*/BittoIntegerConverter/*@>ab5d*/[/*@>3659e*/RSDecoder_OmegaZActual_idx_0]/*@>ab5f*/ = /*@>39083*/(int8_T)/*@>365a0*/intVal;
}
/* {E!d54}End of S-Function (scominttobit): '<S6>/Bit to Integer Converter' */

/* {S!d56}S-Function (scomberlekamp): '<S6>/RS Decoder' incorporates:
 *  S-Function (scominttobit): '<S6>/Bit to Integer Converter'
 */
/* start of COMM_DoBerlekamp()  */
/* The function uses the algorithm  described */
/* in Clark and Cain, Error-Correction Coding for Digital Communications, 1981 */
/* PART I - ERROR LOCATOR POLYNOMIAL COMPUTATION */
/* Compute syndrome series : length = 2*t */
/*@>65297*/rtDW->/*@>6b6bb*/RSDecoder_GammaZ/*@>acba*/[/*@>365af*/0U]/*@>acbb*/ = /*@>6a0b7*/1;
/*@>652a9*/rtDW->/*@>6b6c1*/RSDecoder_GammaZ/*@>32884*/[/*@>36fac*/1]/*@>32883*/ = /*@>6a0ba*/0;
/*@>652b2*/rtDW->/*@>6b6c4*/RSDecoder_GammaZ/*@>328b1*/[/*@>36faf*/2]/*@>328b0*/ = /*@>6a0bd*/0;
/*@>652bb*/rtDW->/*@>6b6c7*/RSDecoder_GammaZ/*@>328de*/[/*@>36fb2*/3]/*@>328dd*/ = /*@>6a0c0*/0;
/*@>652c4*/rtDW->/*@>6b6ca*/RSDecoder_GammaZ/*@>3290b*/[/*@>36fb5*/4]/*@>3290a*/ = /*@>6a0c3*/0;
/*@>652cd*/rtDW->/*@>6b6cd*/RSDecoder_GammaZTemp/*@>accc*/[/*@>365b4*/0U]/*@>accd*/ = /*@>6a0c6*/1;
/*@>2bd5e*/for (/*@>6a2b8*/ForEach_itr = /*@>6a2b7*/0; /*@>6a2c2*/ForEach_itr < /*@>6a2c0*/800; /*@>6a2be*/ForEach_itr/*@>6a713*/++) {
    int32_T Temp3;
    int32_T noErrorStatus;
    int32_T temp;
    /*@>365a2*/noErrorStatus/*@>ac6a*/ = /*@>6a0c9*/1;
    /*  start of assignInputs(): Populate the codeword and erasure vectors with the proper data  */
    /* Assign message symbols. */
    /* If there are erasures, insert zeros in the erased positions. */
    /*@>4bb4b*/RSDecoder_OmegaZActual_idx_0/*@>4bb4d*/ = /*@>365a5*/ForEach_itr/*@>371c3*/ * /*@>365a7*/7;
    /*@>652e8*/rtDW->/*@>6b6d0*/RSDecoder_CCode/*@>32922*/[/*@>36f66*/0]/*@>32921*/ = /*@>652ef*/rtDW->/*@>6b6d3*/BittoIntegerConverter/*@>63592*/[/*@>6358f*/RSDecoder_OmegaZActual_idx_0];
    /*@>65301*/rtDW->/*@>6b6d9*/RSDecoder_CCode/*@>3293f*/[/*@>36f76*/1]/*@>3293e*/ = /*@>65308*/rtDW->/*@>6b6dc*/BittoIntegerConverter/*@>635a0*/[/*@>6359c*/RSDecoder_OmegaZActual_idx_0/*@>6359a*/ + /*@>6359d*/1];
    /*@>6531a*/rtDW->/*@>6b6e2*/RSDecoder_CCode/*@>3295c*/[/*@>36f81*/2]/*@>3295b*/ = /*@>65321*/rtDW->/*@>6b6e5*/BittoIntegerConverter/*@>635a8*/[/*@>635a4*/RSDecoder_OmegaZActual_idx_0/*@>635a2*/ + /*@>635a5*/2];
    /* Assign parity symbols, again accounting for erasures */
    /* no puncturing */
    /*  end of assignInputs()  */
    /* Initialize Gamma(Z) = 1 : ASCENDING ORDER.  length = 2t+1 */
    /*@>6534e*/rtDW->/*@>6b6f1*/RSDecoder_CCode/*@>32864*/[/*@>36faa*/3]/*@>32863*/ = /*@>65355*/rtDW->/*@>6b6f4*/BittoIntegerConverter/*@>635b6*/[RSDecoder_OmegaZActual_idx_0/*@>635b0*/ + /*@>635b3*/3];
    /*@>6535e*/rtDW->/*@>6b6f7*/RSDecoder_CCode/*@>32891*/[/*@>36fad*/4]/*@>32890*/ = /*@>65365*/rtDW->/*@>6b6fa*/BittoIntegerConverter/*@>635c4*/[RSDecoder_OmegaZActual_idx_0/*@>635be*/ + /*@>635c1*/4];
    /*@>6536e*/rtDW->/*@>6b6fd*/RSDecoder_CCode/*@>328be*/[/*@>36fb0*/5]/*@>328bd*/ = /*@>65375*/rtDW->/*@>6b700*/BittoIntegerConverter/*@>635cc*/[RSDecoder_OmegaZActual_idx_0/*@>635c6*/ + /*@>635c9*/5];
    /*@>6537e*/rtDW->/*@>6b703*/RSDecoder_CCode/*@>328eb*/[/*@>36fb3*/6]/*@>328ea*/ = /*@>65385*/rtDW->/*@>6b706*/BittoIntegerConverter/*@>635d4*/[RSDecoder_OmegaZActual_idx_0/*@>635ce*/ + /*@>635d1*/6];
    /* Calculate the erasure polynomial GammaZ.GammaZ is the set of coefficients */
    /* of the erasure polynomial in ASCENDING order, because the syndrome is */
    /* calculated in ascending order as well. */
    /*  start of calculateGammaZ() -- Calculate the erasure locator polynomial */
    /*  end of calculateGammaZ()  */
    /* Calculate the syndrome by evaluating the codeword at successive */
    /* powers of alpha.  The syndrome is in ASCENDING order. */
/*@>2c2af*/    for (/*@>6a6e3*/RSDecoder_OmegaZActual_idx_0 = /*@>6a6e2*/0; /*@>6a6ed*/RSDecoder_OmegaZActual_idx_0 < /*@>6a6eb*/4; /*@>6a6e9*/RSDecoder_OmegaZActual_idx_0/*@>6a71e*/++) {
        /*@>365e2*/Temp3/*@>ad9f*/ = /*@>6a0cf*/0;
/*@>2c31b*/        for (/*@>6a6f4*/j = /*@>6a6f3*/6; /*@>6a6fe*/j >= /*@>6a6fc*/0; /*@>6a6fa*/j/*@>6a71f*/--) {
            /*  start of gf_pow():gf_pow raises x^yd  */
            /*@>36603*/temp/*@>adf1*/ = (/*@>3c50a*/RSDecoder_OmegaZActual_idx_0/*@>3c508*/ + /*@>3c50b*/1)/*@>3c507*/ * /*@>3c50d*/j/*@>371d5*/ * /*@>64e42*/rtConstP./*@>6b52f*/RSDecoder_table2/*@>63625*/[/*@>63622*/1]/*@>adf0*/ % /*@>36602*/7;
            /*@>adf4*/if (/*@>36605*/temp/*@>adf3*/ == /*@>36607*/0) {
                /*@>36608*/temp/*@>adf6*/ = /*@>6a0d5*/7;
            }
            /*@>3660b*/intVal/*@>adfa*/ = /*@>64e4e*/rtConstP./*@>6b532*/RSDecoder_table1/*@>63637*/[/*@>63633*/temp/*@>63631*/ - /*@>63634*/1];
            /*  end of gf_pow()  */
            /* CCode[nfull-1-j] is the current input code symbol. */
            /* Multiply it by alpha, then get the sum so far. */
            /*  start of gf_mul: gf_mul multiplies the scalars  a * b */
            /*@>4bb6b*/temp/*@>4bb6d*/ = /*@>653d0*/rtDW->/*@>6b721*/RSDecoder_CCode/*@>6363f*/[/*@>6363a*/6/*@>63639*/ - /*@>6363c*/j];
            /*@>ae08*/if ((/*@>4bb6f*/temp/*@>ae06*/ == /*@>3660e*/0)/*@>ae07*/ || (/*@>36888*/intVal/*@>ae05*/ == /*@>3660d*/0)) {
                /*@>3660f*/intVal/*@>ae0a*/ = /*@>6a0de*/0;
            } else {
                /*@>36613*/temp/*@>ae15*/ = (/*@>64e58*/rtConstP./*@>6b535*/RSDecoder_table2/*@>63647*/[temp/*@>63641*/ - /*@>63644*/1]/*@>ae13*/ + /*@>64e5e*/rtConstP./*@>6b538*/RSDecoder_table2/*@>6364f*/[/*@>6364b*/intVal/*@>63649*/ - /*@>6364c*/1])/*@>ae14*/ % /*@>36612*/7;
                /*@>ae18*/if (/*@>36615*/temp/*@>ae17*/ == /*@>36617*/0) {
                    /*@>36618*/temp/*@>ae1a*/ = /*@>6a0e1*/7;
                }
                /*@>3661b*/intVal/*@>ae1e*/ = /*@>64e66*/rtConstP./*@>6b53b*/RSDecoder_table1/*@>63657*/[/*@>63653*/temp/*@>63651*/ - /*@>63654*/1];
            }
            /* end of gf_mul() */
            /*@>3661f*/Temp3/*@>6a720*/ ^= /*@>3688a*/intVal;
        }
        /*@>ae2f*/if ((/*@>36623*/noErrorStatus/*@>371cf*/ != /*@>371cd*/0)/*@>ae2d*/ && (/*@>3c2a9*/Temp3/*@>371d3*/ != /*@>371d1*/0)) {
            /*@>36625*/noErrorStatus/*@>ae31*/ = /*@>6a0d2*/0;
        }
        /*@>36904*/RSDecoder_Syndrome/*@>2fb4b*/[/*@>36906*/RSDecoder_OmegaZActual_idx_0] = /*@>3c2ab*/Temp3;
    }
    /* Stop if all syndromes == 0 (i.e. input word is already a valid BCH/RS codeword) */
    /*@>ae35*/if (/*@>36628*/noErrorStatus/*@>ae34*/ == /*@>3662a*/1) {
        /*  start of assignOutputs():Populate output vectors with proper data */
        /* Corrected message.  If there is a decoding failure, return the input message. */
        /*@>653a0*/rtDW->/*@>6b70f*/RSDecoder/*@>31986*/[/*@>3694f*/ForEach_itr/*@>371bd*/ * /*@>36951*/3]/*@>31985*/ = /*@>3198f*/(uint32_T)/*@>653a7*/rtDW->/*@>6b712*/RSDecoder_CCode/*@>63620*/[/*@>6361d*/0];
        /*@>653b0*/rtDW->/*@>6b715*/RSDecoder/*@>3199a*/[/*@>36957*/ForEach_itr/*@>371ba*/ * /*@>36959*/3/*@>3199c*/ + /*@>3695c*/1]/*@>31999*/ = /*@>319a3*/(uint32_T)/*@>653b7*/rtDW->/*@>6b718*/RSDecoder_CCode/*@>6362a*/[/*@>63627*/1];
        /*@>653c0*/rtDW->/*@>6b71b*/RSDecoder/*@>319ae*/[/*@>36960*/ForEach_itr/*@>371b7*/ * /*@>36962*/3/*@>319b0*/ + /*@>36965*/2]/*@>319ad*/ = /*@>319b7*/(uint32_T)/*@>653c7*/rtDW->/*@>6b71e*/RSDecoder_CCode/*@>6362f*/[/*@>6362c*/2];
        /* Optional output for # of errors corrected */
        /* Parity of corrected codeword. If it is punctured, remove the punctured symbols. */
        /* If there is a decoding failure, return the input parity. */
        /*  end of assignOutputs()  */
    } else {
        int32_T RSDecoder_OmegaZActual_idx_1;
        boolean_T loopflag;
        /* Calculate the error/erasure locator polynomial PsiZ */
        /*  start of calculatePsiZ(): Calculate the error/erasure locator polynomial PsiZ */
        /* Use the diagram in Fig. 5-8 of Clark and Cain to implement the algorithm. */
        /* Box 1 -- Initializations */
        /* kCC is the location of the oldest symbol in the LFSR at the point */
        /* where the register fails. */
        /*@>3662b*/noErrorStatus/*@>ae9e*/ = /*@>6a0d8*/-1;
        /* discrep is the convolution of PsiZ and the syndrome */
        /* L is the length of the linear feedback shift register (LFSR) */
        /*@>3662e*/RSDecoder_OmegaZActual_idx_1/*@>aea2*/ = /*@>6a0db*/0;
        /* Connection polynomial = 1.  ASCENDING order.  deg(PsiZ) = 2*t. */
        /* To account for erasures, PsiZ = LambdaZ * GammaZ, where LambdaZ is the */
        /* error locator polynomial, and GammaZ is the erasure locator polynomial. */
        /* NOTE:  PsiZ is the coefficients of the connection polynomial in order of */
        /*        ASCENDING powers rather than the conventional descending order. */
        /*        This is such that after the set of iterations, the inverse of */
        /*        roots of PsiZ in descending order can be obtained directly by */
        /*        finding the roots of PsiZ in ascending order.  PsiZ is */
        /*        initialized as GammaZ in case there are erasures.
 */
        /* Initialize Psi(Z) = Gamma(Z) : ASCENDING ORDER.  length = 2t+1 */
        /* Initialize correction polynomial D(z) = z*GammaZ : ASCENDING ORDER. */
        /*   length = 2t+2  */
        /*@>653d9*/rtDW->/*@>6b724*/RSDecoder_Dz/*@>aebf*/[/*@>36633*/0U]/*@>aec0*/ = /*@>6a0e4*/0;
/*@>2c213*/        for (/*@>6a6d2*/RSDecoder_OmegaZActual_idx_0 = /*@>6a6d1*/0; /*@>6a6dc*/RSDecoder_OmegaZActual_idx_0 < /*@>6a6da*/5; /*@>6a6d8*/RSDecoder_OmegaZActual_idx_0/*@>6a721*/++) {
            /*@>364c2*/RSDecoder_PsiZ/*@>29482*/[/*@>364c0*/RSDecoder_OmegaZActual_idx_0]/*@>aeb9*/ = /*@>653e2*/rtDW->/*@>6b727*/RSDecoder_GammaZ/*@>6365d*/[/*@>6365a*/RSDecoder_OmegaZActual_idx_0];
            /*@>3655e*/RSDecoder_PsiZStar/*@>aebb*/[/*@>36630*/RSDecoder_OmegaZActual_idx_0]/*@>aebc*/ = /*@>6a0e7*/0;
            /*@>653eb*/rtDW->/*@>6b72a*/RSDecoder_Dz/*@>294bd*/[/*@>364b8*/RSDecoder_OmegaZActual_idx_0/*@>2e0f9*/ + /*@>36901*/1]/*@>aece*/ = /*@>653f2*/rtDW->/*@>6b72d*/RSDecoder_GammaZ/*@>63663*/[/*@>63660*/RSDecoder_OmegaZActual_idx_0];
        }
        /* 2*t-numErasPuncs iterations (Diamond 3) */
/*@>2c128*/        for (/*@>6a652*/j = /*@>6a651*/0; /*@>6a65c*/j < /*@>6a65a*/4; /*@>6a658*/j/*@>6a722*/++) {
            /* Box 2 -- Calculate the discrepancy, which is the sum over i of */
            /*          PsiZ(i)*Syndrome(n-i) with i going from 0 to L  */
            /*@>36635*/Temp3/*@>aedb*/ = /*@>6a0ea*/0;
/*@>6a6b9*/            for (/*@>6a6b5*/RSDecoder_OmegaZActual_idx_0/*@>6a6b4*/ = /*@>6a6b6*/0; /*@>6a6a9*/RSDecoder_OmegaZActual_idx_0/*@>6a6a7*/ < /*@>6a6ac*/RSDecoder_OmegaZActual_idx_1/*@>6a6aa*/ + /*@>6a6ad*/1; /*@>6a6af*/RSDecoder_OmegaZActual_idx_0/*@>6a723*/++) {
                /*@>4bb7b*/temp/*@>4bb7d*/ = /*@>36647*/j/*@>aee8*/ - /*@>36645*/RSDecoder_OmegaZActual_idx_0;
                /*@>aeea*/if (/*@>4bb7f*/temp/*@>aee9*/ >= /*@>36649*/0) {
                    /* Check that syndrome position is valid */
                    /* Multiply the current Psi coefficient by the */
                    /* (nCC-L)'th syndrome value.  Then update sum. */
                    /*  start of gf_mul: gf_mul multiplies the scalars  a * b */
                    /*@>4bb93*/temp/*@>4bb95*/ = /*@>63677*/RSDecoder_Syndrome/*@>63679*/[temp];
                    /*@>aef9*/if ((/*@>6368a*/RSDecoder_PsiZ/*@>6368c*/[/*@>63689*/RSDecoder_OmegaZActual_idx_0]/*@>aef7*/ == /*@>3664b*/0)/*@>aef8*/ || (/*@>4bb97*/temp/*@>aef6*/ == /*@>3664a*/0)) {
                        /*@>3664c*/intVal/*@>aefb*/ = /*@>6a0ff*/0;
                    } else {
                        /*@>36650*/temp/*@>af08*/ = (/*@>64e82*/rtConstP./*@>6b53e*/RSDecoder_table2/*@>636ad*/[temp/*@>636a7*/ - /*@>636aa*/1]/*@>af06*/ + /*@>64e88*/rtConstP./*@>6b541*/RSDecoder_table2/*@>636be*/[/*@>636b8*/RSDecoder_PsiZ/*@>636b7*/[/*@>636ba*/RSDecoder_OmegaZActual_idx_0]/*@>636b5*/ - /*@>636bb*/1])/*@>af07*/ % /*@>3664f*/7;
                        /*@>af0b*/if (/*@>36652*/temp/*@>af0a*/ == /*@>36654*/0) {
                            /*@>36655*/temp/*@>af0d*/ = /*@>6a10b*/7;
                        }
                        /*@>36658*/intVal/*@>af11*/ = /*@>64ea2*/rtConstP./*@>6b54a*/RSDecoder_table1/*@>636ee*/[/*@>636ea*/temp/*@>636e8*/ - /*@>636eb*/1];
                    }
                    /* end of gf_mul() */
                    /*@>3665c*/Temp3/*@>6a726*/ ^= /*@>36886*/intVal;
                }
            }
            /* Diamond 1 -- Continue if the discrepancy is not equal to zero */
            /*@>af1e*/if (/*@>36882*/Temp3/*@>af1d*/ != /*@>3665e*/0) {
                /* Box 3 -- Connection polynomial */
                /*          PsiZ(n) = PsiZ(n-1) - discrep(n)*Dz */
/*@>2c1da*/                for (/*@>6a685*/RSDecoder_OmegaZActual_idx_0 = /*@>6a684*/0; /*@>6a68f*/RSDecoder_OmegaZActual_idx_0 < /*@>6a68d*/5; /*@>6a68b*/RSDecoder_OmegaZActual_idx_0/*@>6a725*/++) {
                    /*@>3655a*/RSDecoder_TempVec2t1/*@>af2b*/[/*@>3665f*/RSDecoder_OmegaZActual_idx_0]/*@>af2d*/ = /*@>36884*/Temp3;
                }
                /*  start of gf_mul: gf_mul multiplies the scalars  a * b */
                /*@>32600*/if ((/*@>6369e*/RSDecoder_TempVec2t1/*@>636a0*/[/*@>6369d*/0]/*@>32602*/ == /*@>36df5*/0)/*@>32601*/ || (/*@>6545b*/rtDW->/*@>6b754*/RSDecoder_Dz/*@>636a5*/[/*@>636a2*/0]/*@>32606*/ == /*@>36df8*/0)) {
                    /*@>36e02*/intVal/*@>32625*/ = /*@>6a0fc*/0;
                } else {
                    /*@>36df9*/temp/*@>3260e*/ = (/*@>64e94*/rtConstP./*@>6b544*/RSDecoder_table2/*@>636d7*/[/*@>636d2*/RSDecoder_TempVec2t1/*@>636d1*/[/*@>636d3*/0]/*@>636cf*/ - /*@>636d4*/1]/*@>32611*/ + /*@>64e9a*/rtConstP./*@>6b547*/RSDecoder_table2/*@>636e6*/[/*@>6547d*/rtDW->/*@>6b760*/RSDecoder_Dz/*@>636e0*/[/*@>636e2*/0]/*@>636de*/ - /*@>636e3*/1])/*@>32610*/ % /*@>36e01*/7;
                    /*@>32628*/if (/*@>36e05*/temp/*@>32629*/ == /*@>36e07*/0) {
                        /*@>36e08*/temp/*@>32630*/ = /*@>6a108*/7;
                    }
                    /*@>36e0b*/intVal/*@>32635*/ = /*@>64eaa*/rtConstP./*@>6b54d*/RSDecoder_table1/*@>636f6*/[/*@>636f2*/temp/*@>636f0*/ - /*@>636f3*/1];
                }
                /* end of gf_mul() */
                /*@>36e10*/RSDecoder_PsiZStar/*@>32640*/[/*@>36e19*/0]/*@>3263f*/ = /*@>636f9*/RSDecoder_PsiZ/*@>636fb*/[/*@>636f8*/0]/*@>371b5*/ ^ /*@>36e14*/intVal;
                /*  start of gf_mul: gf_mul multiplies the scalars  a * b */
                /*@>3265b*/if ((/*@>636fe*/RSDecoder_TempVec2t1/*@>63700*/[/*@>636fd*/1]/*@>3265d*/ == /*@>36e21*/0)/*@>3265c*/ || (/*@>65486*/rtDW->/*@>6b763*/RSDecoder_Dz/*@>63705*/[/*@>63702*/1]/*@>32661*/ == /*@>36e24*/0)) {
                    /*@>36e2e*/intVal/*@>32680*/ = /*@>6a114*/0;
                } else {
                    /*@>36e25*/temp/*@>32669*/ = (/*@>64eb4*/rtConstP./*@>6b550*/RSDecoder_table2/*@>63714*/[/*@>6370f*/RSDecoder_TempVec2t1/*@>6370e*/[/*@>63710*/1]/*@>6370c*/ - /*@>63711*/1]/*@>3266c*/ + /*@>64eba*/rtConstP./*@>6b553*/RSDecoder_table2/*@>63723*/[/*@>6548f*/rtDW->/*@>6b766*/RSDecoder_Dz/*@>6371d*/[/*@>6371f*/1]/*@>6371b*/ - /*@>63720*/1])/*@>3266b*/ % /*@>36e2d*/7;
                    /*@>32683*/if (/*@>36e31*/temp/*@>32684*/ == /*@>36e33*/0) {
                        /*@>36e34*/temp/*@>3268b*/ = /*@>6a117*/7;
                    }
                    /*@>36e37*/intVal/*@>32690*/ = /*@>64ec2*/rtConstP./*@>6b556*/RSDecoder_table1/*@>63731*/[/*@>6372d*/temp/*@>6372b*/ - /*@>6372e*/1];
                }
                /* end of gf_mul() */
                /*@>36e3c*/RSDecoder_PsiZStar/*@>3269b*/[/*@>36e45*/1]/*@>3269a*/ = /*@>63734*/RSDecoder_PsiZ/*@>63736*/[/*@>63733*/1]/*@>371b4*/ ^ /*@>36e40*/intVal;
                /*  start of gf_mul: gf_mul multiplies the scalars  a * b */
                /*@>326b6*/if ((/*@>63739*/RSDecoder_TempVec2t1/*@>6373b*/[/*@>63738*/2]/*@>326b8*/ == /*@>36e4d*/0)/*@>326b7*/ || (/*@>65498*/rtDW->/*@>6b769*/RSDecoder_Dz/*@>63740*/[/*@>6373d*/2]/*@>326bc*/ == /*@>36e50*/0)) {
                    /*@>36e5a*/intVal/*@>326db*/ = /*@>6a123*/0;
                } else {
                    /*@>36e51*/temp/*@>326c4*/ = (/*@>64ecc*/rtConstP./*@>6b559*/RSDecoder_table2/*@>6374f*/[/*@>6374a*/RSDecoder_TempVec2t1/*@>63749*/[/*@>6374b*/2]/*@>63747*/ - /*@>6374c*/1]/*@>326c7*/ + /*@>64ed2*/rtConstP./*@>6b55c*/RSDecoder_table2/*@>6375e*/[/*@>654a1*/rtDW->/*@>6b76c*/RSDecoder_Dz/*@>63758*/[/*@>6375a*/2]/*@>63756*/ - /*@>6375b*/1])/*@>326c6*/ % /*@>36e59*/7;
                    /*@>326de*/if (/*@>36e5d*/temp/*@>326df*/ == /*@>36e5f*/0) {
                        /*@>36e60*/temp/*@>326e6*/ = /*@>6a129*/7;
                    }
                    /*@>36e63*/intVal/*@>326eb*/ = /*@>64eda*/rtConstP./*@>6b55f*/RSDecoder_table1/*@>63766*/[/*@>63762*/temp/*@>63760*/ - /*@>63763*/1];
                }
                /* end of gf_mul() */
                /*@>36e68*/RSDecoder_PsiZStar/*@>326f6*/[/*@>36e71*/2]/*@>326f5*/ = /*@>63769*/RSDecoder_PsiZ/*@>6376b*/[/*@>63768*/2]/*@>371b3*/ ^ /*@>36e6c*/intVal;
                /*  start of gf_mul: gf_mul multiplies the scalars  a * b */
                /*@>32711*/if ((/*@>63795*/RSDecoder_TempVec2t1/*@>63797*/[/*@>63794*/3]/*@>32713*/ == /*@>36e79*/0)/*@>32712*/ || (/*@>654b3*/rtDW->/*@>6b772*/RSDecoder_Dz/*@>6379c*/[/*@>63799*/3]/*@>32717*/ == /*@>36e7c*/0)) {
                    /*@>36e86*/intVal/*@>32736*/ = /*@>6a132*/0;
                } else {
                    /*@>36e7d*/temp/*@>3271f*/ = (/*@>64ef4*/rtConstP./*@>6b568*/RSDecoder_table2/*@>637ab*/[/*@>637a6*/RSDecoder_TempVec2t1/*@>637a5*/[/*@>637a7*/3]/*@>637a3*/ - /*@>637a8*/1]/*@>32722*/ + /*@>64efa*/rtConstP./*@>6b56b*/RSDecoder_table2/*@>637ba*/[/*@>654bc*/rtDW->/*@>6b775*/RSDecoder_Dz/*@>637b4*/[/*@>637b6*/3]/*@>637b2*/ - /*@>637b7*/1])/*@>32721*/ % /*@>36e85*/7;
                    /*@>32739*/if (/*@>36e89*/temp/*@>3273a*/ == /*@>36e8b*/0) {
                        /*@>36e8c*/temp/*@>32741*/ = /*@>6a138*/7;
                    }
                    /*@>36e8f*/intVal/*@>32746*/ = /*@>64f0c*/rtConstP./*@>6b571*/RSDecoder_table1/*@>637d0*/[/*@>637cc*/temp/*@>637ca*/ - /*@>637cd*/1];
                }
                /* end of gf_mul() */
                /*@>36e94*/RSDecoder_PsiZStar/*@>32751*/[/*@>36e9d*/3]/*@>32750*/ = /*@>637d3*/RSDecoder_PsiZ/*@>637d5*/[/*@>637d2*/3]/*@>371b2*/ ^ /*@>36e98*/intVal;
                /* Diamond 2  */
                /*@>4bba3*/Temp3/*@>4bba5*/ = /*@>36663*/j/*@>af62*/ - /*@>36661*/noErrorStatus;
                /*@>af65*/if (/*@>36665*/RSDecoder_OmegaZActual_idx_1/*@>af64*/ < /*@>4bba7*/Temp3) {
                    /* Boxes 4-7 -- Correction polynomial */
                    /*              Dz = PsiZ(n-1) / discrep(n) */
                    /*@>36671*/noErrorStatus/*@>af70*/ = /*@>3666f*/j/*@>af6f*/ - /*@>3666d*/RSDecoder_OmegaZActual_idx_1;
/*@>2c192*/                    for (/*@>6a674*/RSDecoder_OmegaZActual_idx_0 = /*@>6a673*/0; /*@>6a67e*/RSDecoder_OmegaZActual_idx_0 < /*@>6a67c*/5; /*@>6a67a*/RSDecoder_OmegaZActual_idx_0/*@>6a731*/++) {
                        intVal = /*@>63876*/RSDecoder_PsiZ/*@>63878*/[/*@>63875*/RSDecoder_OmegaZActual_idx_0];
                        temp = /*@>6387c*/RSDecoder_TempVec2t1/*@>6387e*/[/*@>6387b*/RSDecoder_OmegaZActual_idx_0];
                        /*  start of gf_div():gf_div divides the scalars x/b */
                        /*@>af7f*/if (temp/*@>af7e*/ == /*@>36673*/0) {
                            /*@>36674*/temp/*@>af82*/ = /*@>6a153*/1;
                        } else {
                            /*@>36676*/temp/*@>af8a*/ = /*@>64f68*/rtConstP./*@>6b58f*/RSDecoder_table1/*@>638a8*/[/*@>6389e*/6/*@>6389d*/ - /*@>64f6e*/rtConstP./*@>6b592*/RSDecoder_table2/*@>638a0*/[temp/*@>638a2*/ - /*@>638a5*/1]];
                        }
                        /*  start of gf_mul: gf_mul multiplies the scalars  a * b */
                        /*@>af90*/if ((/*@>36678*/temp/*@>af8e*/ == /*@>3667b*/0)/*@>af8f*/ || (intVal/*@>af8d*/ == /*@>3667a*/0)) {
                            /*@>65552*/rtDW->/*@>6b7ab*/RSDecoder_Dz/*@>202ec*/[/*@>36580*/RSDecoder_OmegaZActual_idx_0]/*@>af92*/ = /*@>6a15f*/0;
                        } else {
                            /*@>3667e*/temp/*@>af9c*/ = (/*@>64f7e*/rtConstP./*@>6b598*/RSDecoder_table2/*@>638be*/[/*@>638ba*/temp/*@>638b8*/ - /*@>638bb*/1]/*@>af9a*/ + /*@>64f84*/rtConstP./*@>6b59b*/RSDecoder_table2/*@>638c6*/[intVal/*@>638c0*/ - /*@>638c3*/1])/*@>af9b*/ % /*@>3667d*/7;
                            /*@>af9f*/if (/*@>36680*/temp/*@>af9e*/ == /*@>36682*/0) {
                                /*@>36683*/temp/*@>afa1*/ = /*@>6a165*/7;
                            }
                            /*@>6555b*/rtDW->/*@>6b7ae*/RSDecoder_Dz/*@>299e8*/[/*@>36474*/RSDecoder_OmegaZActual_idx_0]/*@>afa5*/ = /*@>64fa4*/rtConstP./*@>6b5a7*/RSDecoder_table1/*@>638f2*/[/*@>638ee*/temp/*@>638ec*/ - /*@>638ef*/1];
                        }
                        /* end of gf_mul() */
                        /*  end of gf_div() */
                    }
                    /*@>36688*/RSDecoder_OmegaZActual_idx_1/*@>afaf*/ = Temp3;
                }
                /* Box 8 -- Reset the error/erasure locator polynomial */
/*@>2c15a*/                for (/*@>6a663*/RSDecoder_OmegaZActual_idx_0 = /*@>6a662*/0; /*@>6a66d*/RSDecoder_OmegaZActual_idx_0 < /*@>6a66b*/5; /*@>6a669*/RSDecoder_OmegaZActual_idx_0/*@>6a72f*/++) {
                    /*@>36495*/RSDecoder_PsiZ/*@>297a9*/[/*@>36493*/RSDecoder_OmegaZActual_idx_0]/*@>afbd*/ = /*@>63870*/RSDecoder_PsiZStar/*@>63872*/[/*@>6386f*/RSDecoder_OmegaZActual_idx_0];
                }
            }
            /* Box 9 -- Correction polynomial */
            /*           Dz = z * Dz */
            /*@>653fb*/rtDW->/*@>6b730*/RSDecoder_Dz/*@>325a6*/[/*@>36fb6*/4]/*@>325a5*/ = /*@>65402*/rtDW->/*@>6b733*/RSDecoder_Dz/*@>6366e*/[/*@>6366b*/3];
            /*@>6540b*/rtDW->/*@>6b736*/RSDecoder_Dz/*@>325b6*/[/*@>36fb7*/3]/*@>325b5*/ = /*@>65412*/rtDW->/*@>6b739*/RSDecoder_Dz/*@>63673*/[/*@>63670*/2];
            /*@>6542b*/rtDW->/*@>6b742*/RSDecoder_Dz/*@>325c6*/[/*@>36fb8*/2]/*@>325c5*/ = /*@>65432*/rtDW->/*@>6b745*/RSDecoder_Dz/*@>63686*/[/*@>63683*/1];
            /*@>6544b*/rtDW->/*@>6b74e*/RSDecoder_Dz/*@>325d6*/[/*@>36fb9*/1]/*@>325d5*/ = /*@>65452*/rtDW->/*@>6b751*/RSDecoder_Dz/*@>6369b*/[/*@>63698*/0];
            /*@>65474*/rtDW->/*@>6b75d*/RSDecoder_Dz/*@>afce*/[/*@>3668a*/0U]/*@>afcf*/ = /*@>6a105*/0;
        }
        /*  end of calculatePsiZ  */
        /* FIND ERROR LOCATIONS */
        /* At this point, error/erasure locator polynomial has been found,  which is PsiZ */
        /* Find degree of Psi(Z) */
        /*@>3668c*/Temp3/*@>afd4*/ = /*@>6a0f0*/0;
        /*@>3668f*/loopflag/*@>afd5*/ = /*@>36691*/true;
/*@>2c050*/        for (/*@>6a643*/RSDecoder_OmegaZActual_idx_0 = /*@>6a642*/4; /*@>6a64d*/RSDecoder_OmegaZActual_idx_0 >= /*@>6a64b*/0; /*@>6a649*/RSDecoder_OmegaZActual_idx_0/*@>6a724*/--) {
            /*@>afe3*/if ((/*@>63667*/RSDecoder_PsiZ/*@>63669*/[/*@>63666*/RSDecoder_OmegaZActual_idx_0]/*@>afe1*/ > /*@>36694*/0)/*@>afe2*/ && /*@>36692*/loopflag) {
                /*@>36697*/Temp3/*@>afe6*/ = /*@>36695*/RSDecoder_OmegaZActual_idx_0;
                /*@>36699*/loopflag/*@>afe7*/ = /*@>3669b*/false;
            }
        }
        /* Degree of Psi(Z) must be equal to L and larger than 0 */
        /* (i.e. cannot be a constant) */
        /*@>aff0*/if ((/*@>366a1*/Temp3/*@>afee*/ != /*@>3669f*/RSDecoder_OmegaZActual_idx_1)/*@>afef*/ || (/*@>3669c*/Temp3/*@>afeb*/ < /*@>3669e*/1)) {
            /*  start of assignOutputs():Populate output vectors with proper data */
            /* Corrected message.  If there is a decoding failure, return the input message. */
            /*@>6541b*/rtDW->/*@>6b73c*/RSDecoder/*@>319ca*/[/*@>36969*/ForEach_itr/*@>371ac*/ * /*@>3696b*/3]/*@>319c9*/ = /*@>3995d*/(uint32_T)/*@>65422*/rtDW->/*@>6b73f*/BittoIntegerConverter/*@>63681*/[/*@>6367d*/ForEach_itr/*@>6367b*/ * /*@>6367e*/7];
            /*@>6543b*/rtDW->/*@>6b748*/RSDecoder/*@>319e2*/[/*@>36973*/ForEach_itr/*@>371a6*/ * /*@>36975*/3/*@>319e4*/ + /*@>3697b*/1]/*@>319e1*/ = /*@>3995f*/(uint32_T)/*@>65442*/rtDW->/*@>6b74b*/BittoIntegerConverter/*@>63696*/[/*@>63691*/ForEach_itr/*@>6368f*/ * /*@>63692*/7/*@>6368e*/ + /*@>63693*/1];
            /*@>65464*/rtDW->/*@>6b757*/RSDecoder/*@>319fa*/[/*@>3697f*/ForEach_itr/*@>371a0*/ * /*@>36981*/3/*@>319fc*/ + /*@>36987*/2]/*@>319f9*/ = /*@>39961*/(uint32_T)/*@>6546b*/rtDW->/*@>6b75a*/BittoIntegerConverter/*@>636c8*/[/*@>636c3*/ForEach_itr/*@>636c1*/ * /*@>636c4*/7/*@>636c0*/ + /*@>636c5*/2];
            /* Optional output for # of errors corrected */
            /* Parity of corrected codeword. If it is punctured, remove the punctured symbols. */
            /* If there is a decoding failure, return the input parity. */
            /*  end of assignOutputs()  */
        } else {
            int32_T RSDecoder_OmegaZActual_idx_2;
            int32_T RSDecoder_OmegaZActual_idx_3;
            /* Initialize contents at pointer Errloc */
            /*@>36dcb*/RSDecoder_Errloc/*@>3257a*/[/*@>36dce*/0]/*@>32579*/ = /*@>6a0f3*/0;
            /*@>36dcf*/RSDecoder_Errloc/*@>32583*/[/*@>36dd2*/1]/*@>32582*/ = /*@>6a0f6*/0;
            /*@>36dd3*/RSDecoder_Errloc/*@>3258c*/[/*@>36dd6*/2]/*@>3258b*/ = /*@>6a0f9*/0;
            /*@>36dd7*/RSDecoder_Errloc/*@>32595*/[/*@>36dda*/3]/*@>32594*/ = /*@>6a102*/0;
            /*  start of gf_roots()  */
            /* This function takes in vector X, computes the roots and stores them in roots */
            /* it returns the number of roots */
            /*@>366a3*/RSDecoder_OmegaZActual_idx_1/*@>b064*/ = /*@>6a10e*/5;
            /*@>366a6*/noErrorStatus/*@>b065*/ = /*@>6a111*/0;
/*@>2bffe*/            for (/*@>6a632*/RSDecoder_OmegaZActual_idx_0 = /*@>6a631*/0; /*@>6a63c*/RSDecoder_OmegaZActual_idx_0 < /*@>6a63a*/5; /*@>6a638*/RSDecoder_OmegaZActual_idx_0/*@>6a727*/++) {
                /*@>3648d*/RSDecoder_PsiZStar/*@>297de*/[/*@>3648b*/RSDecoder_OmegaZActual_idx_0]/*@>b073*/ = /*@>63727*/RSDecoder_PsiZ/*@>63729*/[/*@>63726*/RSDecoder_OmegaZActual_idx_0];
            }
            /*@>366a9*/RSDecoder_OmegaZActual_idx_0/*@>b074*/ = /*@>6a11a*/0;
            while/*@<b078*/ (/*@>366ac*/RSDecoder_OmegaZActual_idx_0/*@>b076*/ < /*@>366ae*/8) {
                /*@>366af*/RSDecoder_OmegaZActual_idx_2/*@>b079*/ = /*@>6a120*/0;
/*@>6a61b*/                for (/*@>6a617*/j/*@>6a616*/ = /*@>6a618*/0; /*@>6a60d*/j/*@>6a60b*/ < /*@>6a60f*/RSDecoder_OmegaZActual_idx_1; /*@>6a611*/j/*@>6a729*/++) {
                    /*@>654aa*/rtDW->/*@>6b76f*/RSDecoder_d/*@>b084*/[/*@>366be*/j]/*@>b086*/ = /*@>366c0*/RSDecoder_OmegaZActual_idx_0;
                }
/*@>6a5f5*/                for (/*@>6a5f1*/j/*@>6a5f0*/ = /*@>6a5f2*/0; /*@>6a5e7*/j/*@>6a5e5*/ < /*@>6a5e9*/RSDecoder_OmegaZActual_idx_1; /*@>6a5eb*/j/*@>6a72a*/++) {
                    /*  start of gf_pow():gf_pow raises x^yd  */
                    /*@>366d2*/intVal/*@>b095*/ = /*@>654c5*/rtDW->/*@>6b778*/RSDecoder_d/*@>637c0*/[/*@>637bd*/j];
                    /*@>b0ce*/if (/*@>366e9*/intVal/*@>b0cd*/ == /*@>366eb*/0) {
                        /*@>654de*/rtDW->/*@>6b781*/RSDecoder_d/*@>202fc*/[/*@>3657c*/j]/*@>b0d4*/ = (/*@>3c2bf*/j/*@>b0d1*/ == /*@>366ee*/0);
                    } else {
                        /*@>366f2*/temp/*@>b0dc*/ = /*@>64f16*/rtConstP./*@>6b574*/RSDecoder_table2/*@>637e5*/[/*@>637e1*/intVal/*@>637df*/ - /*@>637e2*/1]/*@>37198*/ * /*@>3c2bd*/j/*@>b0db*/ % /*@>366f1*/7;
                        /*@>b0df*/if (/*@>366f4*/temp/*@>b0de*/ == /*@>366f6*/0) {
                            /*@>366f7*/temp/*@>b0e1*/ = /*@>6a147*/7;
                        }
                        /*@>65519*/rtDW->/*@>6b796*/RSDecoder_d/*@>29da3*/[/*@>36435*/j]/*@>b0e5*/ = /*@>64f3c*/rtConstP./*@>6b580*/RSDecoder_table1/*@>63837*/[/*@>63833*/temp/*@>63831*/ - /*@>63834*/1];
                    }
                    /*  end of gf_pow()  */
                }
/*@>6a5c3*/                for (/*@>6a5bf*/j/*@>6a5be*/ = /*@>6a5c0*/0; /*@>6a5b5*/j/*@>6a5b3*/ < /*@>6a5b7*/RSDecoder_OmegaZActual_idx_1; /*@>6a5b9*/j/*@>6a72b*/++) {
                    /*  start of gf_mul: gf_mul multiplies the scalars  a * b */
                    /*@>b0fc*/if ((/*@>654f7*/rtDW->/*@>6b78a*/RSDecoder_d/*@>637f5*/[/*@>637f2*/j]/*@>b0fa*/ == /*@>36707*/0)/*@>b0fb*/ || (/*@>637f9*/RSDecoder_PsiZStar/*@>637fb*/[/*@>637f8*/j]/*@>b0f9*/ == /*@>36706*/0)) {
                        /*@>36708*/intVal/*@>b0fe*/ = /*@>6a144*/0;
                    } else {
                        /*@>3670c*/temp/*@>b109*/ = (/*@>64f2e*/rtConstP./*@>6b57a*/RSDecoder_table2/*@>6381e*/[/*@>65510*/rtDW->/*@>6b793*/RSDecoder_d/*@>63817*/[/*@>6381a*/j]/*@>63815*/ - /*@>6381b*/1]/*@>b107*/ + /*@>64f34*/rtConstP./*@>6b57d*/RSDecoder_table2/*@>6382f*/[/*@>63829*/RSDecoder_PsiZStar/*@>63828*/[/*@>6382b*/j]/*@>63826*/ - /*@>6382c*/1])/*@>b108*/ % /*@>3670b*/7;
                        /*@>b10c*/if (/*@>3670e*/temp/*@>b10b*/ == /*@>36710*/0) {
                            /*@>36711*/temp/*@>b10e*/ = /*@>6a14a*/7;
                        }
                        /*@>36714*/intVal/*@>b112*/ = /*@>64f4c*/rtConstP./*@>6b586*/RSDecoder_table1/*@>63844*/[/*@>63840*/temp/*@>6383e*/ - /*@>63841*/1];
                    }
                    /* end of gf_mul() */
                    /*@>36718*/RSDecoder_OmegaZActual_idx_2/*@>6a72e*/ ^= /*@>3687c*/intVal;
                }
                /*@>b11c*/if (/*@>3671a*/RSDecoder_OmegaZActual_idx_2/*@>b11b*/ == /*@>3671c*/0) {
                    /*@>36550*/RSDecoder_Errloc/*@>b11f*/[/*@>3671d*/noErrorStatus]/*@>b121*/ = /*@>3671f*/RSDecoder_OmegaZActual_idx_0;
                    /*@>36724*/noErrorStatus/*@>6a72d*/++;
                    /*  start of gf_div():gf_div divides the scalars x/b */
                    /*  start of gf_mul: gf_mul multiplies the scalars  a * b */
                    /*@>3672b*/intVal/*@>b151*/ = /*@>64f44*/rtConstP./*@>6b583*/RSDecoder_table1/*@>6383c*/[/*@>63839*/6];
                    /* end of gf_mul() */
                    /*  end of gf_div() */
                    /*  start of gf_div():gf_div divides the scalars x/b */
                    /*@>b15c*/if (/*@>3686a*/RSDecoder_OmegaZActual_idx_0/*@>b15b*/ == /*@>3672d*/0) {
                        /*@>3672e*/temp/*@>b15f*/ = /*@>6a150*/1;
                    } else {
                        /*@>36730*/temp/*@>b166*/ = /*@>64f5a*/rtConstP./*@>6b589*/RSDecoder_table1/*@>63893*/[/*@>63889*/6/*@>63888*/ - /*@>64f60*/rtConstP./*@>6b58c*/RSDecoder_table2/*@>6388b*/[/*@>6388f*/RSDecoder_OmegaZActual_idx_0/*@>6388d*/ - /*@>63890*/1]];
                    }
                    /*  start of gf_mul: gf_mul multiplies the scalars  a * b */
                    /*@>b16c*/if (/*@>36732*/temp/*@>b16a*/ == /*@>36734*/0) {
                        /*@>36735*/RSDecoder_OmegaZActual_idx_2/*@>b16e*/ = /*@>6a159*/0;
                    } else {
                        /*@>36739*/temp/*@>b177*/ = /*@>64f76*/rtConstP./*@>6b595*/RSDecoder_table2/*@>638b0*/[/*@>638ac*/temp/*@>638aa*/ - /*@>638ad*/1]/*@>b176*/ % /*@>36738*/7;
                        /*@>b17a*/if (/*@>3673b*/temp/*@>b179*/ == /*@>3673d*/0) {
                            /*@>3673e*/temp/*@>b17c*/ = /*@>6a15c*/7;
                        }
                        /*@>36741*/RSDecoder_OmegaZActual_idx_2/*@>b180*/ = /*@>64f8e*/rtConstP./*@>6b59e*/RSDecoder_table1/*@>638d3*/[/*@>638cf*/temp/*@>638cd*/ - /*@>638d0*/1];
                    }
                    /* end of gf_mul() */
                    /*  end of gf_div() */
                    /*  start of gf_deconv --- de-convolves A from B  */
                    /*@>36743*/RSDecoder_OmegaZActual_idx_3/*@>b18b*/ = /*@>6a16b*/0;
/*@>6a591*/                    for (/*@>6a58d*/Temp4/*@>6a58c*/ = /*@>6a58e*/0; /*@>6a583*/Temp4/*@>6a581*/ < /*@>6a585*/RSDecoder_OmegaZActual_idx_1; /*@>6a587*/Temp4/*@>6a736*/++) {
                        /*@>65564*/rtDW->/*@>6b7b1*/RSDecoder_tmpQuotient/*@>b197*/[/*@>36752*/Temp4]/*@>b198*/ = /*@>6a177*/0;
                    }
                    /*@>46f83*/if (/*@>4cc66*/0/*@>46f7c*/ < /*@>46f81*/RSDecoder_OmegaZActual_idx_1/*@>46f7f*/ - /*@>46f82*/1) {
                        /*@>b1a7*/if (/*@>64fc4*/rtConstP./*@>6b5b3*/RSDecoder_table1/*@>6393d*/[/*@>6393a*/6]/*@>b1a6*/ == /*@>36762*/0) {
                            /*@>36763*/inv/*@>b1aa*/ = /*@>6a180*/1;
                        } else {
                            /*@>36765*/inv/*@>b1b1*/ = /*@>64fd6*/rtConstP./*@>6b5b9*/RSDecoder_table1/*@>6396d*/[/*@>63961*/6/*@>63960*/ - /*@>64fdc*/rtConstP./*@>6b5bc*/RSDecoder_table2/*@>63963*/[/*@>64fe2*/rtConstP./*@>6b5bf*/RSDecoder_table1/*@>63967*/[/*@>63969*/6]/*@>63965*/ - /*@>6396a*/1]];
                        }
                    }
/*@>6a543*/                    for (/*@>6a53f*/Temp4/*@>6a53e*/ = /*@>6a540*/0; /*@>6a533*/Temp4/*@>6a531*/ < /*@>6a536*/RSDecoder_OmegaZActual_idx_1/*@>6a534*/ - /*@>6a537*/1; /*@>6a539*/Temp4/*@>6a738*/++) {
                        int32_T z;
                        /*  start of gf_div():gf_div divides the scalars x/b */
                        /*  start of gf_mul: gf_mul multiplies the scalars  a * b */
                        /*@>b1b7*/if ((/*@>36767*/inv/*@>b1b5*/ == /*@>3676a*/0)/*@>b1b6*/ || (/*@>639b9*/RSDecoder_PsiZStar/*@>639bb*/[/*@>639b8*/RSDecoder_OmegaZActual_idx_3]/*@>b1b4*/ == /*@>36769*/0)) {
                            /*@>3676b*/z/*@>b1b9*/ = /*@>6a198*/0;
                        } else {
                            /*@>3676f*/temp/*@>b1c3*/ = (/*@>65016*/rtConstP./*@>6b5d1*/RSDecoder_table2/*@>639cb*/[/*@>639c7*/inv/*@>639c5*/ - /*@>639c8*/1]/*@>b1c1*/ + /*@>6501c*/rtConstP./*@>6b5d4*/RSDecoder_table2/*@>639dc*/[/*@>639d6*/RSDecoder_PsiZStar/*@>639d5*/[/*@>639d8*/RSDecoder_OmegaZActual_idx_3]/*@>639d3*/ - /*@>639d9*/1])/*@>b1c2*/ % /*@>3676e*/7;
                            /*@>b1c6*/if (/*@>36771*/temp/*@>b1c5*/ == /*@>36773*/0) {
                                /*@>36774*/temp/*@>b1c8*/ = /*@>6a19e*/7;
                            }
                            /*@>36777*/z/*@>b1cc*/ = /*@>6502c*/rtConstP./*@>6b5da*/RSDecoder_table1/*@>639f4*/[/*@>639f0*/temp/*@>639ee*/ - /*@>639f1*/1];
                        }
                        /* end of gf_mul() */
                        /*  end of gf_div() */
/*@>6a56b*/                        for (/*@>6a567*/j/*@>6a566*/ = /*@>6a568*/1; /*@>6a55d*/j/*@>6a55b*/ < /*@>6a55f*/RSDecoder_OmegaZActual_idx_1; /*@>6a561*/j/*@>6a740*/++) {
                            /*@>655c3*/rtDW->/*@>6b7d2*/RSDecoder_tmpQuotient/*@>2a244*/[/*@>36401*/j/*@>2a249*/ - /*@>36400*/1]/*@>b1e1*/ = /*@>655ca*/rtDW->/*@>6b7d5*/RSDecoder_tmpQuotient/*@>63a0a*/[/*@>63a07*/j];
                        }
                        /*@>655ba*/rtDW->/*@>6b7cf*/RSDecoder_tmpQuotient/*@>b1e4*/[/*@>36785*/RSDecoder_OmegaZActual_idx_1/*@>b1e3*/ - /*@>36787*/1]/*@>b1e6*/ = /*@>3686e*/z;
                        /*  start of gf_mul: gf_mul multiplies the scalars  a * b */
                        /*@>b1f0*/if ((/*@>36870*/z/*@>b1ee*/ == /*@>36789*/0)/*@>b1ef*/ || (/*@>36872*/intVal/*@>b1ed*/ == /*@>36788*/0)) {
                            /*@>3678a*/temp/*@>b1f2*/ = /*@>6a1aa*/0;
                        } else {
                            /*@>3678e*/temp/*@>b1fb*/ = (/*@>65046*/rtConstP./*@>6b5e0*/RSDecoder_table2/*@>63a1c*/[/*@>63a18*/z/*@>63a16*/ - /*@>63a19*/1]/*@>b1f9*/ + /*@>6504c*/rtConstP./*@>6b5e3*/RSDecoder_table2/*@>63a24*/[/*@>63a20*/intVal/*@>63a1e*/ - /*@>63a21*/1])/*@>b1fa*/ % /*@>3678d*/7;
                            /*@>b1fe*/if (/*@>36790*/temp/*@>b1fd*/ == /*@>36792*/0) {
                                /*@>36793*/temp/*@>b200*/ = /*@>6a1ad*/7;
                            }
                            /*@>36796*/temp/*@>b204*/ = /*@>65054*/rtConstP./*@>6b5e6*/RSDecoder_table1/*@>63a2c*/[/*@>63a28*/temp/*@>63a26*/ - /*@>63a29*/1];
                        }
                        /* end of gf_mul() */
                        /*@>363f1*/RSDecoder_PsiZStar/*@>2a440*/[/*@>363ef*/RSDecoder_OmegaZActual_idx_3]/*@>6a741*/ ^= /*@>36874*/temp;
                        /*  start of gf_mul: gf_mul multiplies the scalars  a * b */
                        /*@>b214*/if ((/*@>36876*/z/*@>b212*/ == /*@>36799*/0)/*@>b213*/ || (/*@>36878*/RSDecoder_OmegaZActual_idx_2/*@>b211*/ == /*@>36798*/0)) {
                            /*@>3679a*/z/*@>b216*/ = /*@>6a1b9*/0;
                        } else {
                            /*@>3679e*/temp/*@>b21f*/ = (/*@>65072*/rtConstP./*@>6b5f2*/RSDecoder_table2/*@>63a55*/[/*@>63a51*/z/*@>63a4f*/ - /*@>63a52*/1]/*@>b21d*/ + /*@>65078*/rtConstP./*@>6b5f5*/RSDecoder_table2/*@>63a5d*/[/*@>63a59*/RSDecoder_OmegaZActual_idx_2/*@>63a57*/ - /*@>63a5a*/1])/*@>b21e*/ % /*@>3679d*/7;
                            /*@>b222*/if (/*@>367a0*/temp/*@>b221*/ == /*@>367a2*/0) {
                                /*@>367a3*/temp/*@>b224*/ = /*@>6a1bc*/7;
                            }
                            /*@>367a6*/z/*@>b228*/ = /*@>6508a*/rtConstP./*@>6b5fb*/RSDecoder_table1/*@>63a72*/[/*@>63a6e*/temp/*@>63a6c*/ - /*@>63a6f*/1];
                        }
                        /* end of gf_mul() */
                        /*@>363d5*/RSDecoder_PsiZStar/*@>2a75f*/[/*@>363d3*/RSDecoder_OmegaZActual_idx_3/*@>2a764*/ + /*@>363d2*/1]/*@>6a742*/ ^= /*@>3687a*/z;
                        /*@>367ab*/RSDecoder_OmegaZActual_idx_3/*@>6a743*/++;
                    }
/*@>6a4e7*/                    for (/*@>6a4e3*/Temp4/*@>6a4e2*/ = /*@>6a4e4*/0; /*@>6a4d7*/Temp4/*@>6a4d5*/ < /*@>6a4da*/RSDecoder_OmegaZActual_idx_1/*@>6a4d8*/ - /*@>6a4db*/1; /*@>6a4dd*/Temp4/*@>6a73a*/++) {
                        /*@>3641a*/RSDecoder_PsiZStar/*@>2a162*/[/*@>36418*/Temp4]/*@>b247*/ = /*@>65591*/rtDW->/*@>6b7c0*/RSDecoder_tmpQuotient/*@>639c3*/[/*@>639bf*/Temp4/*@>639bd*/ + /*@>639c0*/1];
                    }
                    /*  end of gf_deconv  */
                    /*@>367bd*/RSDecoder_OmegaZActual_idx_1/*@>6a73c*/--;
                    /*@>367c2*/RSDecoder_OmegaZActual_idx_0/*@>6a73d*/--;
                }
                /*@>367c7*/RSDecoder_OmegaZActual_idx_0/*@>6a72c*/++;
            }
/*@>6a489*/            for (/*@>6a485*/j/*@>6a484*/ = /*@>6a486*/0; /*@>6a47b*/j/*@>6a479*/ < /*@>6a47d*/noErrorStatus; /*@>6a47f*/j/*@>6a728*/++) {
                /*  start of gf_div():gf_div divides the scalars x/b */
                /*@>b261*/if (/*@>6376f*/RSDecoder_Errloc/*@>63771*/[/*@>6376e*/j]/*@>b260*/ == /*@>367d5*/0) {
                    /*@>367d6*/temp/*@>b264*/ = /*@>6a12f*/1;
                } else {
                    /*@>367d8*/temp/*@>b26c*/ = /*@>64ee4*/rtConstP./*@>6b562*/RSDecoder_table1/*@>63792*/[/*@>63785*/6/*@>63784*/ - /*@>64eea*/rtConstP./*@>6b565*/RSDecoder_table2/*@>63787*/[/*@>6378c*/RSDecoder_Errloc/*@>6378b*/[/*@>6378e*/j]/*@>63789*/ - /*@>6378f*/1]];
                }
                /*  start of gf_mul: gf_mul multiplies the scalars  a * b */
                /*@>b272*/if (/*@>367da*/temp/*@>b270*/ == /*@>367dc*/0) {
                    /*@>36552*/RSDecoder_Errloc/*@>202f4*/[/*@>3657e*/j]/*@>b274*/ = /*@>6a13b*/0;
                } else {
                    /*@>367df*/temp/*@>b27d*/ = /*@>64f04*/rtConstP./*@>6b56e*/RSDecoder_table2/*@>637c8*/[/*@>637c4*/temp/*@>637c2*/ - /*@>637c5*/1]/*@>b27c*/ % /*@>367de*/7;
                    /*@>b280*/if (/*@>367e1*/temp/*@>b27f*/ == /*@>367e3*/0) {
                        /*@>367e4*/temp/*@>b282*/ = /*@>6a141*/7;
                    }
                    /*@>36460*/RSDecoder_Errloc/*@>29ac2*/[/*@>3645e*/j]/*@>b286*/ = /*@>64f26*/rtConstP./*@>6b577*/RSDecoder_table1/*@>6380d*/[/*@>63809*/temp/*@>63807*/ - /*@>6380a*/1];
                }
                /* end of gf_mul() */
                /*  end of gf_div() */
            }
            /*  end of gf_roots() */
            /* Decoding failure if one of the following conditions is met: */
            /* (1) Psi(Z) has no roots in this field */
            /* (2) Number of roots not equal to degree of PsiZ */
            /*@>b29a*/if (/*@>36860*/noErrorStatus/*@>b299*/ != /*@>367e7*/Temp3) {
                /*  start of assignOutputs():Populate output vectors with proper data */
                /* Corrected message.  If there is a decoding failure, return the input message. */
                /*@>654ce*/rtDW->/*@>6b77b*/RSDecoder/*@>31a1a*/[/*@>3698b*/ForEach_itr/*@>37192*/ * /*@>3698d*/3]/*@>31a19*/ = /*@>398c8*/(uint32_T)/*@>654d5*/rtDW->/*@>6b77e*/BittoIntegerConverter/*@>637dd*/[/*@>637d9*/ForEach_itr/*@>637d7*/ * /*@>637da*/7];
                /*@>654e7*/rtDW->/*@>6b784*/RSDecoder/*@>31a32*/[/*@>36995*/ForEach_itr/*@>3718c*/ * /*@>36997*/3/*@>31a34*/ + /*@>3699d*/1]/*@>31a31*/ = /*@>398ca*/(uint32_T)/*@>654ee*/rtDW->/*@>6b787*/BittoIntegerConverter/*@>637ef*/[/*@>637ea*/ForEach_itr/*@>637e8*/ * /*@>637eb*/7/*@>637e7*/ + /*@>637ec*/1];
                /*@>65500*/rtDW->/*@>6b78d*/RSDecoder/*@>31a4a*/[/*@>369a1*/ForEach_itr/*@>37186*/ * /*@>369a3*/3/*@>31a4c*/ + /*@>369a9*/2]/*@>31a49*/ = /*@>398cc*/(uint32_T)/*@>65507*/rtDW->/*@>6b790*/BittoIntegerConverter/*@>63805*/[/*@>63800*/ForEach_itr/*@>637fe*/ * /*@>63801*/7/*@>637fd*/ + /*@>63802*/2];
                /* Optional output for # of errors corrected */
                /* Parity of corrected codeword. If it is punctured, remove the punctured symbols. */
                /* If there is a decoding failure, return the input parity. */
                /*  end of assignOutputs()  */
            } else {
                /* Test if the error locations are unique
 */
                /*@>367e9*/loopflag/*@>b2fd*/ = /*@>367eb*/true;
                /*@>367f6*/RSDecoder_OmegaZActual_idx_0/*@>b307*/ = /*@>6a13e*/0;
                while/*@<b309*/ ((/*@>367f4*/RSDecoder_OmegaZActual_idx_0/*@>b305*/ < /*@>36862*/noErrorStatus/*@>b303*/ - /*@>367f3*/1)/*@>b306*/ && /*@>367f1*/loopflag) {
                    /*@>36805*/j/*@>b314*/ = /*@>36802*/RSDecoder_OmegaZActual_idx_0/*@>b313*/ + /*@>36804*/1;
                    while/*@<b316*/ ((/*@>36800*/j/*@>b310*/ < /*@>36868*/noErrorStatus)/*@>b311*/ && /*@>367fe*/loopflag) {
                        /*@>36807*/loopflag/*@>b31e*/ = (/*@>63850*/RSDecoder_Errloc/*@>63852*/[/*@>6384f*/RSDecoder_OmegaZActual_idx_0]/*@>17764*/ != /*@>63856*/RSDecoder_Errloc/*@>63858*/[/*@>63855*/j]);
                        /*@>367fc*/j/*@>6a732*/++;
                    }
                    /*@>367ef*/RSDecoder_OmegaZActual_idx_0/*@>6a730*/++;
                }
                /*@>b321*/if (!/*@>36809*/loopflag) {
                    /*  start of assignOutputs():Populate output vectors with proper data */
                    /* Corrected message.  If there is a decoding failure, return the input message. */
                    /*@>65522*/rtDW->/*@>6b799*/RSDecoder/*@>31a6a*/[/*@>369ad*/ForEach_itr/*@>37180*/ * /*@>369af*/3]/*@>31a69*/ = /*@>398a7*/(uint32_T)/*@>65529*/rtDW->/*@>6b79c*/BittoIntegerConverter/*@>6384c*/[/*@>63848*/ForEach_itr/*@>63846*/ * /*@>63849*/7];
                    /*@>65532*/rtDW->/*@>6b79f*/RSDecoder/*@>31a82*/[/*@>369b7*/ForEach_itr/*@>3717a*/ * /*@>369b9*/3/*@>31a84*/ + /*@>369bf*/1]/*@>31a81*/ = /*@>398a9*/(uint32_T)/*@>65539*/rtDW->/*@>6b7a2*/BittoIntegerConverter/*@>63862*/[/*@>6385d*/ForEach_itr/*@>6385b*/ * /*@>6385e*/7/*@>6385a*/ + /*@>6385f*/1];
                    /*@>65542*/rtDW->/*@>6b7a5*/RSDecoder/*@>31a9a*/[/*@>369c3*/ForEach_itr/*@>37174*/ * /*@>369c5*/3/*@>31a9c*/ + /*@>369cb*/2]/*@>31a99*/ = /*@>398ab*/(uint32_T)/*@>65549*/rtDW->/*@>6b7a8*/BittoIntegerConverter/*@>6386c*/[/*@>63867*/ForEach_itr/*@>63865*/ * /*@>63868*/7/*@>63864*/ + /*@>63869*/2];
                    /* Optional output for # of errors corrected */
                    /* Parity of corrected codeword. If it is punctured, remove the punctured symbols. */
                    /* If there is a decoding failure, return the input parity. */
                    /*  end of assignOutputs()  */
                } else {
                    /* PART II - FIND ERROR MAGNITUDES AT EACH OF THE ERROR/ERASURE LOCATIONS, */
                    /* AND CORRECT THEM */
                    /*  start of correctErrors():Calculate the error magnitude in the current error position,  */
                    /*                           and correct the errors. */
/*@>2bf53*/                    for (/*@>6a459*/RSDecoder_OmegaZActual_idx_0 = /*@>6a458*/0; /*@>6a463*/RSDecoder_OmegaZActual_idx_0 < /*@>6a461*/10; /*@>6a45f*/RSDecoder_OmegaZActual_idx_0/*@>6a733*/++) {
                        /*@>3654c*/RSDecoder_OmegaZ/*@>b395*/[/*@>3680b*/RSDecoder_OmegaZActual_idx_0]/*@>b396*/ = /*@>6a14d*/0;
                    }
                    /*  start of gf_conv():gf_conv convolves A with B and stores the result in retValue  */
/*@>2bf3a*/                    for (/*@>6a448*/RSDecoder_OmegaZActual_idx_0 = /*@>6a447*/0; /*@>6a452*/RSDecoder_OmegaZActual_idx_0 < /*@>6a450*/8; /*@>6a44e*/RSDecoder_OmegaZActual_idx_0/*@>6a734*/++) {
                        /*@>3654a*/RSDecoder_OmegaZ/*@>b3a5*/[/*@>3680e*/RSDecoder_OmegaZActual_idx_0]/*@>b3a6*/ = /*@>6a156*/0;
                    }
/*@>2bef4*/                    for (/*@>6a437*/RSDecoder_OmegaZActual_idx_0 = /*@>6a436*/0; /*@>6a441*/RSDecoder_OmegaZActual_idx_0 < /*@>6a43f*/5; /*@>6a43d*/RSDecoder_OmegaZActual_idx_0/*@>6a735*/++) {
                        intVal = /*@>638b4*/RSDecoder_PsiZ/*@>638b6*/[/*@>638b3*/RSDecoder_OmegaZActual_idx_0];
                        /*@>32404*/if ((intVal/*@>32406*/ == /*@>36d09*/0)/*@>32405*/ || (/*@>638c9*/RSDecoder_Syndrome/*@>638cb*/[/*@>638c8*/0]/*@>3240a*/ == /*@>36d0c*/0)) {
                            /*@>36d16*/temp/*@>32423*/ = /*@>6a162*/0;
                        } else {
                            /*@>36d0d*/temp/*@>3240f*/ = (/*@>64f96*/rtConstP./*@>6b5a1*/RSDecoder_table2/*@>638db*/[intVal/*@>638d5*/ - /*@>638d8*/1]/*@>32412*/ + /*@>64f9c*/rtConstP./*@>6b5a4*/RSDecoder_table2/*@>638ea*/[/*@>638e5*/RSDecoder_Syndrome/*@>638e4*/[/*@>638e6*/0]/*@>638e2*/ - /*@>638e7*/1])/*@>32411*/ % /*@>36d15*/7;
                            /*@>32426*/if (/*@>36d19*/temp/*@>32427*/ == /*@>36d1b*/0) {
                                /*@>36d1c*/temp/*@>3242e*/ = /*@>6a168*/7;
                            }
                            /*@>36d29*/temp/*@>32446*/ = /*@>64fac*/rtConstP./*@>6b5aa*/RSDecoder_table1/*@>6390a*/[/*@>63906*/temp/*@>63904*/ - /*@>63907*/1];
                        }
                        /*@>36d1f*/RSDecoder_OmegaZ/*@>32433*/[/*@>36d21*/RSDecoder_OmegaZActual_idx_0]/*@>6a737*/ ^= /*@>36d23*/temp;
                        /*@>32463*/if ((intVal/*@>32465*/ == /*@>36d3b*/0)/*@>32464*/ || (/*@>6390d*/RSDecoder_Syndrome/*@>6390f*/[/*@>6390c*/1]/*@>32469*/ == /*@>36d3e*/0)) {
                            /*@>36d48*/temp/*@>32482*/ = /*@>6a171*/0;
                        } else {
                            /*@>36d3f*/temp/*@>3246e*/ = (/*@>64fb4*/rtConstP./*@>6b5ad*/RSDecoder_table2/*@>6391c*/[intVal/*@>63916*/ - /*@>63919*/1]/*@>32471*/ + /*@>64fba*/rtConstP./*@>6b5b0*/RSDecoder_table2/*@>6392b*/[/*@>63926*/RSDecoder_Syndrome/*@>63925*/[/*@>63927*/1]/*@>63923*/ - /*@>63928*/1])/*@>32470*/ % /*@>36d47*/7;
                            /*@>32485*/if (/*@>36d4b*/temp/*@>32486*/ == /*@>36d4d*/0) {
                                /*@>36d4e*/temp/*@>3248d*/ = /*@>6a174*/7;
                            }
                            /*@>36d5b*/temp/*@>324a5*/ = /*@>64fce*/rtConstP./*@>6b5b6*/RSDecoder_table1/*@>6394a*/[/*@>63946*/temp/*@>63944*/ - /*@>63947*/1];
                        }
                        /*@>36d51*/RSDecoder_OmegaZ/*@>32492*/[/*@>36d53*/RSDecoder_OmegaZActual_idx_0/*@>32494*/ + /*@>36d61*/1]/*@>6a739*/ ^= /*@>36d55*/temp;
                        /*@>324c2*/if ((intVal/*@>324c4*/ == /*@>36d6f*/0)/*@>324c3*/ || (/*@>6394d*/RSDecoder_Syndrome/*@>6394f*/[/*@>6394c*/2]/*@>324c8*/ == /*@>36d72*/0)) {
                            /*@>36d7c*/temp/*@>324e1*/ = /*@>6a17a*/0;
                        } else {
                            /*@>36d73*/temp/*@>324cd*/ = (/*@>64fec*/rtConstP./*@>6b5c2*/RSDecoder_table2/*@>6397a*/[intVal/*@>63974*/ - /*@>63977*/1]/*@>324d0*/ + /*@>64ff2*/rtConstP./*@>6b5c5*/RSDecoder_table2/*@>63989*/[/*@>63984*/RSDecoder_Syndrome/*@>63983*/[/*@>63985*/2]/*@>63981*/ - /*@>63986*/1])/*@>324cf*/ % /*@>36d7b*/7;
                            /*@>324e4*/if (/*@>36d7f*/temp/*@>324e5*/ == /*@>36d81*/0) {
                                /*@>36d82*/temp/*@>324ec*/ = /*@>6a189*/7;
                            }
                            /*@>36d8f*/temp/*@>32504*/ = /*@>64ffe*/rtConstP./*@>6b5c8*/RSDecoder_table1/*@>63999*/[/*@>63995*/temp/*@>63993*/ - /*@>63996*/1];
                        }
                        /*@>36d85*/RSDecoder_OmegaZ/*@>324f1*/[/*@>36d87*/RSDecoder_OmegaZActual_idx_0/*@>324f3*/ + /*@>36d95*/2]/*@>6a73b*/ ^= /*@>36d89*/temp;
                        /*@>32521*/if ((intVal/*@>32523*/ == /*@>36da3*/0)/*@>32522*/ || (/*@>6399c*/RSDecoder_Syndrome/*@>6399e*/[/*@>6399b*/3]/*@>32527*/ == /*@>36da6*/0)) {
                            /*@>36db0*/temp/*@>32540*/ = /*@>6a192*/0;
                        } else {
                            /*@>36da7*/temp/*@>3252c*/ = (/*@>65006*/rtConstP./*@>6b5cb*/RSDecoder_table2/*@>639a6*/[intVal/*@>639a0*/ - /*@>639a3*/1]/*@>3252f*/ + /*@>6500c*/rtConstP./*@>6b5ce*/RSDecoder_table2/*@>639b5*/[/*@>639b0*/RSDecoder_Syndrome/*@>639af*/[/*@>639b1*/3]/*@>639ad*/ - /*@>639b2*/1])/*@>3252e*/ % /*@>36daf*/7;
                            /*@>32543*/if (/*@>36db3*/temp/*@>32544*/ == /*@>36db5*/0) {
                                /*@>36db6*/temp/*@>3254b*/ = /*@>6a195*/7;
                            }
                            /*@>36dc3*/temp/*@>32563*/ = /*@>65024*/rtConstP./*@>6b5d7*/RSDecoder_table1/*@>639ec*/[/*@>639e8*/temp/*@>639e6*/ - /*@>639e9*/1];
                        }
                        /*@>36db9*/RSDecoder_OmegaZ/*@>32550*/[/*@>36dbb*/RSDecoder_OmegaZActual_idx_0/*@>32552*/ + /*@>36dc9*/3]/*@>6a73f*/ ^= /*@>36dbd*/temp;
                    }
                    /*  end of gf_conv()  */
                    /* Disregard terms of x^(2t) and higher in Omega(Z) */
                    /* because we have no knowledge of such terms in S(Z). */
                    /* That is, retain terms up to x^(2t-1) */
                    /*@>363a8*/RSDecoder_OmegaZActual_idx_0/*@>323ab*/ = /*@>638f5*/RSDecoder_OmegaZ/*@>638f7*/[/*@>638f4*/0];
                    /*@>363aa*/RSDecoder_OmegaZActual_idx_1/*@>323b9*/ = /*@>63900*/RSDecoder_OmegaZ/*@>63902*/[/*@>638ff*/1];
                    /*@>363ac*/RSDecoder_OmegaZActual_idx_2/*@>323c7*/ = /*@>63912*/RSDecoder_OmegaZ/*@>63914*/[/*@>63911*/2];
                    /*@>363ae*/RSDecoder_OmegaZActual_idx_3/*@>323d5*/ = /*@>6392e*/RSDecoder_OmegaZ/*@>63930*/[/*@>6392d*/3];
                    /* Compute derivative of PsiZ */
                    /*@>6556d*/rtDW->/*@>6b7b4*/RSDecoder_PsiZDeriv/*@>32384*/[/*@>36ceb*/0]/*@>32383*/ = /*@>63940*/RSDecoder_PsiZ/*@>63942*/[/*@>6393f*/1];
                    /*@>65576*/rtDW->/*@>6b7b7*/RSDecoder_PsiZDeriv/*@>32394*/[/*@>36cf0*/2]/*@>32393*/ = /*@>63970*/RSDecoder_PsiZ/*@>63972*/[/*@>6396f*/3];
                    /*@>6557f*/rtDW->/*@>6b7ba*/RSDecoder_PsiZDeriv/*@>32366*/[/*@>36fbc*/1]/*@>32365*/ = /*@>6a183*/0;
                    /*@>65588*/rtDW->/*@>6b7bd*/RSDecoder_PsiZDeriv/*@>32371*/[/*@>36fbd*/3]/*@>32370*/ = /*@>6a186*/0;
                    /* Find error magnitude at each error location.  Use the expression found on pg. 222 of Wicker. */
/*@>6a420*/                    for (/*@>6a41c*/j/*@>6a41b*/ = /*@>6a41d*/0; /*@>6a412*/j/*@>6a410*/ < /*@>6a414*/noErrorStatus; /*@>6a416*/j/*@>6a73e*/++) {
                        /* Dot product for numerator term */
                        /*@>3681b*/Temp3/*@>b41d*/ = /*@>6a19b*/0;
                        /* Dot product for denominator */
                        /*@>3681e*/Temp4/*@>b4ac*/ = /*@>6a1a1*/0;
                        /*  start of gf_pow():gf_pow raises x^yd  */
                        /*@>44ee3*/if (/*@>63a02*/RSDecoder_Errloc/*@>63a04*/[/*@>63a01*/j]/*@>31b30*/ == /*@>369d7*/0) {
                            /*@>44ee7*/intVal/*@>44ee6*/ = /*@>6a1a7*/1;
                        } else {
                            /*@>369da*/intVal/*@>31b4c*/ = /*@>6503e*/rtConstP./*@>6b5dd*/RSDecoder_table1/*@>63a14*/[/*@>63a11*/6];
                        }
                        /*  end of gf_pow()  */
                        /*@>31b84*/if (/*@>3c2ad*/RSDecoder_OmegaZActual_idx_0/*@>31b85*/ > /*@>369e9*/0) {
                            /*  start of gf_mul: gf_mul multiplies the scalars  a * b */
                            /*@>31ba6*/if (/*@>369ed*/intVal/*@>31bac*/ == /*@>369ef*/0) {
                                /*@>45300*/Temp3/*@>31bd1*/ = /*@>6a1b0*/0;
                            } else {
                                /*@>369f0*/temp/*@>31bbd*/ = (/*@>6505c*/rtConstP./*@>6b5e9*/RSDecoder_table2/*@>63a40*/[/*@>63a3c*/RSDecoder_OmegaZActual_idx_0/*@>63a3a*/ - /*@>63a3d*/1]/*@>31bc0*/ + /*@>65062*/rtConstP./*@>6b5ec*/RSDecoder_table2/*@>63a48*/[/*@>63a44*/intVal/*@>63a42*/ - /*@>63a45*/1])/*@>31bbf*/ % /*@>369f8*/7;
                                /*@>31be2*/if (/*@>36a02*/temp/*@>31be3*/ == /*@>36a04*/0) {
                                    /*@>36a05*/temp/*@>31bfb*/ = /*@>6a1b6*/7;
                                }
                                /*@>45301*/Temp3/*@>31c07*/ = /*@>65080*/rtConstP./*@>6b5f8*/RSDecoder_table1/*@>63a65*/[/*@>63a61*/temp/*@>63a5f*/ - /*@>63a62*/1];
                            }
                            /* end of gf_mul() */
                        }
                        /*  start of gf_pow():gf_pow raises x^yd  */
                        /*@>44ee8*/if (/*@>63a36*/RSDecoder_Errloc/*@>63a38*/[/*@>63a35*/j]/*@>31c19*/ == /*@>36a13*/0) {
                            /*@>44eec*/intVal/*@>44eeb*/ = /*@>6a1b3*/1;
                        } else {
                            /*@>36a16*/intVal/*@>31c35*/ = /*@>6506a*/rtConstP./*@>6b5ef*/RSDecoder_table1/*@>63a4d*/[/*@>63a4a*/6];
                        }
                        /*  end of gf_pow()  */
                        /*@>31c6d*/if (/*@>655e3*/rtDW->/*@>6b7de*/RSDecoder_PsiZDeriv/*@>63a6a*/[/*@>63a67*/0]/*@>31c6e*/ > /*@>36a25*/0) {
                            /*  start of gf_mul: gf_mul multiplies the scalars  a * b */
                            /*@>31c91*/if ((/*@>655ec*/rtDW->/*@>6b7e1*/RSDecoder_PsiZDeriv/*@>63a7f*/[/*@>63a7c*/0]/*@>31c93*/ == /*@>36a28*/0)/*@>31c92*/ || (/*@>36a29*/intVal/*@>31c9a*/ == /*@>36a2b*/0)) {
                                /*@>45302*/Temp4/*@>31cbc*/ = /*@>6a1bf*/0;
                            } else {
                                /*@>36a2c*/temp/*@>31ca5*/ = (/*@>65094*/rtConstP./*@>6b5fe*/RSDecoder_table2/*@>63a8e*/[/*@>655f5*/rtDW->/*@>6b7e4*/RSDecoder_PsiZDeriv/*@>63a88*/[/*@>63a8a*/0]/*@>63a86*/ - /*@>63a8b*/1]/*@>31ca8*/ + /*@>6509a*/rtConstP./*@>6b601*/RSDecoder_table2/*@>63a96*/[/*@>63a92*/intVal/*@>63a90*/ - /*@>63a93*/1])/*@>31ca7*/ % /*@>36a34*/7;
                                /*@>31cc5*/if (/*@>36a38*/temp/*@>31cc6*/ == /*@>36a3a*/0) {
                                    /*@>36a3b*/temp/*@>31cd8*/ = /*@>6a1c5*/7;
                                }
                                /*@>45303*/Temp4/*@>31ce2*/ = /*@>650b0*/rtConstP./*@>6b60a*/RSDecoder_table1/*@>63ac5*/[/*@>63ac1*/temp/*@>63abf*/ - /*@>63ac2*/1];
                            }
                            /* end of gf_mul() */
                        }
                        /*  start of gf_pow():gf_pow raises x^yd  */
                        /*  start of gf_div():gf_div divides the scalars x/b */
                        /*@>31d22*/if (/*@>63a9a*/RSDecoder_Errloc/*@>63a9c*/[/*@>63a99*/j]/*@>31d23*/ == /*@>36a53*/0) {
                            /*@>36a64*/temp/*@>31d54*/ = /*@>6a1c2*/1;
                        } else {
                            /*@>36a5c*/temp/*@>31d42*/ = /*@>650a2*/rtConstP./*@>6b604*/RSDecoder_table1/*@>63abd*/[/*@>63ab0*/6/*@>63aaf*/ - /*@>650a8*/rtConstP./*@>6b607*/RSDecoder_table2/*@>63ab2*/[/*@>63ab7*/RSDecoder_Errloc/*@>63ab6*/[/*@>63ab9*/j]/*@>63ab4*/ - /*@>63aba*/1]];
                        }
                        /*  start of gf_mul: gf_mul multiplies the scalars  a * b */
                        /*@>31d77*/if (/*@>36a74*/temp/*@>31d78*/ == /*@>36a76*/0) {
                            /*@>36a7d*/intVal/*@>31d90*/ = /*@>6a1c8*/0;
                        } else {
                            /*@>36a77*/temp/*@>31d7f*/ = /*@>650b8*/rtConstP./*@>6b60d*/RSDecoder_table2/*@>63acd*/[/*@>63ac9*/temp/*@>63ac7*/ - /*@>63aca*/1]/*@>31d81*/ % /*@>36a7c*/7;
                            /*@>31d9e*/if (/*@>36a86*/temp/*@>31d9f*/ == /*@>36a88*/0) {
                                /*@>36a95*/temp/*@>31dc4*/ = /*@>6a1cb*/7;
                            }
                            /*@>36a9b*/intVal/*@>31dd7*/ = /*@>650c0*/rtConstP./*@>6b610*/RSDecoder_table1/*@>63ad5*/[/*@>63ad1*/temp/*@>63acf*/ - /*@>63ad2*/1];
                        }
                        /* end of gf_mul() */
                        /*  end of gf_div() */
                        /*@>31d1d*/if (/*@>36a4c*/intVal/*@>53800*/ != /*@>36a4e*/0) {
                            /*@>36a54*/temp/*@>31d2b*/ = /*@>650c8*/rtConstP./*@>6b613*/RSDecoder_table2/*@>63add*/[/*@>63ad9*/intVal/*@>63ad7*/ - /*@>63ada*/1]/*@>31d2d*/ % /*@>36a59*/7;
                            /*@>31d5a*/if (/*@>36a66*/temp/*@>31d5b*/ == /*@>36a68*/0) {
                                /*@>36a69*/temp/*@>31d63*/ = /*@>6a1ce*/7;
                            }
                            /*@>36a6c*/intVal/*@>31d69*/ = /*@>650d0*/rtConstP./*@>6b616*/RSDecoder_table1/*@>63ae5*/[/*@>63ae1*/temp/*@>63adf*/ - /*@>63ae2*/1];
                        }
                        /*  end of gf_pow()  */
                        /*@>31d72*/if (/*@>3c2b1*/RSDecoder_OmegaZActual_idx_1/*@>31d73*/ > /*@>36a73*/0) {
                            /*  start of gf_mul: gf_mul multiplies the scalars  a * b */
                            /*@>31d94*/if (/*@>36a83*/intVal/*@>31d9a*/ == /*@>36a85*/0) {
                                /*@>36a92*/intVal/*@>31dbf*/ = /*@>6a1d1*/0;
                            } else {
                                /*@>36a89*/temp/*@>31dab*/ = (/*@>650d8*/rtConstP./*@>6b619*/RSDecoder_table2/*@>63aed*/[/*@>63ae9*/RSDecoder_OmegaZActual_idx_1/*@>63ae7*/ - /*@>63aea*/1]/*@>31dae*/ + /*@>650de*/rtConstP./*@>6b61c*/RSDecoder_table2/*@>63af5*/[/*@>63af1*/intVal/*@>63aef*/ - /*@>63af2*/1])/*@>31dad*/ % /*@>36a91*/7;
                                /*@>31dd0*/if (/*@>36a98*/temp/*@>31dd1*/ == /*@>36a9a*/0) {
                                    /*@>36aa0*/temp/*@>31de9*/ = /*@>6a1d7*/7;
                                }
                                /*@>36aa3*/intVal/*@>31df5*/ = /*@>650f4*/rtConstP./*@>6b625*/RSDecoder_table1/*@>63b24*/[/*@>63b20*/temp/*@>63b1e*/ - /*@>63b21*/1];
                            }
                            /* end of gf_mul() */
                            /*@>36aa8*/Temp3/*@>6a744*/ ^= /*@>36aac*/intVal;
                        }
                        /*  start of gf_pow():gf_pow raises x^yd  */
                        /*  start of gf_div():gf_div divides the scalars x/b */
                        /*@>31e0b*/if (/*@>63af9*/RSDecoder_Errloc/*@>63afb*/[/*@>63af8*/j]/*@>31e0c*/ == /*@>36ab5*/0) {
                            /*@>36ac6*/temp/*@>31e3d*/ = /*@>6a1d4*/1;
                        } else {
                            /*@>36abe*/temp/*@>31e2b*/ = /*@>650e6*/rtConstP./*@>6b61f*/RSDecoder_table1/*@>63b1c*/[/*@>63b0f*/6/*@>63b0e*/ - /*@>650ec*/rtConstP./*@>6b622*/RSDecoder_table2/*@>63b11*/[/*@>63b16*/RSDecoder_Errloc/*@>63b15*/[/*@>63b18*/j]/*@>63b13*/ - /*@>63b19*/1]];
                        }
                        /*  start of gf_mul: gf_mul multiplies the scalars  a * b */
                        /*@>31e63*/if (/*@>36ad6*/temp/*@>31e64*/ == /*@>36ad8*/0) {
                            /*@>36adf*/intVal/*@>31e7c*/ = /*@>6a1da*/0;
                        } else {
                            /*@>36ad9*/temp/*@>31e6b*/ = /*@>650fc*/rtConstP./*@>6b628*/RSDecoder_table2/*@>63b2c*/[/*@>63b28*/temp/*@>63b26*/ - /*@>63b29*/1]/*@>31e6d*/ % /*@>36ade*/7;
                            /*@>31e8c*/if (/*@>36ae8*/temp/*@>31e8d*/ == /*@>36aea*/0) {
                                /*@>36af7*/temp/*@>31eaf*/ = /*@>6a1dd*/7;
                            }
                            /*@>36afd*/intVal/*@>31eba*/ = /*@>65104*/rtConstP./*@>6b62b*/RSDecoder_table1/*@>63b34*/[/*@>63b30*/temp/*@>63b2e*/ - /*@>63b31*/1];
                        }
                        /* end of gf_mul() */
                        /*  end of gf_div() */
                        /*@>31e06*/if (/*@>36aae*/intVal/*@>537ff*/ != /*@>36ab0*/0) {
                            /*@>36ab6*/temp/*@>31e14*/ = /*@>6510c*/rtConstP./*@>6b62e*/RSDecoder_table2/*@>63b3c*/[/*@>63b38*/intVal/*@>63b36*/ - /*@>63b39*/1]/*@>31e16*/ % /*@>36abb*/7;
                            /*@>31e43*/if (/*@>36ac8*/temp/*@>31e44*/ == /*@>36aca*/0) {
                                /*@>36acb*/temp/*@>31e4c*/ = /*@>6a1e0*/7;
                            }
                            /*@>36ace*/intVal/*@>31e52*/ = /*@>65116*/rtConstP./*@>6b631*/RSDecoder_table1/*@>63b49*/[/*@>63b45*/temp/*@>63b43*/ - /*@>63b46*/1];
                        }
                        /*  end of gf_pow()  */
                        /*@>31e5b*/if (/*@>655fe*/rtDW->/*@>6b7e7*/RSDecoder_PsiZDeriv/*@>63b41*/[/*@>63b3e*/1]/*@>31e5c*/ > /*@>36ad5*/0) {
                            /*  start of gf_mul: gf_mul multiplies the scalars  a * b */
                            /*@>31e7f*/if ((/*@>65607*/rtDW->/*@>6b7ea*/RSDecoder_PsiZDeriv/*@>63b4e*/[/*@>63b4b*/1]/*@>31e81*/ == /*@>36ae4*/0)/*@>31e80*/ || (/*@>36ae5*/intVal/*@>31e88*/ == /*@>36ae7*/0)) {
                                /*@>36af4*/intVal/*@>31eaa*/ = /*@>6a1e3*/0;
                            } else {
                                /*@>36aeb*/temp/*@>31e93*/ = (/*@>65120*/rtConstP./*@>6b634*/RSDecoder_table2/*@>63b5d*/[/*@>65610*/rtDW->/*@>6b7ed*/RSDecoder_PsiZDeriv/*@>63b57*/[/*@>63b59*/1]/*@>63b55*/ - /*@>63b5a*/1]/*@>31e96*/ + /*@>65126*/rtConstP./*@>6b637*/RSDecoder_table2/*@>63b65*/[/*@>63b61*/intVal/*@>63b5f*/ - /*@>63b62*/1])/*@>31e95*/ % /*@>36af3*/7;
                                /*@>31eb3*/if (/*@>36afa*/temp/*@>31eb4*/ == /*@>36afc*/0) {
                                    /*@>36b02*/temp/*@>31ec6*/ = /*@>6a1e9*/7;
                                }
                                /*@>36b05*/intVal/*@>31ed0*/ = /*@>6513c*/rtConstP./*@>6b640*/RSDecoder_table1/*@>63b94*/[/*@>63b90*/temp/*@>63b8e*/ - /*@>63b91*/1];
                            }
                            /* end of gf_mul() */
                            /*@>36b0a*/Temp4/*@>6a745*/ ^= /*@>36b0e*/intVal;
                        }
                        /*  start of gf_pow():gf_pow raises x^yd  */
                        /*  start of gf_div():gf_div divides the scalars x/b */
                        /*@>31f10*/if (/*@>63b69*/RSDecoder_Errloc/*@>63b6b*/[/*@>63b68*/j]/*@>31f11*/ == /*@>36b1c*/0) {
                            /*@>36b2d*/temp/*@>31f42*/ = /*@>6a1e6*/1;
                        } else {
                            /*@>36b25*/temp/*@>31f30*/ = /*@>6512e*/rtConstP./*@>6b63a*/RSDecoder_table1/*@>63b8c*/[/*@>63b7f*/6/*@>63b7e*/ - /*@>65134*/rtConstP./*@>6b63d*/RSDecoder_table2/*@>63b81*/[/*@>63b86*/RSDecoder_Errloc/*@>63b85*/[/*@>63b88*/j]/*@>63b83*/ - /*@>63b89*/1]];
                        }
                        /*  start of gf_mul: gf_mul multiplies the scalars  a * b */
                        /*@>31f65*/if (/*@>36b3d*/temp/*@>31f66*/ == /*@>36b3f*/0) {
                            /*@>36b46*/intVal/*@>31f7e*/ = /*@>6a1ec*/0;
                        } else {
                            /*@>36b40*/temp/*@>31f6d*/ = /*@>65144*/rtConstP./*@>6b643*/RSDecoder_table2/*@>63b9c*/[/*@>63b98*/temp/*@>63b96*/ - /*@>63b99*/1]/*@>31f6f*/ % /*@>36b45*/7;
                            /*@>31f8c*/if (/*@>36b4f*/temp/*@>31f8d*/ == /*@>36b51*/0) {
                                /*@>36b5e*/temp/*@>31fb2*/ = /*@>6a1ef*/7;
                            }
                            /*@>36b64*/intVal/*@>31fc5*/ = /*@>6514c*/rtConstP./*@>6b646*/RSDecoder_table1/*@>63ba4*/[/*@>63ba0*/temp/*@>63b9e*/ - /*@>63ba1*/1];
                        }
                        /* end of gf_mul() */
                        /*  end of gf_div() */
                        /*@>31f0b*/if (/*@>36b15*/intVal/*@>537fe*/ != /*@>36b17*/0) {
                            /*@>36b1d*/temp/*@>31f19*/ = (/*@>65154*/rtConstP./*@>6b649*/RSDecoder_table2/*@>63bac*/[/*@>63ba8*/intVal/*@>63ba6*/ - /*@>63ba9*/1]/*@>37171*/ << /*@>3b3b8*/1)/*@>31f1b*/ % /*@>36b22*/7;
                            /*@>31f48*/if (/*@>36b2f*/temp/*@>31f49*/ == /*@>36b31*/0) {
                                /*@>36b32*/temp/*@>31f51*/ = /*@>6a1f2*/7;
                            }
                            /*@>36b35*/intVal/*@>31f57*/ = /*@>6515c*/rtConstP./*@>6b64c*/RSDecoder_table1/*@>63bb4*/[/*@>63bb0*/temp/*@>63bae*/ - /*@>63bb1*/1];
                        }
                        /*  end of gf_pow()  */
                        /*@>31f60*/if (/*@>3c2b5*/RSDecoder_OmegaZActual_idx_2/*@>31f61*/ > /*@>36b3c*/0) {
                            /*  start of gf_mul: gf_mul multiplies the scalars  a * b */
                            /*@>31f82*/if (/*@>36b4c*/intVal/*@>31f88*/ == /*@>36b4e*/0) {
                                /*@>36b5b*/intVal/*@>31fad*/ = /*@>6a1f5*/0;
                            } else {
                                /*@>36b52*/temp/*@>31f99*/ = (/*@>65164*/rtConstP./*@>6b64f*/RSDecoder_table2/*@>63bbc*/[/*@>63bb8*/RSDecoder_OmegaZActual_idx_2/*@>63bb6*/ - /*@>63bb9*/1]/*@>31f9c*/ + /*@>6516a*/rtConstP./*@>6b652*/RSDecoder_table2/*@>63bc4*/[/*@>63bc0*/intVal/*@>63bbe*/ - /*@>63bc1*/1])/*@>31f9b*/ % /*@>36b5a*/7;
                                /*@>31fbe*/if (/*@>36b61*/temp/*@>31fbf*/ == /*@>36b63*/0) {
                                    /*@>36b69*/temp/*@>31fd7*/ = /*@>6a1fb*/7;
                                }
                                /*@>36b6c*/intVal/*@>31fe3*/ = /*@>65180*/rtConstP./*@>6b65b*/RSDecoder_table1/*@>63bf3*/[/*@>63bef*/temp/*@>63bed*/ - /*@>63bf0*/1];
                            }
                            /* end of gf_mul() */
                            /*@>36b71*/Temp3/*@>6a746*/ ^= /*@>36b75*/intVal;
                        }
                        /*  start of gf_pow():gf_pow raises x^yd  */
                        /*  start of gf_div():gf_div divides the scalars x/b */
                        /*@>31ff9*/if (/*@>63bc8*/RSDecoder_Errloc/*@>63bca*/[/*@>63bc7*/j]/*@>31ffa*/ == /*@>36b7e*/0) {
                            /*@>36b8f*/temp/*@>3202b*/ = /*@>6a1f8*/1;
                        } else {
                            /*@>36b87*/temp/*@>32019*/ = /*@>65172*/rtConstP./*@>6b655*/RSDecoder_table1/*@>63beb*/[/*@>63bde*/6/*@>63bdd*/ - /*@>65178*/rtConstP./*@>6b658*/RSDecoder_table2/*@>63be0*/[/*@>63be5*/RSDecoder_Errloc/*@>63be4*/[/*@>63be7*/j]/*@>63be2*/ - /*@>63be8*/1]];
                        }
                        /*  start of gf_mul: gf_mul multiplies the scalars  a * b */
                        /*@>32051*/if (/*@>36b9f*/temp/*@>32052*/ == /*@>36ba1*/0) {
                            /*@>36ba8*/intVal/*@>3206a*/ = /*@>6a1fe*/0;
                        } else {
                            /*@>36ba2*/temp/*@>32059*/ = /*@>65188*/rtConstP./*@>6b65e*/RSDecoder_table2/*@>63bfb*/[/*@>63bf7*/temp/*@>63bf5*/ - /*@>63bf8*/1]/*@>3205b*/ % /*@>36ba7*/7;
                            /*@>3207a*/if (/*@>36bb1*/temp/*@>3207b*/ == /*@>36bb3*/0) {
                                /*@>36bc0*/temp/*@>3209d*/ = /*@>6a201*/7;
                            }
                            /*@>36bc6*/intVal/*@>320a8*/ = /*@>65190*/rtConstP./*@>6b661*/RSDecoder_table1/*@>63c03*/[/*@>63bff*/temp/*@>63bfd*/ - /*@>63c00*/1];
                        }
                        /* end of gf_mul() */
                        /*  end of gf_div() */
                        /*@>31ff4*/if (/*@>36b77*/intVal/*@>537fd*/ != /*@>36b79*/0) {
                            /*@>36b7f*/temp/*@>32002*/ = (/*@>65198*/rtConstP./*@>6b664*/RSDecoder_table2/*@>63c0b*/[/*@>63c07*/intVal/*@>63c05*/ - /*@>63c08*/1]/*@>37168*/ << /*@>3b3ba*/1)/*@>32004*/ % /*@>36b84*/7;
                            /*@>32031*/if (/*@>36b91*/temp/*@>32032*/ == /*@>36b93*/0) {
                                /*@>36b94*/temp/*@>3203a*/ = /*@>6a204*/7;
                            }
                            /*@>36b97*/intVal/*@>32040*/ = /*@>651a2*/rtConstP./*@>6b667*/RSDecoder_table1/*@>63c18*/[/*@>63c14*/temp/*@>63c12*/ - /*@>63c15*/1];
                        }
                        /*  end of gf_pow()  */
                        /*@>32049*/if (/*@>65619*/rtDW->/*@>6b7f0*/RSDecoder_PsiZDeriv/*@>63c10*/[/*@>63c0d*/2]/*@>3204a*/ > /*@>36b9e*/0) {
                            /*  start of gf_mul: gf_mul multiplies the scalars  a * b */
                            /*@>3206d*/if ((/*@>65622*/rtDW->/*@>6b7f3*/RSDecoder_PsiZDeriv/*@>63c1d*/[/*@>63c1a*/2]/*@>3206f*/ == /*@>36bad*/0)/*@>3206e*/ || (/*@>36bae*/intVal/*@>32076*/ == /*@>36bb0*/0)) {
                                /*@>36bbd*/intVal/*@>32098*/ = /*@>6a207*/0;
                            } else {
                                /*@>36bb4*/temp/*@>32081*/ = (/*@>651ac*/rtConstP./*@>6b66a*/RSDecoder_table2/*@>63c2c*/[/*@>6562b*/rtDW->/*@>6b7f6*/RSDecoder_PsiZDeriv/*@>63c26*/[/*@>63c28*/2]/*@>63c24*/ - /*@>63c29*/1]/*@>32084*/ + /*@>651b2*/rtConstP./*@>6b66d*/RSDecoder_table2/*@>63c34*/[/*@>63c30*/intVal/*@>63c2e*/ - /*@>63c31*/1])/*@>32083*/ % /*@>36bbc*/7;
                                /*@>320a1*/if (/*@>36bc3*/temp/*@>320a2*/ == /*@>36bc5*/0) {
                                    /*@>36bcb*/temp/*@>320b4*/ = /*@>6a20d*/7;
                                }
                                /*@>36bce*/intVal/*@>320be*/ = /*@>651c8*/rtConstP./*@>6b676*/RSDecoder_table1/*@>63c63*/[/*@>63c5f*/temp/*@>63c5d*/ - /*@>63c60*/1];
                            }
                            /* end of gf_mul() */
                            /*@>36bd3*/Temp4/*@>6a747*/ ^= /*@>36bd7*/intVal;
                        }
                        /*  start of gf_pow():gf_pow raises x^yd  */
                        /*  start of gf_div():gf_div divides the scalars x/b */
                        /*@>320fe*/if (/*@>63c38*/RSDecoder_Errloc/*@>63c3a*/[/*@>63c37*/j]/*@>320ff*/ == /*@>36be5*/0) {
                            /*@>36bf6*/temp/*@>32130*/ = /*@>6a20a*/1;
                        } else {
                            /*@>36bee*/temp/*@>3211e*/ = /*@>651ba*/rtConstP./*@>6b670*/RSDecoder_table1/*@>63c5b*/[/*@>63c4e*/6/*@>63c4d*/ - /*@>651c0*/rtConstP./*@>6b673*/RSDecoder_table2/*@>63c50*/[/*@>63c55*/RSDecoder_Errloc/*@>63c54*/[/*@>63c57*/j]/*@>63c52*/ - /*@>63c58*/1]];
                        }
                        /*  start of gf_mul: gf_mul multiplies the scalars  a * b */
                        /*@>32153*/if (/*@>36c06*/temp/*@>32154*/ == /*@>36c08*/0) {
                            /*@>36c0f*/intVal/*@>3216c*/ = /*@>6a210*/0;
                        } else {
                            /*@>36c09*/temp/*@>3215b*/ = /*@>651d0*/rtConstP./*@>6b679*/RSDecoder_table2/*@>63c6b*/[/*@>63c67*/temp/*@>63c65*/ - /*@>63c68*/1]/*@>3215d*/ % /*@>36c0e*/7;
                            /*@>3217a*/if (/*@>36c18*/temp/*@>3217b*/ == /*@>36c1a*/0) {
                                /*@>36c27*/temp/*@>321a0*/ = /*@>6a213*/7;
                            }
                            /*@>36c2d*/intVal/*@>321b3*/ = /*@>651d8*/rtConstP./*@>6b67c*/RSDecoder_table1/*@>63c73*/[/*@>63c6f*/temp/*@>63c6d*/ - /*@>63c70*/1];
                        }
                        /* end of gf_mul() */
                        /*  end of gf_div() */
                        /*@>320f9*/if (/*@>36bde*/intVal/*@>537fc*/ != /*@>36be0*/0) {
                            /*@>36be6*/temp/*@>32107*/ = /*@>651e0*/rtConstP./*@>6b67f*/RSDecoder_table2/*@>63c7b*/[/*@>63c77*/intVal/*@>63c75*/ - /*@>63c78*/1]/*@>3715d*/ * /*@>363b3*/3/*@>32109*/ % /*@>36beb*/7;
                            /*@>32136*/if (/*@>36bf8*/temp/*@>32137*/ == /*@>36bfa*/0) {
                                /*@>36bfb*/temp/*@>3213f*/ = /*@>6a216*/7;
                            }
                            /*@>36bfe*/intVal/*@>32145*/ = /*@>651e8*/rtConstP./*@>6b682*/RSDecoder_table1/*@>63c83*/[/*@>63c7f*/temp/*@>63c7d*/ - /*@>63c80*/1];
                        }
                        /*  end of gf_pow()  */
                        /*@>3214e*/if (/*@>3c2b9*/RSDecoder_OmegaZActual_idx_3/*@>3214f*/ > /*@>36c05*/0) {
                            /*  start of gf_mul: gf_mul multiplies the scalars  a * b */
                            /*@>32170*/if (/*@>36c15*/intVal/*@>32176*/ == /*@>36c17*/0) {
                                /*@>36c24*/intVal/*@>3219b*/ = /*@>6a219*/0;
                            } else {
                                /*@>36c1b*/temp/*@>32187*/ = (/*@>651f0*/rtConstP./*@>6b685*/RSDecoder_table2/*@>63c8b*/[/*@>63c87*/RSDecoder_OmegaZActual_idx_3/*@>63c85*/ - /*@>63c88*/1]/*@>3218a*/ + /*@>651f6*/rtConstP./*@>6b688*/RSDecoder_table2/*@>63c93*/[/*@>63c8f*/intVal/*@>63c8d*/ - /*@>63c90*/1])/*@>32189*/ % /*@>36c23*/7;
                                /*@>321ac*/if (/*@>36c2a*/temp/*@>321ad*/ == /*@>36c2c*/0) {
                                    /*@>36c32*/temp/*@>321c5*/ = /*@>6a21f*/7;
                                }
                                /*@>36c35*/intVal/*@>321d1*/ = /*@>6520c*/rtConstP./*@>6b691*/RSDecoder_table1/*@>63cc2*/[/*@>63cbe*/temp/*@>63cbc*/ - /*@>63cbf*/1];
                            }
                            /* end of gf_mul() */
                            /*@>36c3a*/Temp3/*@>6a748*/ ^= /*@>36c3e*/intVal;
                        }
                        /*  start of gf_pow():gf_pow raises x^yd  */
                        /*  start of gf_div():gf_div divides the scalars x/b */
                        /*@>321e7*/if (/*@>63c97*/RSDecoder_Errloc/*@>63c99*/[/*@>63c96*/j]/*@>321e8*/ == /*@>36c47*/0) {
                            /*@>36c58*/temp/*@>32219*/ = /*@>6a21c*/1;
                        } else {
                            /*@>36c50*/temp/*@>32207*/ = /*@>651fe*/rtConstP./*@>6b68b*/RSDecoder_table1/*@>63cba*/[/*@>63cad*/6/*@>63cac*/ - /*@>65204*/rtConstP./*@>6b68e*/RSDecoder_table2/*@>63caf*/[/*@>63cb4*/RSDecoder_Errloc/*@>63cb3*/[/*@>63cb6*/j]/*@>63cb1*/ - /*@>63cb7*/1]];
                        }
                        /*  start of gf_mul: gf_mul multiplies the scalars  a * b */
                        /*@>3223f*/if (/*@>36c68*/temp/*@>32240*/ == /*@>36c6a*/0) {
                            /*@>36c71*/intVal/*@>32258*/ = /*@>6a222*/0;
                        } else {
                            /*@>36c6b*/temp/*@>32247*/ = /*@>65214*/rtConstP./*@>6b694*/RSDecoder_table2/*@>63cca*/[/*@>63cc6*/temp/*@>63cc4*/ - /*@>63cc7*/1]/*@>32249*/ % /*@>36c70*/7;
                            /*@>32268*/if (/*@>36c7a*/temp/*@>32269*/ == /*@>36c7c*/0) {
                                /*@>36c89*/temp/*@>3228b*/ = /*@>6a225*/7;
                            }
                            /*@>36c8f*/intVal/*@>32296*/ = /*@>6521c*/rtConstP./*@>6b697*/RSDecoder_table1/*@>63cd2*/[/*@>63cce*/temp/*@>63ccc*/ - /*@>63ccf*/1];
                        }
                        /* end of gf_mul() */
                        /*  end of gf_div() */
                        /*@>321e2*/if (/*@>36c40*/intVal/*@>537fb*/ != /*@>36c42*/0) {
                            /*@>36c48*/temp/*@>321f0*/ = /*@>65224*/rtConstP./*@>6b69a*/RSDecoder_table2/*@>63cda*/[/*@>63cd6*/intVal/*@>63cd4*/ - /*@>63cd7*/1]/*@>37159*/ * /*@>363b1*/3/*@>321f2*/ % /*@>36c4d*/7;
                            /*@>3221f*/if (/*@>36c5a*/temp/*@>32220*/ == /*@>36c5c*/0) {
                                /*@>36c5d*/temp/*@>32228*/ = /*@>6a228*/7;
                            }
                            /*@>36c60*/intVal/*@>3222e*/ = /*@>6522e*/rtConstP./*@>6b69d*/RSDecoder_table1/*@>63ce7*/[/*@>63ce3*/temp/*@>63ce1*/ - /*@>63ce4*/1];
                        }
                        /*  end of gf_pow()  */
                        /*@>32237*/if (/*@>65634*/rtDW->/*@>6b7f9*/RSDecoder_PsiZDeriv/*@>63cdf*/[/*@>63cdc*/3]/*@>32238*/ > /*@>36c67*/0) {
                            /*  start of gf_mul: gf_mul multiplies the scalars  a * b */
                            /*@>3225b*/if ((/*@>6563d*/rtDW->/*@>6b7fc*/RSDecoder_PsiZDeriv/*@>63cec*/[/*@>63ce9*/3]/*@>3225d*/ == /*@>36c76*/0)/*@>3225c*/ || (/*@>36c77*/intVal/*@>32264*/ == /*@>36c79*/0)) {
                                /*@>36c86*/intVal/*@>32286*/ = /*@>6a22b*/0;
                            } else {
                                /*@>36c7d*/temp/*@>3226f*/ = (/*@>65238*/rtConstP./*@>6b6a0*/RSDecoder_table2/*@>63cfb*/[/*@>65646*/rtDW->/*@>6b7ff*/RSDecoder_PsiZDeriv/*@>63cf5*/[/*@>63cf7*/3]/*@>63cf3*/ - /*@>63cf8*/1]/*@>32272*/ + /*@>6523e*/rtConstP./*@>6b6a3*/RSDecoder_table2/*@>63d03*/[/*@>63cff*/intVal/*@>63cfd*/ - /*@>63d00*/1])/*@>32271*/ % /*@>36c85*/7;
                                /*@>3228f*/if (/*@>36c8c*/temp/*@>32290*/ == /*@>36c8e*/0) {
                                    /*@>36c94*/temp/*@>322a2*/ = /*@>6a231*/7;
                                }
                                /*@>36c97*/intVal/*@>322ac*/ = /*@>65254*/rtConstP./*@>6b6ac*/RSDecoder_table1/*@>63d20*/[/*@>63d1c*/temp/*@>63d1a*/ - /*@>63d1d*/1];
                            }
                            /* end of gf_mul() */
                            /*@>36c9c*/Temp4/*@>6a749*/ ^= /*@>36ca0*/intVal;
                        }
                        /* Re-use space in Temp1 */
                        /*  start of gf_div():gf_div divides the scalars x/b */
                        /*@>b53f*/if (/*@>36821*/Temp4/*@>b53e*/ == /*@>36825*/0) {
                            /*@>36826*/temp/*@>b542*/ = /*@>6a22e*/1;
                        } else {
                            /*@>36828*/temp/*@>b549*/ = /*@>65246*/rtConstP./*@>6b6a6*/RSDecoder_table1/*@>63d18*/[/*@>63d0e*/6/*@>63d0d*/ - /*@>6524c*/rtConstP./*@>6b6a9*/RSDecoder_table2/*@>63d10*/[/*@>63d14*/Temp4/*@>63d12*/ - /*@>63d15*/1]];
                        }
                        /*  start of gf_mul: gf_mul multiplies the scalars  a * b */
                        /*@>b54f*/if ((/*@>3682a*/temp/*@>b54d*/ == /*@>3682d*/0)/*@>b54e*/ || (/*@>36823*/Temp3/*@>b54c*/ == /*@>3682c*/0)) {
                            /*@>3682e*/intVal/*@>b551*/ = /*@>6a234*/0;
                        } else {
                            /*@>36832*/temp/*@>b55a*/ = (/*@>6525c*/rtConstP./*@>6b6af*/RSDecoder_table2/*@>63d28*/[/*@>63d24*/temp/*@>63d22*/ - /*@>63d25*/1]/*@>b558*/ + /*@>65262*/rtConstP./*@>6b6b2*/RSDecoder_table2/*@>63d30*/[/*@>63d2c*/Temp3/*@>63d2a*/ - /*@>63d2d*/1])/*@>b559*/ % /*@>36831*/7;
                            /*@>b55d*/if (/*@>36834*/temp/*@>b55c*/ == /*@>36836*/0) {
                                /*@>36837*/temp/*@>b55f*/ = /*@>6a237*/7;
                            }
                            /*@>3683a*/intVal/*@>b563*/ = /*@>6526a*/rtConstP./*@>6b6b5*/RSDecoder_table1/*@>63d38*/[/*@>63d34*/temp/*@>63d32*/ - /*@>63d35*/1];
                        }
                        /* end of gf_mul() */
                        /*  end of gf_div() */
                        /* Find exponent representations of Errloc ==> get actual error locations */
                        /* Correct the current error */
                        /*@>4bbb3*/temp/*@>4bbb5*/ = /*@>363cc*/6/*@>2a929*/ - /*@>65272*/rtConstP./*@>6b6b8*/RSDecoder_table2/*@>63d49*/[/*@>63d43*/RSDecoder_Errloc/*@>63d42*/[/*@>63d45*/j]/*@>63d40*/ - /*@>63d46*/1];
                        /*@>6564f*/rtDW->/*@>6b802*/RSDecoder_CCode/*@>2a983*/[temp]/*@>6a74a*/ ^= /*@>36866*/intVal;
                    }
                    /*  end of correctErrors()  */
                    /* Assign outputs.  Reduce cnumerr by the number of punctures and erasures. */
                    /*  start of assignOutputs():Populate output vectors with proper data */
                    /* Corrected message.  If there is a decoding failure, return the input message. */
                    /*@>6559a*/rtDW->/*@>6b7c3*/RSDecoder/*@>322d2*/[/*@>36ca7*/ForEach_itr/*@>37150*/ * /*@>36ca9*/3]/*@>322d1*/ = /*@>322db*/(uint32_T)/*@>655a1*/rtDW->/*@>6b7c6*/RSDecoder_CCode/*@>639f9*/[/*@>639f6*/0];
                    /*@>655aa*/rtDW->/*@>6b7c9*/RSDecoder/*@>322e6*/[/*@>36caf*/ForEach_itr/*@>3714d*/ * /*@>36cb1*/3/*@>322e8*/ + /*@>36cb4*/1]/*@>322e5*/ = /*@>322ef*/(uint32_T)/*@>655b1*/rtDW->/*@>6b7cc*/RSDecoder_CCode/*@>639fe*/[/*@>639fb*/1];
                    /*@>655d3*/rtDW->/*@>6b7d8*/RSDecoder/*@>322fa*/[/*@>36cb8*/ForEach_itr/*@>3714a*/ * /*@>36cba*/3/*@>322fc*/ + /*@>36cbd*/2]/*@>322f9*/ = /*@>32303*/(uint32_T)/*@>655da*/rtDW->/*@>6b7db*/RSDecoder_CCode/*@>63a0f*/[/*@>63a0c*/2];
                    /* Optional output for # of errors corrected */
                    /* Parity of corrected codeword. If it is punctured, remove the punctured symbols. */
                    /* If there is a decoding failure, return the input parity. */
                    /*  end of assignOutputs()  */
                }
            }
        }
    }
}
/* {E!d56}End of S-Function (scomberlekamp): '<S6>/RS Decoder' */

/* {S!d58}S-Function (scominttobit): '<S6>/Integer to Bit Converter' incorporates:
 *  S-Function (scomberlekamp): '<S6>/RS Decoder'
 */
/*  end of COMM_DoBerlekamp()  */
/* Integer to Bit Conversion */
/*@>2b6b2*/for (/*@>6a2a7*/RSDecoder_OmegaZActual_idx_0 = /*@>6a2a6*/0; /*@>6a2b1*/RSDecoder_OmegaZActual_idx_0 < /*@>6a2af*/2400; /*@>6a2ad*/RSDecoder_OmegaZActual_idx_0/*@>6a714*/++) {
    uint32_T u;
    /*@>36841*/ForEach_itr/*@>c02c*/ = (/*@>3683d*/RSDecoder_OmegaZActual_idx_0/*@>c029*/ + /*@>3683f*/1)/*@>371e0*/ * /*@>36840*/3;
    /*@>36843*/u/*@>c030*/ = /*@>652f8*/rtDW->/*@>6b6d6*/RSDecoder/*@>63598*/[/*@>63595*/RSDecoder_OmegaZActual_idx_0];
    /*@>65311*/rtDW->/*@>6b6df*/IntegertoBitConverter/*@>3192a*/[/*@>36923*/ForEach_itr/*@>3192c*/ - /*@>36925*/1]/*@>31929*/ = /*@>3909f*/(int8_T)(/*@>36926*/u/*@>371df*/ & /*@>36928*/1U);
    /*@>36929*/u/*@>6a716*/ >>= /*@>3692d*/1U;
    /*@>65333*/rtDW->/*@>6b6eb*/IntegertoBitConverter/*@>31946*/[/*@>3c616*/ForEach_itr/*@>4b522*/ - /*@>36937*/2]/*@>31945*/ = /*@>390b6*/(int8_T)(/*@>36938*/u/*@>371de*/ & /*@>3693a*/1U);
    /*@>65345*/rtDW->/*@>6b6ee*/IntegertoBitConverter/*@>31962*/[/*@>3d33e*/ForEach_itr/*@>4b526*/ - /*@>36949*/3]/*@>31961*/ = /*@>390d3*/(int8_T)(/*@>3c626*/u/*@>3c624*/ >> /*@>3c627*/1U/*@>371dd*/ & /*@>3694c*/1U);
}
/* {E!d58}End of S-Function (scominttobit): '<S6>/Integer to Bit Converter' */

/* {S!d60}DataTypeConversion: '<S7>/Conversion' incorporates:
 *  S-Function (scominttobit): '<S6>/Integer to Bit Converter'
 */
/*@>26909*/for (/*@>6a296*/RSDecoder_OmegaZActual_idx_0 = /*@>6a295*/0; /*@>6a2a0*/RSDecoder_OmegaZActual_idx_0 < /*@>6a29e*/7200; /*@>6a29c*/RSDecoder_OmegaZActual_idx_0/*@>6a715*/++) {
    /*@>3653c*/rtY_descr_in/*@>28c67*/[/*@>3653a*/RSDecoder_OmegaZActual_idx_0]/*@>268fa*/ = (/*@>39963*/(uint8_T)/*@>6532a*/rtDW->/*@>6b6e8*/IntegertoBitConverter/*@>635ae*/[/*@>635ab*/RSDecoder_OmegaZActual_idx_0]/*@>371e6*/ != /*@>371e4*/0);
}
/* {S!d62}S-Function (scomscram2): '<S3>/Descrambler' incorporates:
 *  DataTypeConversion: '<S7>/Conversion'
 */
/*@>5d30f*/memset(&/*@>58aaa*/shiftReg/*@>58aab*/[/*@>58aa7*/0], /*@>6a0cc*/0, /*@>58ab0*/sizeof(int32_T)/*@>69ceb*/ << /*@>69cea*/4U);
/*@>2b636*/for (/*@>6a265*/j = /*@>6a264*/0; /*@>6a26f*/j < /*@>6a26d*/7200; /*@>6a26b*/j/*@>6a717*/++) {
    /*@>4bb5b*/inv/*@>4bb5d*/ = /*@>635ba*/rtY_descr_in/*@>635bc*/[/*@>635b9*/j];
    /*@>36847*/ForEach_itr/*@>c0b5*/ = /*@>4bb5f*/inv;
/*@>2b66a*/    for (/*@>6a285*/RSDecoder_OmegaZActual_idx_0 = /*@>6a284*/0; /*@>6a28f*/RSDecoder_OmegaZActual_idx_0 < /*@>6a28d*/16; /*@>6a28b*/RSDecoder_OmegaZActual_idx_0/*@>6a718*/++) {
        /*@>3684b*/ForEach_itr/*@>6a71a*/ -= /*@>371fa*/(uint8_T)(/*@>64e34*/rtConstP./*@>6b52c*/Descrambler_Polynomial/*@>635dc*/[/*@>635d8*/RSDecoder_OmegaZActual_idx_0/*@>635d6*/ + /*@>635d9*/1]/*@>371f6*/ * /*@>635e0*/shiftReg/*@>635e2*/[/*@>635df*/RSDecoder_OmegaZActual_idx_0]);
    }
    while/*@<c0ca*/ (/*@>3684d*/ForEach_itr/*@>c0c8*/ < /*@>3684f*/0) {
        /*@>36853*/ForEach_itr/*@>6a71b*/ += /*@>36852*/2;
    }
    /*@>6538e*/rtDW->/*@>6b709*/Descrambler/*@>c0d2*/[/*@>36855*/j]/*@>c0d5*/ = (/*@>3688c*/ForEach_itr/*@>14400*/ % /*@>3688e*/2/*@>371ea*/ != /*@>371e8*/0);
/*@>2b64f*/    for (/*@>6a276*/RSDecoder_OmegaZActual_idx_0 = /*@>6a275*/14; /*@>6a280*/RSDecoder_OmegaZActual_idx_0 >= /*@>6a27e*/0; /*@>6a27c*/RSDecoder_OmegaZActual_idx_0/*@>6a71d*/--) {
        /*@>364f6*/shiftReg/*@>28f52*/[/*@>364f4*/RSDecoder_OmegaZActual_idx_0/*@>2e0ef*/ + /*@>36900*/1]/*@>c0e3*/ = /*@>63619*/shiftReg/*@>6361b*/[/*@>63618*/RSDecoder_OmegaZActual_idx_0];
    }
    /*@>364fd*/shiftReg/*@>28f1d*/[/*@>364fc*/0U]/*@>c0e8*/ = inv;
}
/* {E!d62}End of S-Function (scomscram2): '<S3>/Descrambler' */

/* {S!d49}Outputs for Iterator SubSystem: '<S5>/bit_concat_per_col' incorporates:
 *  ForEach: '<S8>/For Each'
 */
/*@>2b5f6*/for (/*@>6a243*/ForEach_itr = /*@>6a242*/0; /*@>6a24d*/ForEach_itr < /*@>6a24b*/900; /*@>6a249*/ForEach_itr/*@>6a719*/++) {
    /* {S!d50}Outputs for Atomic SubSystem: '<S9>/bc4' */
    /* {S!d64}MATLAB Function: '<S10>/bit_concat_unary' incorporates:
 *  ForEachSliceSelector generated from: '<S8>/bits'
 *  S-Function (scomscram2): '<S3>/Descrambler'
 */
/*@>c1f2*/    for (/*@>6a254*/inv = /*@>6a253*/0; /*@>6a25e*/inv < /*@>6a25c*/8; /*@>6a25a*/inv/*@>6a71c*/++) {
        /*@>36505*/y/*@>28eae*/[/*@>36503*/inv]/*@>c1b4*/ = /*@>3997c*/(int8_T)/*@>65397*/rtDW->/*@>6b70c*/Descrambler/*@>63615*/[(/*@>6360f*/ForEach_itr/*@>6360d*/ << /*@>63610*/3)/*@>6360c*/ + /*@>63612*/inv];
    }
    /* {S!d66}ForEachSliceAssignment generated from: '<S8>/bytes' incorporates:
 *  MATLAB Function: '<S10>/bit_concat_unary'
 */
    /*@>3650d*/rtY_data_frame/*@>28e47*/[/*@>3650b*/ForEach_itr]/*@>c16b*/ = /*@>39101*/(uint8_T)(/*@>3998a*/(uint8_T)/*@>635e5*/y/*@>635e7*/[/*@>635e4*/6]/*@>372a5*/ << /*@>36592*/1/*@>3729a*/ | /*@>3998c*/(uint8_T)/*@>635ea*/y/*@>635ec*/[/*@>635e9*/7]/*@>3727d*/ | /*@>39988*/(uint8_T)/*@>635ef*/y/*@>635f1*/[/*@>635ee*/5]/*@>37288*/ << /*@>36593*/2/*@>37260*/ | /*@>39986*/(uint8_T)/*@>635f4*/y/*@>635f6*/[/*@>635f3*/4]/*@>3726b*/ << /*@>36594*/3/*@>37243*/ | /*@>39984*/(uint8_T)/*@>635f9*/y/*@>635fb*/[/*@>635f8*/3]/*@>3724e*/ << /*@>36595*/4/*@>37226*/ | /*@>39982*/(uint8_T)/*@>635fe*/y/*@>63600*/[/*@>635fd*/2]/*@>37231*/ << /*@>36596*/5/*@>37209*/ | /*@>39980*/(uint8_T)/*@>63603*/y/*@>63605*/[/*@>63602*/1]/*@>37214*/ << /*@>36597*/6/*@>1b3fa*/ | /*@>3997e*/(uint8_T)/*@>63608*/y/*@>6360a*/[/*@>63607*/0]/*@>371fc*/ << /*@>36598*/7);
    /* {E!d50}End of Outputs for SubSystem: '<S9>/bc4' */
}
/* {E!d49}End of Outputs for SubSystem: '<S5>/bit_concat_per_col' */

/* {S!d68}Outport: '<Root>/dec_in' incorporates:
 *  Inport: '<Root>/rx_frame'
 */
/*@>5d31c*/memcpy(&/*@>57965*/rtY_dec_in/*@>57966*/[/*@>57955*/0], &/*@>5796f*/rtU_v2x_rx_bb_in/*@>57970*/[/*@>57962*/128], /*@>57964*/16800U/*@>57973*/ * /*@>57972*/sizeof(boolean_T));
%<SLibInsertSolverResetCode()>\
%closefile cfgTxt
%<cfgTxt>
%<LibSetSystemField(system, "CachedOutputLocalVars", localVarDecl)>
%endfunction
%function OutputsFcnProtoType(block, system) Output
%assign fcnProtoType = ""
%openfile fcnProtoType
static void Outputs(\
%assign comma = ""
%closefile fcnProtoType
%<SLibCG_SetFcnProtoType(0, 0, fcnProtoType)>
%endfunction
